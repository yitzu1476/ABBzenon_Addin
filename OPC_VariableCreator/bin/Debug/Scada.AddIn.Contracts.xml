<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Scada.AddIn.Contracts</name>
  </assembly>
  <members>
    <member name="T:Scada.AddIn.Contracts.ActivatedEventArgs" />
    <member name="T:Scada.AddIn.Contracts.ActiveProjectChangedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ActiveProjectChangedEventArgs.Project" />
    <member name="T:Scada.AddIn.Contracts.ApplicationPath" />
    <member name="T:Scada.AddIn.Contracts.BackgroundGraphicAlignment" />
    <member name="T:Scada.AddIn.Contracts.ClosingEventArgs" />
    <member name="T:Scada.AddIn.Contracts.DataTextFormat" />
    <member name="T:Scada.AddIn.Contracts.DeactivatedEventArgs" />
    <member name="T:Scada.AddIn.Contracts.DebugPrintStyle" />
    <member name="T:Scada.AddIn.Contracts.DefaultStartupModes" />
    <member name="T:Scada.AddIn.Contracts.DeleteResult" />
    <member name="T:Scada.AddIn.Contracts.ExitingEventArgs" />
    <member name="T:Scada.AddIn.Contracts.FolderPath" />
    <member name="T:Scada.AddIn.Contracts.FrameBorderStyle" />
    <member name="T:Scada.AddIn.Contracts.IApplication">
      <summary>Includes the whole application of the control system</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IApplication.ComputerName">
      <summary>Returns the name of the computer on which the Runtime is running.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IApplication.FilePath">
      <summary>Returns the path from which the application was started.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IApplication.IsEnabled">
      <summary>Sets the visibility of the application main window.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IApplication.IsHidden">
      <summary>This property returns/sets the visibility of the main window.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IApplication.License" />
    <member name="P:Scada.AddIn.Contracts.IApplication.Name">
      <summary>Returns the name of the application.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IApplication.ProjectCollection">
      <summary>Returns the collection of projects loaded in the Runtime.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IApplication.RuntimeState">
      <summary>Returns the Application run state.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IApplication.Version">
      <summary>Returns the version of the application.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IApplication.VersionNumber">
      <summary>Returns the Application version.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IApplication.WindowHandle">
      <summary>Returns the handle of the main window of the application.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IApplication.Workspace">
      <summary>Returns the ZenWorkspace object (Editor Only).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IApplication.BringWindowToTop">
      <summary>Switches the main window of the application to the foreground.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IApplication.Close">
      <summary>Closes the application.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IApplication.DebugPrint">
      <summary>Sends a message to the output window of the editor.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IApplication.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IApplication.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IApplication.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IApplication.GetPath">
      <summary>Gets the absolute path of the specified directory.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IApplication.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.IApplication.Closing">
      <summary>This event is fired when the application is about to be closed.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.IBehavior" />
    <member name="T:Scada.AddIn.Contracts.IEditorApplication" />
    <member name="T:Scada.AddIn.Contracts.IEditorServiceExtension" />
    <member name="T:Scada.AddIn.Contracts.IEditorWizardExtension" />
    <member name="T:Scada.AddIn.Contracts.IFile">
      <summary>This collection makes it possible to manage the files in a list.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IFile.IsLocked">
      <summary>Returns true when the current module is Locked by another user (editor).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IFile.Name" />
    <member name="M:Scada.AddIn.Contracts.IFile.AcceptChanges">
      <summary>Save module modifications to server (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IFile.EnableChanges">
      <summary>Allow module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IFile.IsChangeEnabled">
      <summary>Returns true when the current module checked out by the current user (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IFile.IsDifferent">
      <summary>Returns true when the local and server version are different (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IFile.UndoChanges">
      <summary>Undo module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IFile.UpdateLocalVersion">
      <summary>Get the latest version from the server (editor).</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.IFileManagement">
      <summary>This collection represents the directories and files of the files node.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IFileManagement.Parent">
      <summary>Returns the parent of the FileManager Object.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IFileManagement.GetFolder">
      <summary>Returns the folder object for the given folder.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.IFolder">
      <summary>This collection contains the folder object for the specified folder.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IFolder.FileCount">
      <summary>Returns the amount of files located in the folder.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IFolder.FolderCount">
      <summary>Returns the amount of folders located in the folder.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IFolder.Name">
      <summary>Name of the folder.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IFolder.AddFile">
      <summary>Inserts the given file into the folder.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IFolder.CreateFolder">
      <summary>Creates a subfolder.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IFolder.DeleteFile">
      <summary>Deletes the file from the folder.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IFolder.DeleteFolder">
      <summary>Deletes the folder.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IFolder.GetFileItem">
      <summary>Returns the file, at given index, from the folder.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IFolder.GetFolder">
      <summary>Returns the sub-folder, at given index, from the folder.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ImportMdiTemplateItemsResult" />
    <member name="T:Scada.AddIn.Contracts.InterlockingState" />
    <member name="T:Scada.AddIn.Contracts.IProject" />
    <member name="P:Scada.AddIn.Contracts.IProject.AlarmMessageList">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.AllocationCollection">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.AutomaticLineColoring">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.BatchControl">
      <summary>Returns the BatchManager object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.ChronologicalEventList">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.ColorPaletteCollection">
      <summary>Return the ColorPalettes object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.ContextListNodeCollection">
      <summary>Returns the TextListManager object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.DataTypeCollection">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.DriverCollection">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.EditorArchiveCollection">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.EquipmentModeling">
      <summary>Return the SystemModelManager object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.FileManagement">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.FontListCollection">
      <summary>Returns the FontList object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.FrameCollection" />
    <member name="P:Scada.AddIn.Contracts.IProject.FunctionCollection" />
    <member name="P:Scada.AddIn.Contracts.IProject.InterlockingCollection">
      <summary>Returns the Interlockings object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.IsGlobal" />
    <member name="P:Scada.AddIn.Contracts.IProject.IsLocked">
      <summary>Returns true when the current module is Locked by another user (editor).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.IsNetworkActive" />
    <member name="P:Scada.AddIn.Contracts.IProject.LanguageTable">
      <summary>Returns the Language Table</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.MeasuringUnitCollection">
      <summary>Returns the Units object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.MenuCollection">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.MessageControl">
      <summary>Returns the MessageControl object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.MonitorResolutionHeight">
      <summary>Sets the height of the screen (Editor Only).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.MonitorResolutionWidth">
      <summary>Sets the width of the screen (Editor Only).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.Name" />
    <member name="P:Scada.AddIn.Contracts.IProject.OnlineVariableContainerCollection">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.Parent" />
    <member name="P:Scada.AddIn.Contracts.IProject.Path" />
    <member name="P:Scada.AddIn.Contracts.IProject.ProductionFacilityScheduler">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.ProjectId">
      <summary>Returns the unique Project guid(Read Only).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.ProjectNetworkType" />
    <member name="P:Scada.AddIn.Contracts.IProject.ReactionMatrixCollection" />
    <member name="P:Scada.AddIn.Contracts.IProject.RecipeGroupCollection" />
    <member name="P:Scada.AddIn.Contracts.IProject.RemoteTransport">
      <summary>Returns the remote transport object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.RuntimeArchiveCollection">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.SapFunctionCollection" />
    <member name="P:Scada.AddIn.Contracts.IProject.Scheduler">
      <summary>The scheduler object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.ScreenCollection">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.ScriptCollection" />
    <member name="P:Scada.AddIn.Contracts.IProject.ShiftManagement">
      <summary>The shift management object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.StandardRecipeCollection">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.StyleCollection">
      <summary>Returns the StyleManager object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.SymbolLibrary">
      <summary>Returns the Symbols object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.TimeFunctionCollection">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.UserAdministration">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IProject.VariableCollection">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IProject.AcceptChanges">
      <summary>Save module modifications to server (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IProject.CreateDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IProject.CreateRuntimeFiles">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IProject.EnableChanges">
      <summary>Allow module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IProject.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IProject.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IProject.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IProject.GetFolderPath">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IProject.ImportRuntimeFiles">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IProject.IsChangeEnabled">
      <summary>Returns true when the current module checked out by the current user (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IProject.IsDifferent">
      <summary>Returns true when the local and server version are different (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IProject.Reload" />
    <member name="M:Scada.AddIn.Contracts.IProject.ReplaceProjectLinks">
      <summary>Replaces project links to 'bsSource' with 'bsTarget'.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IProject.SendNetworkMessage">
      <summary>By use of this methode, VBA-Data can be send to another System</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IProject.SetAdditionalInformationPropertyStrings">
      <summary>With this methode the Strings for the UserProperties (Rema and Limits) can be set</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IProject.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IProject.SetFolderPath">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IProject.SetParentProject">
      <summary>Sets the parent project of the current project.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IProject.Translate" />
    <member name="M:Scada.AddIn.Contracts.IProject.UndoChanges">
      <summary>Undo module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IProject.UpdateLocalVersion">
      <summary>Get the latest version from the server (editor).</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.IProject.Activated" />
    <member name="E:Scada.AddIn.Contracts.IProject.Deactivated" />
    <member name="E:Scada.AddIn.Contracts.IProject.MessageDestinationSet">
      <summary>Fired before a message is send.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.IProject.NetworkMessageReceived">
      <summary>This event is fired when NetData is received, it contains the Data-Source, an Id and the actual Data</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.IProject.Reloaded" />
    <member name="E:Scada.AddIn.Contracts.IProject.Reloading" />
    <member name="E:Scada.AddIn.Contracts.IProject.ServerToStandbyChanging" />
    <member name="E:Scada.AddIn.Contracts.IProject.StandbyToServerChanging" />
    <member name="T:Scada.AddIn.Contracts.IProjectCollection" />
    <member name="P:Scada.AddIn.Contracts.IProjectCollection.Count" />
    <member name="P:Scada.AddIn.Contracts.IProjectCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.IProjectCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.IProjectCollection.Parent" />
    <member name="M:Scada.AddIn.Contracts.IProjectCollection.Create">
      <summary>Shows the dialog to create a new project and/or workspace.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IProjectCollection.Create">
      <summary>Shows the dialog to create a new project and/or workspace.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.IProjectServiceExtension" />
    <member name="T:Scada.AddIn.Contracts.IProjectWizardExtension" />
    <member name="T:Scada.AddIn.Contracts.IPropertyParameter" />
    <member name="P:Scada.AddIn.Contracts.IPropertyParameter.Count" />
    <member name="P:Scada.AddIn.Contracts.IPropertyParameter.IsEnabled">
      <summary>Returns whether or not the property is enabled.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IPropertyParameter.GetText">
      <summary>Returns the text of the option at the given index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IPropertyParameter.GetValue">
      <summary>Returns the value of the option at the given index</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.IRuntimeObject" />
    <member name="T:Scada.AddIn.Contracts.IServiceExtension`1" />
    <member name="M:Scada.AddIn.Contracts.IServiceExtension`1.Start" />
    <member name="M:Scada.AddIn.Contracts.IServiceExtension`1.Stop" />
    <member name="T:Scada.AddIn.Contracts.IShowCreateDriverDialogResult" />
    <member name="P:Scada.AddIn.Contracts.IShowCreateDriverDialogResult.Driver" />
    <member name="P:Scada.AddIn.Contracts.IShowCreateDriverDialogResult.Result" />
    <member name="T:Scada.AddIn.Contracts.IShowCreateFunctionDialogResult" />
    <member name="P:Scada.AddIn.Contracts.IShowCreateFunctionDialogResult.Function" />
    <member name="P:Scada.AddIn.Contracts.IShowCreateFunctionDialogResult.Result" />
    <member name="T:Scada.AddIn.Contracts.IShowCreateScreenDialogResult" />
    <member name="P:Scada.AddIn.Contracts.IShowCreateScreenDialogResult.Result" />
    <member name="P:Scada.AddIn.Contracts.IShowCreateScreenDialogResult.Screen" />
    <member name="T:Scada.AddIn.Contracts.IShowCreateVariableDialogResult" />
    <member name="P:Scada.AddIn.Contracts.IShowCreateVariableDialogResult.Result" />
    <member name="P:Scada.AddIn.Contracts.IShowCreateVariableDialogResult.Variable" />
    <member name="T:Scada.AddIn.Contracts.IWizardExtension`1" />
    <member name="M:Scada.AddIn.Contracts.IWizardExtension`1.Run" />
    <member name="T:Scada.AddIn.Contracts.IWorkspace" />
    <member name="P:Scada.AddIn.Contracts.IWorkspace.ActiveProject" />
    <member name="P:Scada.AddIn.Contracts.IWorkspace.EditorArchiveTemplateCollection">
      <summary>Returns a collection of Archive templates (either by name or by index).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IWorkspace.FilePath" />
    <member name="P:Scada.AddIn.Contracts.IWorkspace.Name" />
    <member name="P:Scada.AddIn.Contracts.IWorkspace.Parent" />
    <member name="P:Scada.AddIn.Contracts.IWorkspace.SymbolLibrary">
      <summary>Returns the Symbols object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.IWorkspace.UnloadedProjects" />
    <member name="M:Scada.AddIn.Contracts.IWorkspace.ActivateProject">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IWorkspace.CloseWorkspace">
      <summary>Closes the workspace.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IWorkspace.CopyProject">
      <summary>Creates a copy of the given Project at the given location.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IWorkspace.CreateProjectBackup">
      <summary>Create a backup of the given project.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IWorkspace.CreateWorkspace">
      <summary>Creates a new workspace with the given name at the given location.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IWorkspace.CreateWorkspaceBackup">
      <summary>Creates a backup of the currently workspace.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IWorkspace.GetScreenTemplateCollection">
      <summary>Returns a collection of MDI templates of the specified type (either by name or by index).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IWorkspace.GetScreenTemplateCollection">
      <summary>Returns a collection of MDI templates of the specified type (either by name or by index).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IWorkspace.InsertProject">
      <summary>Inserts the given project into the workspace.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IWorkspace.LoadProject">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IWorkspace.LoadProjectByName">
      <summary>Loads the given project by Name.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IWorkspace.LoadWorkspace">
      <summary>Loads the given workspace file.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IWorkspace.RemoveProject">
      <summary>Removes the given project from the workspace.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IWorkspace.RestoreProjectBackup">
      <summary>Restores the given backup.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IWorkspace.RestoreWorkspaceBackup">
      <summary>Restores the given workspace backup.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IWorkspace.SaveWorkspace">
      <summary>Saves the current workspace.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IWorkspace.SetStartProject">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IWorkspace.UnloadProject">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.IWorkspace.UnloadProject">
      <summary>-</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.IWorkspace.ActiveProjectChanged">
      <summary>Is triggered after the active project in the workspace has changed in the zenon Editor.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.IWorkspace.Exiting" />
    <member name="E:Scada.AddIn.Contracts.IWorkspace.ObjectCreated" />
    <member name="E:Scada.AddIn.Contracts.IWorkspace.ObjectDeleted" />
    <member name="E:Scada.AddIn.Contracts.IWorkspace.ProjectBackupCreated">
      <summary>Event is fired after a project backup has been created.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.IWorkspace.ProjectBackupCreating">
      <summary>Event is fired before a project backup is about to be created.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.IWorkspace.ProjectBackupRestored">
      <summary>Event is fired after a project backup has been restored.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.IWorkspace.ProjectBackupRestoring">
      <summary>Event is fired before a project backup is about to be restored.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.IWorkspace.ProjectLoaded">
      <summary>Event is fired when a project has been loaded (editor only).</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.IWorkspace.ProjectUnloading">
      <summary>Event is fired when a project is about to be unloaded (editor only).</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.IWorkspace.RemoteTransportConnected">
      <summary>Event is fired when a remote transport connection has been established.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.IWorkspace.RemoteTransportConnectionFailed">
      <summary>Event is fired when a connection timeout has occured, and a remote transport connection could not be established.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.IWorkspace.RemoteTransportConnectionTerminated">
      <summary>Event is fired when a remote transport connection has been terminated.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.IWorkspace.RemoteTransportTransferCompleted">
      <summary>Event is fired after a project is transported</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.IWorkspace.RemoteTransportTransferStarting">
      <summary>Event is fired before a project is transported</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.IWorkspace.RuntimeFilesCreated">
      <summary>Event is fired after a project is compiled</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.IWorkspace.RuntimeFilesCreating">
      <summary>Event is fired before a project is compiled</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.IWorkspace.ScreenElementCreated" />
    <member name="E:Scada.AddIn.Contracts.IWorkspace.ScreenElementDeleting" />
    <member name="E:Scada.AddIn.Contracts.IWorkspace.ScreenElementDoubleClicked" />
    <member name="E:Scada.AddIn.Contracts.IWorkspace.Started" />
    <member name="E:Scada.AddIn.Contracts.IWorkspace.WorkspaceChanged" />
    <member name="T:Scada.AddIn.Contracts.MeasuringUnitFormat" />
    <member name="T:Scada.AddIn.Contracts.MessageDestinationSetEventArgs" />
    <member name="P:Scada.AddIn.Contracts.MessageDestinationSetEventArgs.Destination" />
    <member name="P:Scada.AddIn.Contracts.MessageDestinationSetEventArgs.DestinationGuid" />
    <member name="T:Scada.AddIn.Contracts.MultiTouchMode" />
    <member name="T:Scada.AddIn.Contracts.NetworkMessageDestination" />
    <member name="T:Scada.AddIn.Contracts.NetworkMessageReceivedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.NetworkMessageReceivedEventArgs.Data" />
    <member name="P:Scada.AddIn.Contracts.NetworkMessageReceivedEventArgs.Id" />
    <member name="P:Scada.AddIn.Contracts.NetworkMessageReceivedEventArgs.Source" />
    <member name="T:Scada.AddIn.Contracts.ObjectCreatedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ObjectCreatedEventArgs.Item" />
    <member name="T:Scada.AddIn.Contracts.ObjectDeletedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ObjectDeletedEventArgs.Name" />
    <member name="P:Scada.AddIn.Contracts.ObjectDeletedEventArgs.Parent" />
    <member name="T:Scada.AddIn.Contracts.ProjectBackupCreatedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProjectBackupCreatedEventArgs.FilePath" />
    <member name="P:Scada.AddIn.Contracts.ProjectBackupCreatedEventArgs.Guid" />
    <member name="P:Scada.AddIn.Contracts.ProjectBackupCreatedEventArgs.IsSuccessful" />
    <member name="P:Scada.AddIn.Contracts.ProjectBackupCreatedEventArgs.Name" />
    <member name="T:Scada.AddIn.Contracts.ProjectBackupCreatingEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProjectBackupCreatingEventArgs.FilePath" />
    <member name="P:Scada.AddIn.Contracts.ProjectBackupCreatingEventArgs.Guid" />
    <member name="P:Scada.AddIn.Contracts.ProjectBackupCreatingEventArgs.Name" />
    <member name="T:Scada.AddIn.Contracts.ProjectBackupRestoredEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProjectBackupRestoredEventArgs.FilePath" />
    <member name="P:Scada.AddIn.Contracts.ProjectBackupRestoredEventArgs.Guid" />
    <member name="P:Scada.AddIn.Contracts.ProjectBackupRestoredEventArgs.IsSuccessful" />
    <member name="P:Scada.AddIn.Contracts.ProjectBackupRestoredEventArgs.Name" />
    <member name="T:Scada.AddIn.Contracts.ProjectBackupRestoringEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProjectBackupRestoringEventArgs.FilePath" />
    <member name="P:Scada.AddIn.Contracts.ProjectBackupRestoringEventArgs.Guid" />
    <member name="P:Scada.AddIn.Contracts.ProjectBackupRestoringEventArgs.Name" />
    <member name="T:Scada.AddIn.Contracts.ProjectLoadedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProjectLoadedEventArgs.Project" />
    <member name="T:Scada.AddIn.Contracts.ProjectNetworkType" />
    <member name="T:Scada.AddIn.Contracts.ProjectUnloadingEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProjectUnloadingEventArgs.Project" />
    <member name="T:Scada.AddIn.Contracts.ReloadedEventArgs" />
    <member name="T:Scada.AddIn.Contracts.ReloadingEventArgs" />
    <member name="T:Scada.AddIn.Contracts.RemoteTransportConnectedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.RemoteTransportConnectedEventArgs.Project" />
    <member name="T:Scada.AddIn.Contracts.RemoteTransportConnectionFailedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.RemoteTransportConnectionFailedEventArgs.Project" />
    <member name="T:Scada.AddIn.Contracts.RemoteTransportConnectionTerminatedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.RemoteTransportConnectionTerminatedEventArgs.Project" />
    <member name="T:Scada.AddIn.Contracts.RemoteTransportTransferCompletedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.RemoteTransportTransferCompletedEventArgs.IsSuccessful" />
    <member name="P:Scada.AddIn.Contracts.RemoteTransportTransferCompletedEventArgs.Project" />
    <member name="T:Scada.AddIn.Contracts.RemoteTransportTransferStartingEventArgs" />
    <member name="P:Scada.AddIn.Contracts.RemoteTransportTransferStartingEventArgs.Project" />
    <member name="T:Scada.AddIn.Contracts.RuntimeException" />
    <member name="P:System.Exception.Data" />
    <member name="P:System.Exception.HelpLink" />
    <member name="P:System.Exception.HResult" />
    <member name="P:System.Exception.InnerException" />
    <member name="P:System.Exception.Message" />
    <member name="P:System.Exception.Source" />
    <member name="P:System.Exception.StackTrace" />
    <member name="P:System.Exception.TargetSite" />
    <member name="T:Scada.AddIn.Contracts.RuntimeFilesCreatedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.RuntimeFilesCreatedEventArgs.Project" />
    <member name="T:Scada.AddIn.Contracts.RuntimeFilesCreateOption" />
    <member name="T:Scada.AddIn.Contracts.RuntimeFilesCreatingEventArgs" />
    <member name="P:Scada.AddIn.Contracts.RuntimeFilesCreatingEventArgs.Project" />
    <member name="T:Scada.AddIn.Contracts.RuntimeState" />
    <member name="T:Scada.AddIn.Contracts.ScreenElementCreatedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ScreenElementCreatedEventArgs.Element" />
    <member name="T:Scada.AddIn.Contracts.ScreenElementDeletingEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ScreenElementDeletingEventArgs.Element" />
    <member name="T:Scada.AddIn.Contracts.ScreenElementDoubleClickedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ScreenElementDoubleClickedEventArgs.Element" />
    <member name="T:Scada.AddIn.Contracts.ServerToStandbyChangingEventArgs" />
    <member name="T:Scada.AddIn.Contracts.StandbyToServerChangingEventArgs" />
    <member name="T:Scada.AddIn.Contracts.StartedEventArgs" />
    <member name="T:Scada.AddIn.Contracts.WorkspaceChangedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.WorkspaceChangedEventArgs.FilePath" />
    <member name="T:Scada.AddIn.Contracts.AlarmMessageList.AlarmEntryAcknowledgedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.AlarmEntryAcknowledgedEventArgs.Item" />
    <member name="T:Scada.AddIn.Contracts.AlarmMessageList.AlarmEntryClearedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.AlarmEntryClearedEventArgs.Item" />
    <member name="T:Scada.AddIn.Contracts.AlarmMessageList.AlarmEntryReceivedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.AlarmEntryReceivedEventArgs.Item" />
    <member name="T:Scada.AddIn.Contracts.AlarmMessageList.AlarmFieldId" />
    <member name="T:Scada.AddIn.Contracts.AlarmMessageList.BulkChangedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.BulkChangedEventArgs.Xml" />
    <member name="T:Scada.AddIn.Contracts.AlarmMessageList.ChangedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.ChangedEventArgs.Alarm" />
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.ChangedEventArgs.AlarmKey" />
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.ChangedEventArgs.Reason" />
    <member name="T:Scada.AddIn.Contracts.AlarmMessageList.CommentChangedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.CommentChangedEventArgs.Text" />
    <member name="T:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry">
      <summary>The object AlarmItem contains information on an alarm.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry.AcknowledgedTime">
      <summary>Contains the time stamp of the event „acknowledged“.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry.Cause">
      <summary>Cause of the alarm.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry.ClassIndex">
      <summary>Returns the defined alarm class.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry.ClearedTime">
      <summary>Contains the time stamp of the event „cleared“.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry.Comment">
      <summary>Additional text defined by the user.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry.Computer">
      <summary>Returns the name of the computer, on which the action occurred.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry.GroupIndex">
      <summary>Returns the defined alarm group.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry.Identification">
      <summary>TagName of the linked variable</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry.Index">
      <summary>Index of the alarm in the variable limits list or conditions in reaction matrix</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry.Parent">
      <summary>Returns the parent object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry.ProjectName">
      <summary>Returns the name of the project in which the alarm occurred.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry.ReactivatedCount">
      <summary>Returns the number of the reactivations of the alarm.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry.ReactivatedState">
      <summary>Returns the status of the reactivated, violated value.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry.ReactivatedTime">
      <summary>Contains the time stamp of the last event „received“.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry.ReceivedTime">
      <summary>Time of the alarm</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry.State">
      <summary>Status of the variable</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry.Text">
      <summary>Alarmtext of the variable (limit/rema)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry.UserName">
      <summary>Returns the identification of the user that acknowledged the current alarm.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry.Value">
      <summary>Value of the variable</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry.Variable" />
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry.VariableName">
      <summary>This property returns the name of the variable linked to the alarm entry.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry.Acknowledge" />
    <member name="M:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry.Delete">
      <summary>Delete the Alarm</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntry.GetFieldData" />
    <member name="T:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntryCollection">
      <summary>The alarm entries are administered in this collection.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntryCollection.Count">
      <summary>Count of the alarm-items</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntryCollection.IsActive">
      <summary>Alarm-module in-/active</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntryCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmEntryCollection.Parent">
      <summary>Returns the parent object.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.AlarmMessageList.IAlarmFieldData" />
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmFieldData.Text" />
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmFieldData.Type" />
    <member name="T:Scada.AddIn.Contracts.AlarmMessageList.IAlarmMessageList">
      <summary>Provides access to the alarm control system, active alarms and their current status.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmMessageList.IsActive">
      <summary>Alarm-module in-/active</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmMessageList.OnlineAlarmCollection" />
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IAlarmMessageList.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.AlarmMessageList.IAlarmMessageList.Acknowledge">
      <summary>Acknowledge alarm with given parameters</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.AlarmMessageList.IAlarmMessageList.GetAlarmEntryCollection">
      <summary>Returns the alarm-items objects</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.AlarmMessageList.IAlarmMessageList.GetAlarmEntryCollectionAsXml">
      <summary>Returns the alarm-items as XML</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.AlarmMessageList.IAlarmMessageList.GetDynamicProperties">
      <summary>Returns a StringArray of all Dynproperties available for this Object.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.AlarmMessageList.IAlarmMessageList.GetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.AlarmMessageList.IAlarmMessageList.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.AlarmMessageList.IAlarmMessageList.ResetQueryFilter">
      <summary>Resets the QueryFilter</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.AlarmMessageList.IAlarmMessageList.SetDynamicProperty">
      <summary>With DynProperties it is possible to get access to additional Properties/Methods of Objects.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.AlarmMessageList.IAlarmMessageList.AlarmEntryAcknowledged">
      <summary>Event: Is fired by alarm acknowledged...</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.AlarmMessageList.IAlarmMessageList.AlarmEntryCleared">
      <summary>Event: Is fired by alarm going...</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.AlarmMessageList.IAlarmMessageList.AlarmEntryReceived">
      <summary>Event: Is fired by alarm coming...</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.AlarmMessageList.IAlarmMessageList.CommentChanged">
      <summary>Event: Is fired when the usertext has changed...</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.AlarmMessageList.IAlarmMessageList.SelectionChanged">
      <summary>Event: selection array in the alarm list has been changed...</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.AlarmMessageList.IOnlineAlarm" />
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IOnlineAlarm.IsActive" />
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IOnlineAlarm.Name" />
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IOnlineAlarm.OnlineAlarmEventMode">
      <summary>Returns and sets event mode of the online-alarm.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IOnlineAlarm.Parent" />
    <member name="M:Scada.AddIn.Contracts.AlarmMessageList.IOnlineAlarm.Activate">
      <summary>Activates the online-alarm.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.AlarmMessageList.IOnlineAlarm.Deactivate">
      <summary>Deactivates the online-alarm.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.AlarmMessageList.IOnlineAlarm.SetFilter">
      <summary>Sets the filter criteria as XML string.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.AlarmMessageList.IOnlineAlarm.BulkChanged">
      <summary>Event: Is fired with a list of alarm object changes.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.AlarmMessageList.IOnlineAlarm.Changed">
      <summary>Event: Is fired for alarm object change.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.AlarmMessageList.IOnlineAlarmCollection" />
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IOnlineAlarmCollection.Count" />
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IOnlineAlarmCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IOnlineAlarmCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.IOnlineAlarmCollection.Parent" />
    <member name="M:Scada.AddIn.Contracts.AlarmMessageList.IOnlineAlarmCollection.Create" />
    <member name="M:Scada.AddIn.Contracts.AlarmMessageList.IOnlineAlarmCollection.Delete" />
    <member name="T:Scada.AddIn.Contracts.AlarmMessageList.OnlineAlarmChangedEventReason" />
    <member name="T:Scada.AddIn.Contracts.AlarmMessageList.OnlineAlarmEventMode" />
    <member name="T:Scada.AddIn.Contracts.AlarmMessageList.SelectionChangedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.AlarmMessageList.SelectionChangedEventArgs.SelectedItems" />
    <member name="T:Scada.AddIn.Contracts.Allocation.IAllocation" />
    <member name="P:Scada.AddIn.Contracts.Allocation.IAllocation.Id">
      <summary>Set/Get unique ID for the object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Allocation.IAllocation.Name">
      <summary>Set/Get the user-defined name</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Allocation.IAllocation.Parent">
      <summary>Parent of object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Allocation.IAllocation.SourceVariable">
      <summary>Get the linked source variable</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Allocation.IAllocation.TargetVariable">
      <summary>Get the linked target variable</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Allocation.IAllocation.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Allocation.IAllocation.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Allocation.IAllocation.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Allocation.IAllocation.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Allocation.IAllocation.SetSourceVariable">
      <summary>Change source (can be member of another project)</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Allocation.IAllocation.SetTargetVariable">
      <summary>Change target (can be member of another project)</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Allocation.IAllocationCollection" />
    <member name="P:Scada.AddIn.Contracts.Allocation.IAllocationCollection.Count">
      <summary>Returns count of contained objects</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Allocation.IAllocationCollection.IsLocked">
      <summary>Returns true when the current module is Locked by another user (editor).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Allocation.IAllocationCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Allocation.IAllocationCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Allocation.IAllocationCollection.Parent">
      <summary>Parent of object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Allocation.IAllocationCollection.AcceptChanges">
      <summary>Save module modifications to server (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Allocation.IAllocationCollection.Create">
      <summary>Creates and returns a new Object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Allocation.IAllocationCollection.Create">
      <summary>Creates and returns a new Object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Allocation.IAllocationCollection.Delete">
      <summary>Deletes the objects from collection</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Allocation.IAllocationCollection.EnableChanges">
      <summary>Allow module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Allocation.IAllocationCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Allocation.IAllocationCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Allocation.IAllocationCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Allocation.IAllocationCollection.ImportFromXml">
      <summary>Imports the selected XML file</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Allocation.IAllocationCollection.IsChangeEnabled">
      <summary>Returns true when the current module checked out by the current user (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Allocation.IAllocationCollection.IsDifferent">
      <summary>Returns true when the local and server version are different (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Allocation.IAllocationCollection.UndoChanges">
      <summary>Undo module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Allocation.IAllocationCollection.UpdateLocalVersion">
      <summary>Get the latest version from the server (editor).</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.AutomaticLineColoring.DrainLoadType" />
    <member name="T:Scada.AddIn.Contracts.AutomaticLineColoring.FunctionType" />
    <member name="T:Scada.AddIn.Contracts.AutomaticLineColoring.GroundFaultMode" />
    <member name="T:Scada.AddIn.Contracts.AutomaticLineColoring.GroundFaultRecognitionType" />
    <member name="T:Scada.AddIn.Contracts.AutomaticLineColoring.IAutomaticLineColoring" />
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IAutomaticLineColoring.GroundFaultMode">
      <summary>Get/Set the ground fault mode.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IAutomaticLineColoring.LineClusterCount">
      <summary>Returns the number of ALC nodes.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IAutomaticLineColoring.MaxCurrentOverload" />
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IAutomaticLineColoring.Parent">
      <summary>Returns the parent of the ALCEngine Object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IAutomaticLineColoring.ProceduralElementCount">
      <summary>Returns the number of ALC edges.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IAutomaticLineColoring.TopologicalElementAliasCount">
      <summary>Returns the number of ALC alias elements.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IAutomaticLineColoring.TopologicalElementCount">
      <summary>Returns the number of ALC elements.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.AutomaticLineColoring.IAutomaticLineColoring.AcknowledgeGroundFault">
      <summary>Acknowledges a ground fault detection.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.AutomaticLineColoring.IAutomaticLineColoring.AcknowledgeShortFault">
      <summary>Acknowledges a short fault detection.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.AutomaticLineColoring.IAutomaticLineColoring.GetLineCluster">
      <summary>Returns the ALC node at the given index.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.AutomaticLineColoring.IAutomaticLineColoring.GetLineCluster">
      <summary>Returns the ALC node at the given index.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.AutomaticLineColoring.IAutomaticLineColoring.GetLineCluster">
      <summary>Returns the ALC node at the given index.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.AutomaticLineColoring.IAutomaticLineColoring.GetProceduralElement">
      <summary>Returns the ALC edge at the given index.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.AutomaticLineColoring.IAutomaticLineColoring.GetProceduralElement">
      <summary>Returns the ALC edge at the given index.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.AutomaticLineColoring.IAutomaticLineColoring.GetProceduralElement">
      <summary>Returns the ALC edge at the given index.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.AutomaticLineColoring.IAutomaticLineColoring.GetTopologicalElement">
      <summary>Returns the ALC element at the given index.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.AutomaticLineColoring.IAutomaticLineColoring.GetTopologicalElementAlias">
      <summary>Returns the ALC alias element at the given index.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.AutomaticLineColoring.IAutomaticLineColoring.InterlockingChecking">
      <summary>Event: Is fired to check interlockings.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.AutomaticLineColoring.IAutomaticLineColoring.LoadFlowCalculated" />
    <member name="E:Scada.AddIn.Contracts.AutomaticLineColoring.IAutomaticLineColoring.NMinus1Calculated" />
    <member name="E:Scada.AddIn.Contracts.AutomaticLineColoring.IAutomaticLineColoring.Updated" />
    <member name="T:Scada.AddIn.Contracts.AutomaticLineColoring.ILineCluster">
      <summary>Gets informations about the line and procedural elements of a single node in your topology.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ILineCluster.ElementIds">
      <summary>Returns the IDs of the elements the Node is connected with.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ILineCluster.ElementReferences">
      <summary>Returns the reference names of the elements the Node is connected with.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ILineCluster.LinkId">
      <summary>Returns the ID of the linked Source.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ILineCluster.ProceduralElementCount">
      <summary>Returns the number of edges connected to this node.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ILineCluster.ScreenNames">
      <summary>Returns the names of the pictures the Node is in.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ILineCluster.SupplyingSourceIds">
      <summary>Returns the all line states at this node.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.AutomaticLineColoring.ILineCluster.GetProceduralElementItem">
      <summary>Returns the ALC edge at the given index.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.AutomaticLineColoring.InterlockingCheckingEventArgs" />
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.InterlockingCheckingEventArgs.InterlockingResult" />
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.InterlockingCheckingEventArgs.IsUnlockable" />
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.InterlockingCheckingEventArgs.NewState" />
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.InterlockingCheckingEventArgs.ProceduralElement" />
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.InterlockingCheckingEventArgs.Text" />
    <member name="T:Scada.AddIn.Contracts.AutomaticLineColoring.IProceduralElement">
      <summary>Gets information about a selected procedural element.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IProceduralElement.ElementId">
      <summary>Returns the ID of the element the edge is connected with.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IProceduralElement.ElementReference">
      <summary>Returns the reference name of the element the edge is connected with.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IProceduralElement.FunctionType">
      <summary>Returns the type of this ALC edge.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IProceduralElement.GroundFaultRecognitionDisplayVariable">
      <summary>Returns the attached ground fault display Variable if ground fault detection is enabled.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IProceduralElement.GroundFaultRecognitionForwardsVariable">
      <summary>Returns the attached ground fault forward Variable if ground fault detection is enabled.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IProceduralElement.GroundFaultRecognitionReverseVariable">
      <summary>Returns the attached ground fault reverse Variable if ground fault detection is enabled.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IProceduralElement.GroundFaultRecognitionTriggeringVariable">
      <summary>Returns the attached ground fault trigger Variable if ground fault detection is enabled.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IProceduralElement.GroundFaultRecognitionType">
      <summary>Returns the ground fault detection type if the edge is of type Switch.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IProceduralElement.LineClusterOnFirstPort">
      <summary>Returns the first ALC node.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IProceduralElement.LineClusterOnSecondPort">
      <summary>Returns the second ALC node.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IProceduralElement.ReverseSourceId">
      <summary>Returns the reverse Source ID if the edge is of type Trafo.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IProceduralElement.ScreenName">
      <summary>Returns the name of the picture the element is located in.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IProceduralElement.ShortCircuitDetectionDisplayVariable">
      <summary>Returns the attached short fault display Variable if short fault detection is enabled.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IProceduralElement.ShortCircuitDetectionForwardsVariable">
      <summary>Returns the attached short fault forward Variable if short fault detection is enabled.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IProceduralElement.ShortCircuitDetectionReverseVariable">
      <summary>Returns the attached short fault reverse Variable if short fault detection is enabled.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IProceduralElement.ShortCircuitDetectionTriggeringVariable">
      <summary>Returns the attached short fault trigger Variable if short fault detection is enabled.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IProceduralElement.ShortCircuitDetectionType">
      <summary>Returns the short fault detection type if the edge is of type Switch.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IProceduralElement.SourceId">
      <summary>Returns the Source ID if the edge is of type Source or Trafo.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.IProceduralElement.Variable">
      <summary>Returns the attached Variable if the edge is of type Source or Switch.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement">
      <summary>Gets line and procedural elements via an index or from specific Screens and specific Element IDs.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement.CalculatedCurrentVariable">
      <summary>Returns the variable for calculated current</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement.DrainLoadType" />
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement.ElementId">
      <summary>Returns the ID of the element the edge is connected with.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement.ElementReference">
      <summary>Returns the reference name of the element the edge is connected with.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement.FunctionType">
      <summary>Returns the type of this ALC edge.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement.Length">
      <summary>Returns the length</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement.LimitCurrentCarryingCapacityType" />
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement.MaxCurrentDynamicVariable">
      <summary>Returns the variable for maximal current</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement.MaxCurrentStaticValue">
      <summary>Returns the fixed maximal current</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement.MaxLoadDynamicVariable">
      <summary>Returns the variable for load value</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement.MaxLoadFixed">
      <summary>Returns the fixed load value</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement.MeasuredCurrentVariable">
      <summary>Returns the variable for actual current</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement.MeasuredPowerVariable">
      <summary>Returns the variable for actual power</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement.ProtectionReactanceVariable">
      <summary>Returns the variable for protection reactance</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement.Reactance">
      <summary>Returns the reactance</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement.Resistance">
      <summary>Returns the resistance</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement.ReverseSourceId">
      <summary>Returns the reverse Source ID if the edge is of type Trafo.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement.ScreenName">
      <summary>Returns the name of the picture the element is located in.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement.SourceId">
      <summary>Returns the Source ID if the edge is of type Source or Trafo.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement.TopologicalElementsOnFirstPortCount">
      <summary>Returns the number of elements connected to first node.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement.TopologicalElementsOnSecondPortCount">
      <summary>Returns the number of elements connected to second node.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement.Variable">
      <summary>Returns the attached Variable if the edge is of type Source or Switch.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement.GetTopologicalElementOnFirstPort">
      <summary>Returns the the element connected to first node at the given index.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElement.GetTopologicalElementOnSecondPort">
      <summary>Returns the the element connected to second node at the given index.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElementAlias">
      <summary>Gets line and procedural elements via an index or from specific Screens and specific Element IDs.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElementAlias.ElementId">
      <summary>Returns the ID of the element the edge is connected with.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElementAlias.ElementReference">
      <summary>Returns the reference name of the element the edge is connected with.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElementAlias.OriginalTopologicalElement">
      <summary>Returns the original ALC element.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElementAlias.ScreenName">
      <summary>Returns the name of the picture the element is located in.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.AutomaticLineColoring.ITopologicalElementAlias.Type">
      <summary>Returns the type of this ALC edge.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.AutomaticLineColoring.LimitCurrentCarryingCapacityType" />
    <member name="T:Scada.AddIn.Contracts.AutomaticLineColoring.LoadFlowCalculatedEventArgs" />
    <member name="T:Scada.AddIn.Contracts.AutomaticLineColoring.NMinus1CalculatedEventArgs" />
    <member name="T:Scada.AddIn.Contracts.AutomaticLineColoring.ShortCircuitDetectionType" />
    <member name="T:Scada.AddIn.Contracts.AutomaticLineColoring.UpdatedEventArgs" />
    <member name="T:Scada.AddIn.Contracts.BatchControl.ControlRecipeCreateResult" />
    <member name="T:Scada.AddIn.Contracts.BatchControl.ControlRecipeState" />
    <member name="T:Scada.AddIn.Contracts.BatchControl.ControlRecipeStateFilterFlags" />
    <member name="T:Scada.AddIn.Contracts.BatchControl.ExecutionMode" />
    <member name="T:Scada.AddIn.Contracts.BatchControl.ExecutionState" />
    <member name="T:Scada.AddIn.Contracts.BatchControl.IBatchControl">
      <summary>Used to get the template recipe collection.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IBatchControl.Configuration">
      <summary>Returns the Batch configuration</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IBatchControl.Parent">
      <summary>Returns the parent object.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.BatchControl.IBatchControl.GetMasterRecipeCollection">
      <summary>Returns the collection of MasterRecipes</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.BatchControl.IBatchControl.GetSelectedControlRecipeIds">
      <summary>Returns the Ids of the selected control recipes</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.BatchControl.IBatchControl.GetSelectedMasterRecipeIds">
      <summary>Returns the Ids of the selected master recipes</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.BatchControl.IBatchControlConfiguration" />
    <member name="P:Scada.AddIn.Contracts.BatchControl.IBatchControlConfiguration.IsLocked" />
    <member name="P:Scada.AddIn.Contracts.BatchControl.IBatchControlConfiguration.UnitCollection" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IBatchControlConfiguration.AcceptChanges" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IBatchControlConfiguration.EnableChanges" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IBatchControlConfiguration.IsChangeEnabled" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IBatchControlConfiguration.IsDifferent" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IBatchControlConfiguration.UndoChanges" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IBatchControlConfiguration.UpdateLocalVersion" />
    <member name="T:Scada.AddIn.Contracts.BatchControl.IControlRecipe">
      <summary>Instance of a batch master recipe created for a single execution.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.ApprovedTime">
      <summary>Returns the approved time of the master recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.ApprovedUserId">
      <summary>Returns the approved user id of the master recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.ApprovedUserName">
      <summary>Returns the approved user name of the master recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.CreatedTime">
      <summary>Returns the creation time of the control recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.CreatedUserId">
      <summary>Returns the creation user id of the control recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.CreatedUserName">
      <summary>Returns the creation user name of the control recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.Description">
      <summary>Returns the description of the control recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.ExecutionMode">
      <summary>Returns the mode of the recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.ExecutionState">
      <summary>Returns the state of the recipe engine</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.Id">
      <summary>Returns the Id of the control recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.JobId">
      <summary>Returns the job id the control recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.JobVariable">
      <summary>Returns the job variable of the control recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.MasterRecipeDescription">
      <summary>Returns the description of the master recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.MasterRecipeId">
      <summary>Returns the Id of the master recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.MasterRecipeName">
      <summary>Returns the name of the master recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.MasterRecipeSourceVersion">
      <summary>Returns the version of the source master recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.MasterRecipeState">
      <summary>Returns the state of the master recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.MasterRecipeVersion">
      <summary>Returns the version of the master recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.Name">
      <summary>Returns the name of the control recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.OutdatedTime">
      <summary>Returns the outdated time of the master recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.OutdatedUserId">
      <summary>Returns the outdated user id of the master recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.OutdatedUserName">
      <summary>Returns the outdated user name of the master recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.StartedOnHost" />
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.StartedTime">
      <summary>Returns the started time of the control recipes</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.StartedUserId">
      <summary>Returns the started user id of the control recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.StartedUserName">
      <summary>Returns the started user name of the control recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.State">
      <summary>Returns the state of the recipe.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipe.TypeName">
      <summary>Returns the type of the recipe</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.BatchControl.IControlRecipe.SetNameAndDescription">
      <summary>Tries to rename the recipe and sets the description. Returns a result code whether the operation was successful or not.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.BatchControl.IControlRecipeCollection">
      <summary>A collection of the batch control recipes.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipeCollection.Count">
      <summary>Returns the count of items in the collection of control recipes</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipeCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlRecipeCollection.Item" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IControlRecipeCollection.Create">
      <summary>Creates a new control recipe. Returns the Id of the new Recipe or an empty Id if no recipe could be created.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.BatchControl.IControlRecipeCollection.GetItemById">
      <summary>Returns the control recipe item with the specified Id</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.BatchControl.IControlStrategy">
      <summary>A control strategy used in batch phases.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlStrategy.Description">
      <summary>Description of the control strategy</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlStrategy.Name">
      <summary>Name of the control strategy</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IControlStrategy.Number">
      <summary>Strategy number of the control strategy</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.BatchControl.IMasterRecipe">
      <summary>Object with the properties for the recipe.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IMasterRecipe.ApprovedTime">
      <summary>Returns the approved time of the recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IMasterRecipe.ApprovedUserId">
      <summary>Returns the approved user id of the recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IMasterRecipe.ApprovedUserName">
      <summary>Returns the approved user name of the recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IMasterRecipe.Description">
      <summary>Returns the description of the recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IMasterRecipe.ExecutionMode">
      <summary>Returns the mode of the recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IMasterRecipe.ExecutionState">
      <summary>Returns the state of the recipe engine</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IMasterRecipe.Id">
      <summary>Returns the Id of the recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IMasterRecipe.Name">
      <summary>Returns the name of the recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IMasterRecipe.OutdatedTime">
      <summary>Returns the outdated time of the recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IMasterRecipe.OutdatedUserId">
      <summary>Returns the outdated user id of the recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IMasterRecipe.OutdatedUserName">
      <summary>Returns the outdated user name of the recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IMasterRecipe.SourceVersion">
      <summary>Returns the version of the source recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IMasterRecipe.StartedOnHost" />
    <member name="P:Scada.AddIn.Contracts.BatchControl.IMasterRecipe.State" />
    <member name="P:Scada.AddIn.Contracts.BatchControl.IMasterRecipe.TypeName">
      <summary>Returns the type of the recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IMasterRecipe.Version">
      <summary>Returns the version of recipe</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.BatchControl.IMasterRecipe.GetControlRecipeCollection">
      <summary>Returns the collection of control recipes</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.BatchControl.IMasterRecipe.SetNameAndDescription">
      <summary>Tries to rename the recipe and sets the description. Returns a result code whether the operation was successful or not.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.BatchControl.IMasterRecipeCollection">
      <summary>Lists all template recipes.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IMasterRecipeCollection.Count">
      <summary>Returns the amount of items in the collection.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IMasterRecipeCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.BatchControl.IMasterRecipeCollection.Item" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IMasterRecipeCollection.GetItemById">
      <summary>Returns the master recipe item with the specified Id</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.BatchControl.IOperation">
      <summary>A sub-recipe, that can then be used in master recipes.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IOperation.ChartId">
      <summary>Id of the chart operation object in the recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IOperation.Description">
      <summary>Description of the operation</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IOperation.Name">
      <summary>Name of the operation</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.BatchControl.IPhase" />
    <member name="P:Scada.AddIn.Contracts.BatchControl.IPhase.Description" />
    <member name="P:Scada.AddIn.Contracts.BatchControl.IPhase.Id" />
    <member name="P:Scada.AddIn.Contracts.BatchControl.IPhase.Name" />
    <member name="T:Scada.AddIn.Contracts.BatchControl.IPhaseConfigurationCollection" />
    <member name="P:Scada.AddIn.Contracts.BatchControl.IPhaseConfigurationCollection.Count" />
    <member name="P:Scada.AddIn.Contracts.BatchControl.IPhaseConfigurationCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.BatchControl.IPhaseConfigurationCollection.Item" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IPhaseConfigurationCollection.Delete" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IPhaseConfigurationCollection.Delete" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IPhaseConfigurationCollection.DeleteById" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IPhaseConfigurationCollection.ExportToXml" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IPhaseConfigurationCollection.ExportToXml" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IPhaseConfigurationCollection.ExportToXml" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IPhaseConfigurationCollection.ExportToXmlById" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IPhaseConfigurationCollection.GetItemById" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IPhaseConfigurationCollection.ImportFromXml" />
    <member name="T:Scada.AddIn.Contracts.BatchControl.IPhaseEditedTagIdCollection">
      <summary>Object that contains the changes made in the phase.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IPhaseEditedTagIdCollection.Count" />
    <member name="P:Scada.AddIn.Contracts.BatchControl.IPhaseEditedTagIdCollection.Item" />
    <member name="T:Scada.AddIn.Contracts.BatchControl.IRecipeId">
      <summary>Contains the master recipe Id and the control recipe Id for a recipe.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IRecipeId.ControlRecipeId">
      <summary>Control recipe Id of the recipe.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IRecipeId.MasterRecipeId">
      <summary>Master recipe Id of the recipe.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.BatchControl.IRecipePhase">
      <summary>A functional block, that encapsulates the communication with the plc for a specific procedure.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IRecipePhase.ChartId">
      <summary>Id of the chart phase object in the recipe or operation</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IRecipePhase.ControlStrategy">
      <summary>Currently active control strategy</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IRecipePhase.Description">
      <summary>Description of the phase</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IRecipePhase.ExecutionCounter">
      <summary>Execution counter of the phase</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IRecipePhase.ExecutionState" />
    <member name="P:Scada.AddIn.Contracts.BatchControl.IRecipePhase.Name">
      <summary>Name of the phase</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IRecipePhase.TagCollection">
      <summary>Collection for the tags of the phase.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.BatchControl.ITag">
      <summary>Encapsulates a variable for the purposes of the batch execution.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.ITag.CurrentValue">
      <summary>Current value of the variable linked as the current value variable on the tag</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.ITag.CurrentValueVariable">
      <summary>For command tags this is the variable that shows the current value for the tag on the PLC.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.ITag.DataType">
      <summary>Data type for the tag</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.ITag.Description">
      <summary>Description of the tag</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.ITag.Id">
      <summary>ID of the tag</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.ITag.Name">
      <summary>Name of the tag</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.ITag.TagType">
      <summary>Type of the tag</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.ITag.TagValue">
      <summary>Value that is to be written on the tag variable</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.ITag.TagVariable">
      <summary>Main Variable of the tag. For command tags the value is written onto this variable.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.ITag.TagVariableValue">
      <summary>Current value of the variable linked as the tag variable on the tag</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.ITag.Unit">
      <summary>Unit of the tag</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.BatchControl.ITagCollection">
      <summary>A collection of tags.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.ITagCollection.Count">
      <summary>Number of tags in the collection.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.ITagCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.BatchControl.ITagCollection.Item" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.ITagCollection.GetItemById">
      <summary>Gets a tag by its ID.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.BatchControl.ITagValue">
      <summary>Value of a tag that is written to the variable of the tag.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.ITagValue.BoolValue">
      <summary>Bool value</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.ITagValue.Duration">
      <summary>Duration value in seconds</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.ITagValue.NumericValue">
      <summary>Numerical value</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.ITagValue.StringValue">
      <summary>String value</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.BatchControl.IUnit" />
    <member name="P:Scada.AddIn.Contracts.BatchControl.IUnit.Description" />
    <member name="P:Scada.AddIn.Contracts.BatchControl.IUnit.Id" />
    <member name="P:Scada.AddIn.Contracts.BatchControl.IUnit.Name" />
    <member name="P:Scada.AddIn.Contracts.BatchControl.IUnit.PhaseConfigurationCollection" />
    <member name="T:Scada.AddIn.Contracts.BatchControl.IUnitCollection" />
    <member name="P:Scada.AddIn.Contracts.BatchControl.IUnitCollection.Count" />
    <member name="P:Scada.AddIn.Contracts.BatchControl.IUnitCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.BatchControl.IUnitCollection.Item" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IUnitCollection.Delete" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IUnitCollection.Delete" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IUnitCollection.DeleteById" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IUnitCollection.ExportToXml" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IUnitCollection.ExportToXml" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IUnitCollection.ExportToXml" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IUnitCollection.ExportToXmlById" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IUnitCollection.GetItemById" />
    <member name="M:Scada.AddIn.Contracts.BatchControl.IUnitCollection.ImportFromXml" />
    <member name="T:Scada.AddIn.Contracts.BatchControl.IVariableData" />
    <member name="P:Scada.AddIn.Contracts.BatchControl.IVariableData.HigherState">
      <summary>Last 32 bits of the variable state</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IVariableData.LowerState">
      <summary>First 32 bits of the variable state</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IVariableData.Time">
      <summary>Timestamp of the value</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IVariableData.TimeMilliSeconds">
      <summary>Milliseconds of the timestamp</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.BatchControl.IVariableData.Value">
      <summary>Value of the variable</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.BatchControl.MasterRecipeState" />
    <member name="T:Scada.AddIn.Contracts.BatchControl.PhaseCommunicationErrorState" />
    <member name="T:Scada.AddIn.Contracts.BatchControl.PhaseEscapeState" />
    <member name="T:Scada.AddIn.Contracts.BatchControl.PhaseExecutionError" />
    <member name="T:Scada.AddIn.Contracts.BatchControl.PhasePlcErrorState" />
    <member name="T:Scada.AddIn.Contracts.BatchControl.PhaseRuntimeEvent" />
    <member name="T:Scada.AddIn.Contracts.BatchControl.PhaseState" />
    <member name="T:Scada.AddIn.Contracts.BatchControl.RecipeRenameResult" />
    <member name="T:Scada.AddIn.Contracts.BatchControl.TagBoolValue" />
    <member name="T:Scada.AddIn.Contracts.BatchControl.TagDataType" />
    <member name="T:Scada.AddIn.Contracts.BatchControl.TagType" />
    <member name="T:Scada.AddIn.Contracts.ChronologicalEventList.BulkChangedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.BulkChangedEventArgs.Xml" />
    <member name="T:Scada.AddIn.Contracts.ChronologicalEventList.ChangedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.ChangedEventArgs.Cel" />
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.ChangedEventArgs.CelKey" />
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.ChangedEventArgs.Reason" />
    <member name="T:Scada.AddIn.Contracts.ChronologicalEventList.CommentChangedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.CommentChangedEventArgs.Text" />
    <member name="T:Scada.AddIn.Contracts.ChronologicalEventList.EventEntryAddedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.EventEntryAddedEventArgs.Item" />
    <member name="T:Scada.AddIn.Contracts.ChronologicalEventList.EventFieldId" />
    <member name="T:Scada.AddIn.Contracts.ChronologicalEventList.IChronologicalEventList">
      <summary>Represents the "Chronological Event List" an offers the feature to write user defined Events into the list or react on entries in the list.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IChronologicalEventList.OnlineCelCollection" />
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IChronologicalEventList.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ChronologicalEventList.IChronologicalEventList.AddEventEntry">
      <summary>Creates a new cel-item (only runtime)</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ChronologicalEventList.IChronologicalEventList.AddEventEntry">
      <summary>Creates a new cel-item (only runtime)</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ChronologicalEventList.IChronologicalEventList.AddEventEntry">
      <summary>Creates a new cel-item (only runtime)</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ChronologicalEventList.IChronologicalEventList.GetDynamicProperties" />
    <member name="M:Scada.AddIn.Contracts.ChronologicalEventList.IChronologicalEventList.GetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.ChronologicalEventList.IChronologicalEventList.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ChronologicalEventList.IChronologicalEventList.GetEventEntryCollection">
      <summary>Return the CelItems</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ChronologicalEventList.IChronologicalEventList.GetEventEntryCollectionAsXml">
      <summary>Return the CelItems as XML</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ChronologicalEventList.IChronologicalEventList.ResetQueryFilter">
      <summary>Resets the QueryFilter</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ChronologicalEventList.IChronologicalEventList.SetDynamicProperty" />
    <member name="E:Scada.AddIn.Contracts.ChronologicalEventList.IChronologicalEventList.CommentChanged" />
    <member name="E:Scada.AddIn.Contracts.ChronologicalEventList.IChronologicalEventList.EventEntryAdded">
      <summary>Event is fired when a new entry has been added to the CEL</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ChronologicalEventList.IChronologicalEventList.SelectionChanged">
      <summary>Event: selection array in the event list has been changed...</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ChronologicalEventList.IEventEntry">
      <summary>Provides all information stored with the cel item.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IEventEntry.ClassIndex" />
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IEventEntry.Comment" />
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IEventEntry.Computer">
      <summary>Returns the computer name</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IEventEntry.GroupIndex" />
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IEventEntry.Identification">
      <summary>Returns the tag name of the variable.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IEventEntry.State">
      <summary>Returns the status.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IEventEntry.Text">
      <summary>Returns the text</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IEventEntry.Time">
      <summary>Returns the time</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IEventEntry.UserName">
      <summary>Returns the user</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IEventEntry.Value">
      <summary>Returns the value</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IEventEntry.VariableName" />
    <member name="M:Scada.AddIn.Contracts.ChronologicalEventList.IEventEntry.GetFieldData" />
    <member name="T:Scada.AddIn.Contracts.ChronologicalEventList.IEventEntryCollection">
      <summary>Gets all CEL entries stored in memory.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IEventEntryCollection.Count">
      <summary>Returns the amount of CelItems</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IEventEntryCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IEventEntryCollection.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ChronologicalEventList.IEventFieldData" />
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IEventFieldData.Text" />
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IEventFieldData.Type" />
    <member name="T:Scada.AddIn.Contracts.ChronologicalEventList.IOnlineCel" />
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IOnlineCel.IsActive" />
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IOnlineCel.Name" />
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IOnlineCel.OnlineCelEventMode">
      <summary>Returns and sets event mode of the online-CEL.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IOnlineCel.Parent" />
    <member name="M:Scada.AddIn.Contracts.ChronologicalEventList.IOnlineCel.Activate">
      <summary>Activates the online-CEL.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ChronologicalEventList.IOnlineCel.Deactivate">
      <summary>Deactivates the online-CEL.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ChronologicalEventList.IOnlineCel.SetFilter">
      <summary>Sets the filter criteria as XML string.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ChronologicalEventList.IOnlineCel.BulkChanged">
      <summary>Event: Is fired with a list of CEL object changes.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ChronologicalEventList.IOnlineCel.Changed">
      <summary>Event: Is fired for CEL object change.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ChronologicalEventList.IOnlineCelCollection" />
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IOnlineCelCollection.Count" />
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IOnlineCelCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IOnlineCelCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.IOnlineCelCollection.Parent" />
    <member name="M:Scada.AddIn.Contracts.ChronologicalEventList.IOnlineCelCollection.Create" />
    <member name="M:Scada.AddIn.Contracts.ChronologicalEventList.IOnlineCelCollection.Delete" />
    <member name="T:Scada.AddIn.Contracts.ChronologicalEventList.OnlineCelChangedEventReason" />
    <member name="T:Scada.AddIn.Contracts.ChronologicalEventList.OnlineCelEventMode" />
    <member name="T:Scada.AddIn.Contracts.ChronologicalEventList.SelectionChangedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ChronologicalEventList.SelectionChangedEventArgs.SelectedItems" />
    <member name="T:Scada.AddIn.Contracts.ColorPalette.ActiveColorPaletteSwitchedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ColorPalette.ActiveColorPaletteSwitchedEventArgs.NewActiveColorPaletteIndex" />
    <member name="T:Scada.AddIn.Contracts.ColorPalette.IColorPaletteCollection" />
    <member name="P:Scada.AddIn.Contracts.ColorPalette.IColorPaletteCollection.ActiveColorPaletteIndex">
      <summary>Returns the index of the currently active color palette.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ColorPalette.IColorPaletteCollection.Count">
      <summary>Returns the number of color palettes.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ColorPalette.IColorPaletteCollection.CreateDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.ColorPalette.IColorPaletteCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ColorPalette.IColorPaletteCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ColorPalette.IColorPaletteCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ColorPalette.IColorPaletteCollection.GetDynamicProperties" />
    <member name="M:Scada.AddIn.Contracts.ColorPalette.IColorPaletteCollection.GetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.ColorPalette.IColorPaletteCollection.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ColorPalette.IColorPaletteCollection.GetPaletteColor">
      <summary>Determines the value of the color of a color palette.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ColorPalette.IColorPaletteCollection.GetPaletteColor">
      <summary>Determines the value of the color of a color palette.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ColorPalette.IColorPaletteCollection.ImportFromXml">
      <summary>Imports the selected XML file</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ColorPalette.IColorPaletteCollection.SetDynamicProperty" />
    <member name="E:Scada.AddIn.Contracts.ColorPalette.IColorPaletteCollection.ActiveColorPaletteSwitched">
      <summary>This event is fired when the active color palette has been switched.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ContextList.ChangedEventArgs" />
    <member name="T:Scada.AddIn.Contracts.ContextList.IContextListNode" />
    <member name="P:Scada.AddIn.Contracts.ContextList.IContextListNode.Count">
      <summary>Returns the amount of Text-List items</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ContextList.IContextListNode.Description">
      <summary>Returns the description of the Text-List</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ContextList.IContextListNode.Guid">
      <summary>Returns the Guid of the Text-List</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ContextList.IContextListNode.IsMarkedAsDeleted">
      <summary>Returns the Removed status of the Text-List</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ContextList.IContextListNode.Item" />
    <member name="P:Scada.AddIn.Contracts.ContextList.IContextListNode.Item" />
    <member name="P:Scada.AddIn.Contracts.ContextList.IContextListNode.Name">
      <summary>Returns the name of the Text-List</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ContextList.IContextListNode.Parent">
      <summary>Returns the parent object of the current object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ContextList.IContextListNode.Create">
      <summary>Creates and returns new Text-List object</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ContextList.IContextListNodeCollection" />
    <member name="P:Scada.AddIn.Contracts.ContextList.IContextListNodeCollection.Count">
      <summary>Returns the amount of Text-List Items</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ContextList.IContextListNodeCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ContextList.IContextListNodeCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ContextList.IContextListNodeCollection.Parent">
      <summary>Returns the parent object of the current object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ContextList.IContextListNodeCollection.Create">
      <summary>Creates and returns new Text-List object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ContextList.IContextListNodeCollection.ExportToXml" />
    <member name="M:Scada.AddIn.Contracts.ContextList.IContextListNodeCollection.ImportFromXml">
      <summary>Imports the selected XML file</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ContextList.IContextListNodeCollection.Save">
      <summary>Saves the Text-List</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ContextList.IContextListNodeCollection.Changed" />
    <member name="E:Scada.AddIn.Contracts.ContextList.IContextListNodeCollection.SelectionChanged" />
    <member name="T:Scada.AddIn.Contracts.ContextList.SelectionChangedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ContextList.SelectionChangedEventArgs.Items" />
    <member name="T:Scada.AddIn.Contracts.EquipmentModeling.EquipmentGroupSelectedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.EquipmentModeling.EquipmentGroupSelectedEventArgs.Guid" />
    <member name="P:Scada.AddIn.Contracts.EquipmentModeling.EquipmentGroupSelectedEventArgs.Name" />
    <member name="T:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentGroup" />
    <member name="P:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentGroup.Count">
      <summary>Count of system groups.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentGroup.Item" />
    <member name="P:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentGroup.Item" />
    <member name="M:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentGroup.CreateDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentGroup.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentGroup.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentGroup.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentGroup.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentModel" />
    <member name="P:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentModel.Count">
      <summary>Count of system groups.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentModel.Item" />
    <member name="P:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentModel.Item" />
    <member name="M:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentModel.CreateDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentModel.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentModel.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentModel.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentModel.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentModeling" />
    <member name="P:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentModeling.Count">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentModeling.Item" />
    <member name="P:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentModeling.Item" />
    <member name="M:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentModeling.CreateDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentModeling.ExportToXml" />
    <member name="M:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentModeling.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentModeling.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentModeling.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentModeling.GetEquipmentGroupByGuid">
      <summary>Returns the system group with the given id (guid).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentModeling.GetEquipmentModelByName">
      <summary>Returns the system model with the given id (guid).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentModeling.ImportFromXml">
      <summary>Imports system model list</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentModeling.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.EquipmentModeling.IEquipmentModeling.EquipmentGroupSelected" />
    <member name="T:Scada.AddIn.Contracts.FontList.IFont">
      <summary>Defines a font item</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.FontList.IFont.GetDynamicProperties" />
    <member name="M:Scada.AddIn.Contracts.FontList.IFont.GetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.FontList.IFont.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.FontList.IFont.SetDynamicProperty" />
    <member name="T:Scada.AddIn.Contracts.FontList.IFontList">
      <summary>Defines a FontList object which contains single FontItem objects.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.FontList.IFontList.Count">
      <summary>Returns the number of Font objects.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.FontList.IFontList.Item" />
    <member name="M:Scada.AddIn.Contracts.FontList.IFontList.Create">
      <summary>Create a new Font.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.FontList.IFontList.GetDynamicProperties" />
    <member name="M:Scada.AddIn.Contracts.FontList.IFontList.GetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.FontList.IFontList.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.FontList.IFontList.GetItemById" />
    <member name="M:Scada.AddIn.Contracts.FontList.IFontList.SetDynamicProperty" />
    <member name="T:Scada.AddIn.Contracts.FontList.IFontListCollection">
      <summary>Contains the FontList objects of a project.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.FontList.IFontListCollection.Count">
      <summary>Returns the number of Fontlist objects.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.FontList.IFontListCollection.Item" />
    <member name="M:Scada.AddIn.Contracts.FontList.IFontListCollection.Create">
      <summary>Create a new FontList.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.FontList.IFontListCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.FontList.IFontListCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.FontList.IFontListCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.FontList.IFontListCollection.ImportFromXml">
      <summary>Imports the selected XML file</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Frame.IFrame" />
    <member name="P:Scada.AddIn.Contracts.Frame.IFrame.BackgroundColor">
      <summary>BackColor</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Frame.IFrame.BackgroundGraphicAlignment" />
    <member name="P:Scada.AddIn.Contracts.Frame.IFrame.BackgroundGraphicFile">
      <summary>Image for the Template</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Frame.IFrame.BorderStyle" />
    <member name="P:Scada.AddIn.Contracts.Frame.IFrame.Bottom">
      <summary>Bottom-coordinate of the template</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Frame.IFrame.Height">
      <summary>Height of the template</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Frame.IFrame.IsAlwaysInForegroundEnabled">
      <summary>Shows template always in the foreground</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Frame.IFrame.IsLocked">
      <summary>Returns true when the current module is Locked by another user (editor).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Frame.IFrame.IsMinimizeMaximizeButtonVisible">
      <summary>Shows the windows minimize button</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Frame.IFrame.IsOpenMultipleEnabled">
      <summary>Open a template multiple times</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Frame.IFrame.IsSystemMenuVisible">
      <summary>Shows the windows system menu</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Frame.IFrame.IsTitleVisible">
      <summary>Shows titlebar for the template</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Frame.IFrame.Left">
      <summary>Left-coordinate of the template</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Frame.IFrame.Name">
      <summary>Name of the template (unique)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Frame.IFrame.Parent">
      <summary>Returns the parent object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Frame.IFrame.Right">
      <summary>Right-coordinate of the template</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Frame.IFrame.Top">
      <summary>Top-coordinate of the template</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Frame.IFrame.Width">
      <summary>Width of the template</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Frame.IFrame.WindowStyle">
      <summary>Style of the template-window</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Frame.IFrame.AcceptChanges">
      <summary>Save module modifications to server (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Frame.IFrame.Duplicate">
      <summary>Copies the template</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Frame.IFrame.EnableChanges">
      <summary>Allow module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Frame.IFrame.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Frame.IFrame.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Frame.IFrame.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Frame.IFrame.IsChangeEnabled">
      <summary>Returns true when the current module checked out by the current user (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Frame.IFrame.IsDifferent">
      <summary>Returns true when the local and server version are different (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Frame.IFrame.Save">
      <summary>Save changes</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Frame.IFrame.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Frame.IFrame.UndoChanges">
      <summary>Undo module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Frame.IFrame.UpdateLocalVersion">
      <summary>Get the latest version from the server (editor).</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Frame.IFrameCollection" />
    <member name="P:Scada.AddIn.Contracts.Frame.IFrameCollection.Count">
      <summary>Returns count of the elements</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Frame.IFrameCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Frame.IFrameCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Frame.IFrameCollection.Parent">
      <summary>The parent object of the current object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Frame.IFrameCollection.Create">
      <summary>Creates and returns a new Object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Frame.IFrameCollection.Delete">
      <summary>Deletes the objects from collection</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Frame.IFrameCollection.ExportToXml" />
    <member name="M:Scada.AddIn.Contracts.Frame.IFrameCollection.ExportToXml" />
    <member name="M:Scada.AddIn.Contracts.Frame.IFrameCollection.ExportToXml" />
    <member name="M:Scada.AddIn.Contracts.Frame.IFrameCollection.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Frame.IFrameCollection.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Frame.IFrameCollection.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Frame.IFrameCollection.ImportFromXml">
      <summary>Imports the selected XML file</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Frame.IFrameCollection.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Function.FunctionExecutingEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Function.FunctionExecutingEventArgs.Function" />
    <member name="T:Scada.AddIn.Contracts.Function.FunctionType" />
    <member name="T:Scada.AddIn.Contracts.Function.IFunction" />
    <member name="P:Scada.AddIn.Contracts.Function.IFunction.Id" />
    <member name="P:Scada.AddIn.Contracts.Function.IFunction.IsExecutedOnClient" />
    <member name="P:Scada.AddIn.Contracts.Function.IFunction.IsExecutedOnCurrentComputer" />
    <member name="P:Scada.AddIn.Contracts.Function.IFunction.IsExecutedOnServer" />
    <member name="P:Scada.AddIn.Contracts.Function.IFunction.IsExecutedOnStandbyServer" />
    <member name="P:Scada.AddIn.Contracts.Function.IFunction.IsLocked">
      <summary>Returns true when the current module is Locked by another user (editor).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Function.IFunction.Name" />
    <member name="P:Scada.AddIn.Contracts.Function.IFunction.Parameter" />
    <member name="P:Scada.AddIn.Contracts.Function.IFunction.Parent" />
    <member name="P:Scada.AddIn.Contracts.Function.IFunction.Type" />
    <member name="M:Scada.AddIn.Contracts.Function.IFunction.AcceptChanges">
      <summary>Save module modifications to server (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IFunction.CreateDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IFunction.Duplicate">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IFunction.EnableChanges">
      <summary>Allow module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IFunction.Execute">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IFunction.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IFunction.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IFunction.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IFunction.IsChangeEnabled">
      <summary>Returns true when the current module checked out by the current user (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IFunction.IsDifferent">
      <summary>Returns true when the local and server version are different (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IFunction.OpenConfigurationDialog">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IFunction.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IFunction.UndoChanges">
      <summary>Undo module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IFunction.UpdateLocalVersion">
      <summary>Get the latest version from the server (editor).</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Function.IFunctionCollection" />
    <member name="P:Scada.AddIn.Contracts.Function.IFunctionCollection.Count">
      <summary>Returns count of the elements</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Function.IFunctionCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Function.IFunctionCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Function.IFunctionCollection.Parent">
      <summary>The parent object of the current object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IFunctionCollection.Create">
      <summary>Creates and returns a new Object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IFunctionCollection.Delete">
      <summary>Deletes the objects from collection</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IFunctionCollection.Delete">
      <summary>Deletes the objects from collection</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IFunctionCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IFunctionCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IFunctionCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IFunctionCollection.ImportFromXml">
      <summary>Imports the selected XML file</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IFunctionCollection.ShowCreateDialog">
      <summary>Opens the zenon standard dialog "Select a function".</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Function.IFunctionCollection.FunctionExecuting">
      <summary>This event is fired when a function is executed and containes a copy of the function.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Function.IScript" />
    <member name="P:Scada.AddIn.Contracts.Function.IScript.Count" />
    <member name="P:Scada.AddIn.Contracts.Function.IScript.Item" />
    <member name="P:Scada.AddIn.Contracts.Function.IScript.Name" />
    <member name="P:Scada.AddIn.Contracts.Function.IScript.Parent" />
    <member name="M:Scada.AddIn.Contracts.Function.IScript.AddFunction">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IScript.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IScript.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IScript.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IScript.RemoveFunction">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IScript.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Function.IScriptCollection" />
    <member name="P:Scada.AddIn.Contracts.Function.IScriptCollection.Count">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Function.IScriptCollection.IsLocked">
      <summary>Returns true when the current module is Locked by another user (editor).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Function.IScriptCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Function.IScriptCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Function.IScriptCollection.Parent">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IScriptCollection.AcceptChanges">
      <summary>Save module modifications to server (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IScriptCollection.Create">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IScriptCollection.Delete">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IScriptCollection.EnableChanges">
      <summary>Allow module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IScriptCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IScriptCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IScriptCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IScriptCollection.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IScriptCollection.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IScriptCollection.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IScriptCollection.ImportFromXml">
      <summary>Imports the selected XML file</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IScriptCollection.IsChangeEnabled">
      <summary>Returns true when the current module checked out by the current user (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IScriptCollection.IsDifferent">
      <summary>Returns true when the local and server version are different (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IScriptCollection.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IScriptCollection.UndoChanges">
      <summary>Undo module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Function.IScriptCollection.UpdateLocalVersion">
      <summary>Get the latest version from the server (editor).</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Function.ShowCreateFunctionDialogReturnResult" />
    <member name="T:Scada.AddIn.Contracts.Historian.AggregationType" />
    <member name="T:Scada.AddIn.Contracts.Historian.ArchiveRecordingType" />
    <member name="T:Scada.AddIn.Contracts.Historian.IEditorArchive">
      <summary>Contains project information like the name, the source archive and other properties.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IEditorArchive.Count" />
    <member name="P:Scada.AddIn.Contracts.Historian.IEditorArchive.Item" />
    <member name="P:Scada.AddIn.Contracts.Historian.IEditorArchive.Item" />
    <member name="P:Scada.AddIn.Contracts.Historian.IEditorArchive.Parent">
      <summary>Returns the parent object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchive.AddVariable" />
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchive.AddVariable" />
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchive.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchive.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchive.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchive.ImportArchiveTemplate" />
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchive.RemoveVariable" />
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchive.RemoveVariable" />
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchive.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Historian.IEditorArchiveCollection">
      <summary>Manages the collection of "ArchiveED" objects.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IEditorArchiveCollection.Count">
      <summary>Returns the number of available objects.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IEditorArchiveCollection.IsLocked">
      <summary>Returns true when the current module is Locked by another user (editor).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IEditorArchiveCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Historian.IEditorArchiveCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Historian.IEditorArchiveCollection.Parent">
      <summary>Returns the parent object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchiveCollection.AcceptChanges">
      <summary>Save module modifications to server (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchiveCollection.Create" />
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchiveCollection.Delete" />
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchiveCollection.EnableChanges">
      <summary>Allow module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchiveCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchiveCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchiveCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchiveCollection.ImportFromXml">
      <summary>Imports the selected XML file</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchiveCollection.IsChangeEnabled">
      <summary>Returns true when the current module checked out by the current user (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchiveCollection.IsDifferent">
      <summary>Returns true when the local and server version are different (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchiveCollection.UndoChanges">
      <summary>Undo module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchiveCollection.UpdateLocalVersion">
      <summary>Get the latest version from the server (editor).</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Historian.IEditorArchiveTemplate" />
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchiveTemplate.GetDynamicProperties" />
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchiveTemplate.GetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchiveTemplate.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Historian.IEditorArchiveTemplateCollection" />
    <member name="P:Scada.AddIn.Contracts.Historian.IEditorArchiveTemplateCollection.Count">
      <summary>Count of Archive Templates in the Collection</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IEditorArchiveTemplateCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Historian.IEditorArchiveTemplateCollection.Item" />
    <member name="T:Scada.AddIn.Contracts.Historian.IEditorArchiveVariable">
      <summary>Contains the assigned "Variable" object and projecting information on the calculation mode.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchiveVariable.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchiveVariable.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchiveVariable.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IEditorArchiveVariable.SetDynamicProperty" />
    <member name="T:Scada.AddIn.Contracts.Historian.ImportArchiveTemplateResult" />
    <member name="T:Scada.AddIn.Contracts.Historian.IRuntimeArchive">
      <summary>Contains project information like the name, the source archive and other properties.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchive.ArchiveRecordingType" />
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchive.Cycle">
      <summary>Reading in of the values is done cyclically by the system (days, hours, minutes and seconds)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchive.FilterCollection">
      <summary>Returns a collection ("ArchiveFilters" object) of all available filters.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchive.Id">
      <summary>Returns the unique ID of the current archive.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchive.Identifier">
      <summary>Returns the archive identifier.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchive.LotInformation" />
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchive.Name">
      <summary>Returns the name of the current "Archive" object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchive.Parent">
      <summary>Returns the parent object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchive.VariableCollection" />
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchive.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchive.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchive.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchive.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Historian.IRuntimeArchiveCollection">
      <summary>The object is a collection of all existing archives.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveCollection.Count" />
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveCollection.Parent" />
    <member name="T:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilter">
      <summary>Filters archive entries by a specified date / time and state.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilter.Count" />
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilter.EndTime">
      <summary>Gets or sets the end time of the filter.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilter.FilterVariableCollection">
      <summary>Returns an "ArchiveFilterVariables" object, containing a collection of all filtered archive variables.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilter.Parent">
      <summary>Returns the parent object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilter.Raster">
      <summary>Returns archive entries according to the set raster:3  means every third entry is returned.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilter.ShouldOnlyReadVariablesInFilter">
      <summary>Load only in the filter defined variables.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilter.StartTime">
      <summary>Gets or sets the start time of the filter as long.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilter.StateBit" />
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilter.StateMask" />
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilter.AddVariable">
      <summary>Adds an existing archive variable ("ArchiveVariable" object) to the filter.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilter.ApplyChanges">
      <summary>Apply changes on the filter.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilter.GetFilterVariablesInfo">
      <summary>Return arrays with the information to all the defined variables in the filter.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilter.GetFilterVariablesInfo">
      <summary>Return arrays with the information to all the defined variables in the filter.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilter.GetVariable">
      <summary>Returns an "ArchiveVariable" object (which was formerly added to the filter) from the collection.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilter.GetVariable">
      <summary>Returns an "ArchiveVariable" object (which was formerly added to the filter) from the collection.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilter.Query">
      <summary>Initiates the filtering of the data.Returns an "ArchiveFilterVariables" object, if data matched the filter query.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilter.QueryBlock">
      <summary>Initiates the filtering of the data.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilter.QueryBlock">
      <summary>Initiates the filtering of the data.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilter.RemoveVariable">
      <summary>Removes an "ArchiveVariable" object (which was formerly added to the filter) from the filter.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilter.RemoveVariable">
      <summary>Removes an "ArchiveVariable" object (which was formerly added to the filter) from the filter.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilterCollection">
      <summary>This collection administers all filter objects</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilterCollection.Count">
      <summary>The method returns the number of available objects</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilterCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilterCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilterCollection.Parent">
      <summary>Returns the parent object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilterCollection.Create" />
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilterCollection.Delete" />
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilterCollection.Delete" />
    <member name="T:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilterVariable">
      <summary>contains the filtered archive variable for the "ArchiveFilter" object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilterVariable.ArchiveValueCollection" />
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilterVariable.ArchiveVariable">
      <summary>Returns an "ArchiveVarible" object, which constitutes the assigned archive variable.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilterVariable.Parent">
      <summary>Returns the parent object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilterVariable.GetArchiveValues">
      <summary>Returns an array of values for the actual ArchiveFilterVariable object.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilterVariableCollection">
      <summary>Returns an "ArchiveFilterVariables" object, containing a collection of the filtered archive variables.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilterVariableCollection.Count">
      <summary>Returns the number of available objects.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilterVariableCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilterVariableCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilterVariableCollection.Parent">
      <summary>Returns the parent object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilterVariableCollection.GetItemById" />
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveFilterVariableCollection.GetItemById" />
    <member name="T:Scada.AddIn.Contracts.Historian.IRuntimeArchiveValue">
      <summary>The "ArchiveValue" object contains the value parameters for the "ArchiveFilterVariable" object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveValue.HigherState" />
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveValue.LowerState" />
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveValue.Parent">
      <summary>Returns the parent object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveValue.Time">
      <summary>Gets or modifies the time when the value was recorded.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveValue.TimeMilliseconds">
      <summary>Gets or modifies the milliseconds, in addition to the time, when the value was recorded.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveValue.Value">
      <summary>Gets or modifies the value that was recorded.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveValue.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveValue.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveValue.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveValue.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveValue.SetModified">
      <summary>Set this method, in order to adopt parameter modifications.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Historian.IRuntimeArchiveValueCollection">
      <summary>Manages the "ArchiveValue" objects.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveValueCollection.Count">
      <summary>Returns the number of available objects.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveValueCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveValueCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveValueCollection.Parent">
      <summary>Returns the parent object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveValueCollection.Create" />
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveValueCollection.Delete" />
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveValueCollection.Delete" />
    <member name="T:Scada.AddIn.Contracts.Historian.IRuntimeArchiveVariable" />
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveVariable.AggregationType" />
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveVariable.Id">
      <summary>Returns the unique ID of the current "ArchiveVariable" object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveVariable.Identification" />
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveVariable.Name">
      <summary>Returns the name of the current "ArchiveVariable" object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveVariable.Parent">
      <summary>Returns the parent object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveVariable.SourceVariable" />
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveVariable.Unit">
      <summary>Returns the unit (as string) of the current "ArchiveVariable" object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveVariable.Variable" />
    <member name="T:Scada.AddIn.Contracts.Historian.IRuntimeArchiveVariableCollection">
      <summary>The "ArchiveVariables" object is a collection of all defined "ArchiveVariable" objects.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveVariableCollection.Count">
      <summary>Returns the number of available objects.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveVariableCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveVariableCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Historian.IRuntimeArchiveVariableCollection.Parent">
      <summary>Returns the parent object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveVariableCollection.GetItemById" />
    <member name="M:Scada.AddIn.Contracts.Historian.IRuntimeArchiveVariableCollection.GetItemById" />
    <member name="T:Scada.AddIn.Contracts.Interlocking.IInterlocking">
      <summary>With the interlocking object you have the opportunity to edit standard interlockings and command interlockings.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Interlocking.IInterlocking.CreateDynamicProperty">
      <summary>With the DynProperties "Variables" and "Actions" you have the opportunity to create a variable at an interlocking and to create an action at a command interlocking.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Interlocking.IInterlocking.GetDynamicProperties" />
    <member name="M:Scada.AddIn.Contracts.Interlocking.IInterlocking.GetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.Interlocking.IInterlocking.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Interlocking.IInterlocking.SetDynamicProperty" />
    <member name="T:Scada.AddIn.Contracts.Interlocking.IInterlockingCollection">
      <summary>With the interlockings object you have the opportunity to create and edit interlockings in the list.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Interlocking.IInterlockingCollection.Count">
      <summary>Returns the amount of interlockings.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Interlocking.IInterlockingCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Interlocking.IInterlockingCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Interlocking.IInterlockingCollection.Parent">
      <summary>Returns the parent of the interlockings object.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Interlocking.IInterlockingCollection.Create">
      <summary>Creates a new interlocking.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Interlocking.IInterlockingCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Interlocking.IInterlockingCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Interlocking.IInterlockingCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Interlocking.IInterlockingCollection.ImportFromXml">
      <summary>Imports the selected XML file</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.LanguageTable.ILanguageTable">
      <summary>Represents the language table of the project.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.LanguageTable.ILanguageTable.Count">
      <summary>Count of Files in the Language Table</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.LanguageTable.ILanguageTable.Item" />
    <member name="P:Scada.AddIn.Contracts.LanguageTable.ILanguageTable.Item" />
    <member name="P:Scada.AddIn.Contracts.LanguageTable.ILanguageTable.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.LanguageTable.ILanguageTable.CreateLanguageFile">
      <summary>Creates a new File in the Language Table</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.LanguageTable.ILanguageTable.DeleteKeyword">
      <summary>Deletes a Key from all Files of the Language Table</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.LanguageTable.ILanguageTable.DeleteLanguageFile">
      <summary>Deletes a File from the Language Table</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.LanguageTable.ILanguageTable.ExportLanguageFile">
      <summary>Exports an existing File from the Language Table</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.LanguageTable.ILanguageTable.ExportLanguageFile">
      <summary>Exports an existing File from the Language Table</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.LanguageTable.ILanguageTable.ExportToCsv">
      <summary>Exports the Language Table to a CSV file</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.LanguageTable.ILanguageTable.GetString">
      <summary>Returns a String from the Language Table</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.LanguageTable.ILanguageTable.ImportFromCsv">
      <summary>Imports the Language Table from a CSV file</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.LanguageTable.ILanguageTable.ImportLanguageFile">
      <summary>Imports (and merges) an existing File into the Language Table</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.LanguageTable.ILanguageTable.Save">
      <summary>Saves the Language Table</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.LanguageTable.ILanguageTable.SetString">
      <summary>Sets a String in the Language Table</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.License.Driver" />
    <member name="T:Scada.AddIn.Contracts.License.IEntry" />
    <member name="P:Scada.AddIn.Contracts.License.IEntry.Values" />
    <member name="T:Scada.AddIn.Contracts.License.ILicense" />
    <member name="P:Scada.AddIn.Contracts.License.ILicense.BorrowExpirationTime" />
    <member name="P:Scada.AddIn.Contracts.License.ILicense.ExpirationTime" />
    <member name="P:Scada.AddIn.Contracts.License.ILicense.IsBorrowExpirationTimeSet" />
    <member name="P:Scada.AddIn.Contracts.License.ILicense.IsExpirationTimeSet" />
    <member name="P:Scada.AddIn.Contracts.License.ILicense.IsTimeQuotaSet" />
    <member name="P:Scada.AddIn.Contracts.License.ILicense.SerialNumber" />
    <member name="P:Scada.AddIn.Contracts.License.ILicense.TimeQuotaInMinutes" />
    <member name="M:Scada.AddIn.Contracts.License.ILicense.GetEntry" />
    <member name="M:Scada.AddIn.Contracts.License.ILicense.GetEntry" />
    <member name="M:Scada.AddIn.Contracts.License.ILicense.GetEntry" />
    <member name="M:Scada.AddIn.Contracts.License.ILicense.IsLicensed" />
    <member name="M:Scada.AddIn.Contracts.License.ILicense.IsLicensed" />
    <member name="M:Scada.AddIn.Contracts.License.ILicense.IsLicensed" />
    <member name="T:Scada.AddIn.Contracts.License.LogicDriver" />
    <member name="T:Scada.AddIn.Contracts.License.Module" />
    <member name="T:Scada.AddIn.Contracts.Menu.IMenu" />
    <member name="P:Scada.AddIn.Contracts.Menu.IMenu.BackgroundColor" />
    <member name="P:Scada.AddIn.Contracts.Menu.IMenu.Count">
      <summary>Count of defined menu-items</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenu.Id">
      <summary>Returns the unique ID for the menu</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenu.IsPulldown">
      <summary>Is the menu a pulldown menu (true) or a popup menu (false)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenu.Item" />
    <member name="P:Scada.AddIn.Contracts.Menu.IMenu.Item" />
    <member name="P:Scada.AddIn.Contracts.Menu.IMenu.Name">
      <summary>Name of the menu</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenu.Note">
      <summary>Notes to the menu</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenu.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenu.TextColor">
      <summary>TextColor</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Menu.IMenu.Create">
      <summary>Creates a new menu-item</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Menu.IMenu.Delete">
      <summary>Deletes the given menu-item</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Menu.IMenu.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Menu.IMenu.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Menu.IMenu.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Menu.IMenu.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Menu.IMenuCollection" />
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuCollection.Count">
      <summary>Count of defined menus</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuCollection.IsLocked">
      <summary>Returns true when the current module is Locked by another user (editor).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuCollection.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Menu.IMenuCollection.AcceptChanges">
      <summary>Save module modifications to server (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Menu.IMenuCollection.Create">
      <summary>Creates a new menu</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Menu.IMenuCollection.Delete">
      <summary>Deletes the given menu</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Menu.IMenuCollection.EnableChanges">
      <summary>Allow module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Menu.IMenuCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Menu.IMenuCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Menu.IMenuCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Menu.IMenuCollection.ImportFromXml">
      <summary>Imports the selected XML file</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Menu.IMenuCollection.IsChangeEnabled">
      <summary>Returns true when the current module checked out by the current user (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Menu.IMenuCollection.IsDifferent">
      <summary>Returns true when the local and server version are different (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Menu.IMenuCollection.UndoChanges">
      <summary>Undo module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Menu.IMenuCollection.UpdateLocalVersion">
      <summary>Get the latest version from the server (editor).</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Menu.IMenuItem" />
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.ActionId">
      <summary>ID of the variable/rt-function/macro/help-ID</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.Caption">
      <summary>Caption of the menu-item</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.Count">
      <summary>Count of defined menu-items</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.Guid">
      <summary>Project-GUID by variables of a other project</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.HelpFile">
      <summary>Helpfile for execution (Type = tpZenHelp)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.HelpTopic">
      <summary>Help-ID for execution (Type = tpZenHelp)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.Id">
      <summary>Returns the unique ID for the menu-item</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.IsChecked">
      <summary>Menu-item has checkbox</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.IsEnabled">
      <summary>Enables/Disables the menu-item</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.IsPopup">
      <summary>Menu-item contains sub-items</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.IsSeparator">
      <summary>Menu-item is a seperator (no execution)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.IsVisible">
      <summary>Shows/hides the menu-item</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.Item" />
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.Item" />
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.MenuId">
      <summary>Returns the unique ID for the menu</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.MenuType">
      <summary>Type of the menu-item (Variable/RtFunction/Help/Macro)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.Name">
      <summary>Unique Name of the menu-item</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.ParentId">
      <summary>Returns the unique ID for the parent menu-item</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.PasswordLevel">
      <summary>Password-level for execution</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.Picture">
      <summary>Bitmap-file of the menu-item</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.ShowSetValueDialog">
      <summary>Show set-value dialog (Type = tpVariable)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.ToolTip">
      <summary>Tooltip-Text for the menu-item</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.UseCurrentValue">
      <summary>Use current set-value of the variable (Type = tpVariable)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.UseVariableFromElement">
      <summary>Use Variable from the linked element (Type = tpVariable)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Menu.IMenuItem.ValueToSet">
      <summary>Defined SetValue  (Type = tpVariable)</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Menu.IMenuItem.Create">
      <summary>Creates a new menu-item</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Menu.IMenuItem.Delete">
      <summary>Deletes the given menu-item</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Menu.IMenuItem.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Menu.IMenuItem.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Menu.IMenuItem.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Menu.IMenuItem.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Menu.MenuType" />
    <member name="T:Scada.AddIn.Contracts.MessageControl.ChronologicalEventListDetail" />
    <member name="T:Scada.AddIn.Contracts.MessageControl.GroupSendingMethod" />
    <member name="T:Scada.AddIn.Contracts.MessageControl.IMessage">
      <summary>With this object new users can be created and existing users can be edited/deleted during online operation.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessage.AcknowledgementTimeOut" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessage.Attachment" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessage.CustomIdentifier" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessage.CycleCounter" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessage.Destination" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessage.GroupSendingMethod" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessage.Guid" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessage.IsAcknowledgementRequired" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessage.MaximumNumberOfAttempts" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessage.NumberOfAttempts" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessage.RecipientType" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessage.SendingMode" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessage.SendTime" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessage.SentTime" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessage.Text" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessage.TimeToWait" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessage.Title" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessage.UseMessageSpecificCodes" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessage.UserName" />
    <member name="M:Scada.AddIn.Contracts.MessageControl.IMessage.GetDynamicProperties" />
    <member name="M:Scada.AddIn.Contracts.MessageControl.IMessage.GetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.MessageControl.IMessage.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.MessageControl.IMessage.SetDynamicProperty" />
    <member name="T:Scada.AddIn.Contracts.MessageControl.IMessageControl" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessageControl.AreMessageDeleteActionsLogged" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessageControl.ChronologicalEventListDetail" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessageControl.CurrentQueue" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessageControl.IsActivatedOnRuntimeStart" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessageControl.MaximumNumberOfAttempts" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.IMessageControl.TimeToWait" />
    <member name="M:Scada.AddIn.Contracts.MessageControl.IMessageControl.GetDynamicProperties" />
    <member name="M:Scada.AddIn.Contracts.MessageControl.IMessageControl.GetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.MessageControl.IMessageControl.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.MessageControl.IMessageControl.SetDynamicProperty" />
    <member name="E:Scada.AddIn.Contracts.MessageControl.IMessageControl.MessageAcknowledged" />
    <member name="E:Scada.AddIn.Contracts.MessageControl.IMessageControl.MessageAcknowledgeTimedOutReached" />
    <member name="E:Scada.AddIn.Contracts.MessageControl.IMessageControl.MessageCreated">
      <summary>Event is fired once a new message is created.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.MessageControl.IMessageControl.MessageDeleted">
      <summary>Event is fired once a message gets deleted.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.MessageControl.IMessageControl.MessageNegativeAcknowledged" />
    <member name="E:Scada.AddIn.Contracts.MessageControl.IMessageControl.MessageReceived">
      <summary>Event is fired once a message comes in.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.MessageControl.IMessageControl.MessageSendError">
      <summary>Event is fired once an error occurs during the message sending process.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.MessageControl.IMessageControl.MessageSent">
      <summary>Event is fired once a message has been sent.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.MessageControl.IMessageControl.SelectionChanged" />
    <member name="T:Scada.AddIn.Contracts.MessageControl.MessageAcknowledgedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.MessageAcknowledgedEventArgs.Message" />
    <member name="T:Scada.AddIn.Contracts.MessageControl.MessageAcknowledgeTimedOutReachedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.MessageAcknowledgeTimedOutReachedEventArgs.Message" />
    <member name="T:Scada.AddIn.Contracts.MessageControl.MessageCreatedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.MessageCreatedEventArgs.AlarmItem" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.MessageCreatedEventArgs.Message" />
    <member name="T:Scada.AddIn.Contracts.MessageControl.MessageDeletedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.MessageDeletedEventArgs.Message" />
    <member name="T:Scada.AddIn.Contracts.MessageControl.MessageNegativeAcknowledgedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.MessageNegativeAcknowledgedEventArgs.Message" />
    <member name="T:Scada.AddIn.Contracts.MessageControl.MessageReceivedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.MessageReceivedEventArgs.Identifier" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.MessageReceivedEventArgs.Message" />
    <member name="T:Scada.AddIn.Contracts.MessageControl.MessageSendErrorEventArgs" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.MessageSendErrorEventArgs.Message" />
    <member name="T:Scada.AddIn.Contracts.MessageControl.MessageSentEventArgs" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.MessageSentEventArgs.Message" />
    <member name="T:Scada.AddIn.Contracts.MessageControl.RecipientType" />
    <member name="T:Scada.AddIn.Contracts.MessageControl.SelectionChangedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.MessageControl.SelectionChangedEventArgs.Messages" />
    <member name="T:Scada.AddIn.Contracts.MessageControl.SendingMode" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.BreakCreatedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.BreakCreatedEventArgs.NewBreak" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.BreakDeletedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.BreakDeletedEventArgs.Name" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.BreakRenamedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.BreakRenamedEventArgs.NewName" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.BreakRenamedEventArgs.OldName" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.DayLink" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.DefaultDay" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.EventCreatedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.EventCreatedEventArgs.NewEvent" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.EventDeletedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.EventDeletedEventArgs.Name" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.EventRenamedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.EventRenamedEventArgs.NewName" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.EventRenamedEventArgs.OldName" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.EventType" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.FilterDataType" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.GroupCreatedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.GroupCreatedEventArgs.NewGroup" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.GroupDeletedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.GroupDeletedEventArgs.Name" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.GroupRenamedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.GroupRenamedEventArgs.NewName" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.GroupRenamedEventArgs.OldName" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.ICalendar" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.ICalendar.CreateSwitchingPointFilter">
      <summary>Creates a switching point filter that can be configured and then used to call the SwitchingPointPreview method</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.ICalendar.GetSchedulesForDay">
      <summary>Returns the linked schedules for the day</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.ICalendar.GetTimeModelForDay">
      <summary>Returns the linked time model for the day</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.IEvent">
      <summary>User defined event, which can be linked to the schedules as relative switching operations.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IEvent.Guid">
      <summary>Is the Guid of the event which is unique and can be used to identify the object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IEvent.Id">
      <summary>is the ID of the event.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IEvent.Name">
      <summary>Is the name of the event.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IEvent.Parent">
      <summary>Returns the parent object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IEvent.Session">
      <summary>Contains the "Project" object.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IEvent.Execute" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IEvent.Rename">
      <summary>With this methode you can rename the event.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IEvent.SetModified" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.IEventCollection">
      <summary>The Events collection contains the user-defined events of the PFS.User-defined events can be linked to the schedules as relative switching operations.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IEventCollection.Count">
      <summary>Returns the number of available objects.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IEventCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IEventCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IEventCollection.Parent">
      <summary>Returns the parent object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IEventCollection.Session">
      <summary>Contains the "Project" object.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IEventCollection.Create" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IEventCollection.Delete" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IEventCollection.Delete" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IEventCollection.GetItemById" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.IGroup">
      <summary>Describes an equipment object in the PFS module.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IGroup.Count" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IGroup.CycleEnd">
      <summary>Is the end time of the group in seconds.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IGroup.CycleStart">
      <summary>Is the start time of the group in seconds.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IGroup.Guid">
      <summary>Is the Guid of the group which is unique and can be used to identify the object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IGroup.Item" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IGroup.Name">
      <summary>Is the name of the group.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IGroup.Parent">
      <summary>Returns the parent object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IGroup.ScheduleCollection">
      <summary>The "Schedules" object manages the "Schedule" objects.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IGroup.Session">
      <summary>Contains the "Project" object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IGroup.TimeModelCollection">
      <summary>The "TimeModels" object manages the "TimeModel" objects.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IGroup.Rename">
      <summary>With this methode you can rename the group.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IGroup.SetModified" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.IGroupCollection">
      <summary>The Groups collection contains the groups of the PFS module (in the editor also called "equipments).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IGroupCollection.Count">
      <summary>The method returns the number of available objects.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IGroupCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IGroupCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IGroupCollection.Parent">
      <summary>Returns the parent object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IGroupCollection.Session">
      <summary>Contains the "Project" object.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IGroupCollection.Create" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IGroupCollection.Delete" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IGroupCollection.Delete" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.IHoliday">
      <summary>This object contains a name and a date for the holiday.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IHoliday.Date" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IHoliday.Name">
      <summary>Returns the unique name of the holiday.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IHoliday.Parent">
      <summary>Returns the parent object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IHoliday.Session">
      <summary>Contains the "Project" object.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.IHolidayCollection">
      <summary>The Holidays collection contains all holiday definitions of the defined country for the current year.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IHolidayCollection.Count">
      <summary>The method returns the number of available objects</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IHolidayCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IHolidayCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IHolidayCollection.Parent">
      <summary>Returns the parent object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IHolidayCollection.Session">
      <summary>Contains the "Project" object.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelBreak">
      <summary>The ModellBreak object is a break within a shift in a time model</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelBreak.EndTime">
      <summary>Is the end time of the break.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelBreak.Guid">
      <summary>Is the Guid of the group which is unique and can be used to identify the object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelBreak.Keynote">
      <summary>The Keynote returns the name of one or more main objects and of the current object sepperated with a dot.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelBreak.Name">
      <summary>Is the name of the break.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelBreak.Note">
      <summary>Notes can be added and read out, this property contains the notes to a selected break.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelBreak.Parent">
      <summary>Returns the parent object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelBreak.Session">
      <summary>Contains the "Project" object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelBreak.StartTime">
      <summary>Is the start time of the break.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelBreak.Rename">
      <summary>With this method you can rename a break.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelBreakCollection">
      <summary>The ModellBreaks collection allows the access to the breaks of a shift.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelBreakCollection.Count">
      <summary>The method returns the number of available objects.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelBreakCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelBreakCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelBreakCollection.Parent">
      <summary>Returns the parent object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelBreakCollection.Session">
      <summary>Contains the "Project" object.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelBreakCollection.Create" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelBreakCollection.Delete" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelBreakCollection.Delete" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelShift">
      <summary>The ModellShift object is a shift in a time model</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelShift.BreakCollection">
      <summary>The "Breaks" object manages the "Break" objects.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelShift.EndTime">
      <summary>Is the end time of the shift.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelShift.Guid">
      <summary>Is the Guid of the ModelShift which is unique and can be used to identify the object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelShift.Keynote">
      <summary>The Keynote returns the name of one or more main objects and of the current object sepperated with a dot</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelShift.Name">
      <summary>Is the name of the shift.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelShift.Note">
      <summary>Notes can be added and read out, this property contains the notes to a selected shift.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelShift.Parent">
      <summary>Returns the parent object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelShift.Session">
      <summary>Contains the "Project" object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelShift.StartTime">
      <summary>Is the start time of the shift.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelShift.Rename">
      <summary>With this methode a shift can be renamed.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelShiftCollection">
      <summary>The ModellShifts collection allows the access to the shifts of a time model.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelShiftCollection.Count">
      <summary>The method returns the number of available objects.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelShiftCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelShiftCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelShiftCollection.Parent">
      <summary>Returns the parent object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelShiftCollection.Session">
      <summary>Returns the current project reference.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelShiftCollection.Create" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelShiftCollection.Delete" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IModelShiftCollection.Delete" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler">
      <summary>The PfsEngine object is the entry point into the Pfs object model. With the property CountryName you can define the country for the holiday definition.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.Calendar">
      <summary>Retrieves the object for the pfs calendar.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.CountryName">
      <summary>Contains the value for the selected country.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.EventCollection">
      <summary>The "Event" Object is a collection of all  "Event" objects, which are created from the user.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.GroupCollection">
      <summary>The "Groups" object manages the "Group" objects.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.HolidayCollection">
      <summary>In the "Holidays" object all "Holiday" objects are managed.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.Parent">
      <summary>Returns the parent object.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.Save">
      <summary>With the "Save" methode all changes made in the PFS module can be saved.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.BreakCreated">
      <summary>This event is fired, when a new break has been created.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.BreakDeleted">
      <summary>This event is fired, when a break has been deleted.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.BreakRenamed">
      <summary>This event is fired, when the rename methode of a break is excecuted.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.EventCreated">
      <summary>This event is fired, when a new event has been created.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.EventDeleted">
      <summary>This event is fired, when an event has been deleted.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.EventRenamed">
      <summary>This event is fired, when the Rename methode  of an event has been excecuted.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.GroupCreated">
      <summary>This event is fired, when a new group has been created.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.GroupDeleted">
      <summary>This event is fired, when a group has been deleted.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.GroupRenamed">
      <summary>This event is fired, when the rename methode of a group is excecuted.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.Saving">
      <summary>This event is fired, when the Save methode is excecuted.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.ScheduleCreated">
      <summary>This event is fired, when a new schedule has been created.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.ScheduleDeleted">
      <summary>This event is fired, when a schedule has been deleted.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.ScheduleRenamed">
      <summary>This event is fired, when the rename methode of a schedule is excecuted.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.ScheduleTimeCreated">
      <summary>This event is fired, when a new schedule time has been created.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.ScheduleTimeDeleted">
      <summary>This event is fired, when a schedule time has been deleted.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.ScheduleValueCreated">
      <summary>This event is fired, when a new schedule value has been created.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.ScheduleValueDeleted">
      <summary>This event is fired, when a schedule value has been deleted.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.ShiftCreated">
      <summary>This event is fired, when a new shift has been created.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.ShiftDeleted">
      <summary>This event is fired, when a shift has been deleted.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.ShiftRenamed">
      <summary>This event is fired, when the rename methode of a shift is excecuted.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.TimeModelCreated">
      <summary>This event is fired, when a new time model has been created.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.TimeModelDeleted">
      <summary>This event is fired, when a time model has been deleted.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.TimeModelRenamed">
      <summary>This event is fired, when the rename methode of a time model is excecuted.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.Updated" />
    <member name="E:Scada.AddIn.Contracts.ProductionFacilityScheduler.IProductionFacilityScheduler.Updating">
      <summary>This event is fired, before the Save methode has been excecuted.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISchedule">
      <summary>Create absolute and relativ times and link them with switching points, so that a funktion is excecuted or a the value of a variable can be changed.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISchedule.ExecutionDayCollection">
      <summary>This Collection contains all days where a schedule is linked but not as default.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISchedule.Guid">
      <summary>Is the Guid of the Schedule which is unique and can be used to identify the object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISchedule.IsActive" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISchedule.Keynote">
      <summary>The Keynote returns the name of one or more main objects and of the current object sepperated with a dot</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISchedule.Name">
      <summary>Is the name of the schedule.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISchedule.Parent">
      <summary>Returns the parent object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISchedule.ScheduleCollection">
      <summary>A Schedule can also be a container for other schedules, with the "Schedules" collection you can access the sub schedules of a schedule.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISchedule.ScheduleLinkCollection">
      <summary>This collecton manages the functions and variables which are linked to the schedule.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISchedule.ScheduleTimeCollection">
      <summary>This object manages the schedule times of the schedule.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISchedule.Session">
      <summary>Contains the "Project" object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISchedule.SkippedDayCollection">
      <summary>Manages the days which are manualy linked to a schedule for some specific dates as skipped days.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISchedule.Structure">
      <summary>The Structure property is true if the schedule is marked as "structured schedule".</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISchedule.AddToDay">
      <summary>With this methode a schedule can be linked to a day.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISchedule.GetDayLink">
      <summary>The methode returns a tpPFSDayLink.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISchedule.IsDefaultDay">
      <summary>With this methode you can check if a schedule is linked as default schedule to a daytype.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISchedule.RemoveFromDay">
      <summary>With this methode a schedule can be removed from a specific date.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISchedule.Rename">
      <summary>With this methode you can rename a schedule.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISchedule.SetDefaultDay">
      <summary>With this methode you can link a schedule as default to a day type.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleCollection">
      <summary>The Schedules collection contains the existing schedules of an equipment or a parent schedule.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleCollection.Count">
      <summary>The method returns the number of available objects.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleCollection.Parent">
      <summary>Returns the parent object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleCollection.ParentSchedule" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleCollection.Session">
      <summary>Contains the "Project" object.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleCollection.Create" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleCollection.Delete" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleCollection.Delete" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleCollection.Duplicate" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleDay">
      <summary>A Schedule day object is a specific date on which a schedule is excecuted or not.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleDay.Date" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleDay.Parent">
      <summary>Returns the parent object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleDay.Session">
      <summary>Contains the "Project" object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleDay.Type">
      <summary>Contains the type of the schedule day.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleDayCollection">
      <summary>The ScheduleDay collection contains a date, on which the schedule should be executed or not.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleDayCollection.Count">
      <summary>The method returns the number of available objects.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleDayCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleDayCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleDayCollection.Parent">
      <summary>Returns the parent object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleDayCollection.Session">
      <summary>Contains the "Project" object.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleLink">
      <summary>The ScheduleLink object is a link to the variable/function.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleLink.Guid">
      <summary>Is the Guid of the ScheduleLink which is unique and can be used to identify the object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleLink.Name">
      <summary>Is the name of the ScheduleLink.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleLink.Parent">
      <summary>Returns the parent object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleLink.Session">
      <summary>Contains the "Project" object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleLink.Type" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleLink.GetFunction">
      <summary>Returns the function which is linked to the switching point.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleLink.GetVariable" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleLinkCollection">
      <summary>The "IPfsScheduleLinks" object manages the collection of the "IPfsScheduleLink" objects.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleLinkCollection.Count" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleLinkCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleLinkCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleLinkCollection.Parent" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleLinkCollection.Session" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleLinkCollection.CreateFunctionLink">
      <summary>With this methode you can create a new function link.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleLinkCollection.CreateVariableLink">
      <summary>With this methode you can create a new variable link.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleLinkCollection.DeleteFunctionLink">
      <summary>With this methode a function link can be deleted.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleLinkCollection.DeleteFunctionLink">
      <summary>With this methode a function link can be deleted.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleLinkCollection.DeleteVariableLink">
      <summary>With this methode a variable link can be deleted.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleLinkCollection.DeleteVariableLink">
      <summary>With this methode a variable link can be deleted.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleTime">
      <summary>Schedule Times are the entries in a schedule which can contain switching points for functions or variables.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleTime.EventType">
      <summary>Adds a pre-defined event to a relative switch point.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleTime.Guid">
      <summary>Is the Guid of the ScheduleLink which is unique and can be used to identify the object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleTime.Offset">
      <summary>Is the deviation of the set time.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleTime.Parent">
      <summary>Returns the parent object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleTime.ScheduleValueCollection">
      <summary>Contains all  linked values of the schedule time.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleTime.Session">
      <summary>Contains the "Project" object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleTime.Time">
      <summary>Is the Time which is set to the Schedule Time.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleTime.Type" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleTime.UserEventId">
      <summary>Adds a user defined event to a relative switch point.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleTime.GetEvent" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleTimeCollection">
      <summary>The ScheduleTimes collection contains the times of the schedule.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleTimeCollection.Count" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleTimeCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleTimeCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleTimeCollection.Parent" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleTimeCollection.Session" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleTimeCollection.Create" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleTimeCollection.Delete" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleValue" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleValue.Guid" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleValue.IsActive" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleValue.Parent" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleValue.PasswordLevel" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleValue.Session" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleValue.Type" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleValue.Value" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleValue.GetScheduleLink">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleValue.SetScheduleLink">
      <summary>-</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleValueCollection" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleValueCollection.Count" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleValueCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleValueCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleValueCollection.Parent" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleValueCollection.Session" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleValueCollection.Create" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.IScheduleValueCollection.Delete" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISwitchingPoint" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISwitchingPoint.ExecutionTime">
      <summary>Time on which the schedule value is executed</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISwitchingPoint.IsActive" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISwitchingPoint.ScheduleValue">
      <summary>Schedule value to be executed at the execution time</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISwitchingPointFilter" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISwitchingPointFilter.EndTime">
      <summary>End of the timeframe in which we search</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISwitchingPointFilter.FilterDataType">
      <summary>Data that is to be searched. The locally edited version or the stored one</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISwitchingPointFilter.Function">
      <summary>Filter string for the names of the functions that are triggered by the schedule values</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISwitchingPointFilter.GroupName">
      <summary>Filter string for the names of the time model groups that are to be searched</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISwitchingPointFilter.Schedule">
      <summary>Filter string for the names of the schedules that are to be searched</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISwitchingPointFilter.StartTime">
      <summary>Start of the time frame in which we search</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISwitchingPointFilter.Variable">
      <summary>Filter string for the names of variables that are set by the schedule values</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.ISwitchingPointFilter.CreateSwitchingPointPreview">
      <summary>Returns an array of switching points that match the filter</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.ITimeModel" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ITimeModel.Guid" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ITimeModel.Keynote" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ITimeModel.ModelShiftCollection">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ITimeModel.Name" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ITimeModel.Parent" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ITimeModel.Session" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.ITimeModel.AddToDay">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.ITimeModel.GetDayLink" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.ITimeModel.IsDefaultDay">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.ITimeModel.Remove">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.ITimeModel.Rename">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.ITimeModel.SetDefaultDay">
      <summary>-</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.ITimeModelCollection" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ITimeModelCollection.Count" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ITimeModelCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ITimeModelCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ITimeModelCollection.Parent" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ITimeModelCollection.Session" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.ITimeModelCollection.Create" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.ITimeModelCollection.Delete" />
    <member name="M:Scada.AddIn.Contracts.ProductionFacilityScheduler.ITimeModelCollection.Delete" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.LinkType" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.SavingEventArgs" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.ScheduleCreatedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ScheduleCreatedEventArgs.NewSchedule" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.ScheduleDeletedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ScheduleDeletedEventArgs.Name" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.ScheduleRenamedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ScheduleRenamedEventArgs.NewName" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ScheduleRenamedEventArgs.OldName" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.ScheduleTimeCreatedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ScheduleTimeCreatedEventArgs.ScheduleTime" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.ScheduleTimeDeletedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ScheduleTimeDeletedEventArgs.Guid" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.ScheduleValueCreatedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ScheduleValueCreatedEventArgs.ScheduleValue" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.ScheduleValueDeletedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ScheduleValueDeletedEventArgs.Guid" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.ShiftCreatedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ShiftCreatedEventArgs.Shift" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.ShiftDeletedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ShiftDeletedEventArgs.Name" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.ShiftRenamedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ShiftRenamedEventArgs.NewName" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.ShiftRenamedEventArgs.OldName" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.TimeModelCreatedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.TimeModelCreatedEventArgs.TimeModel" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.TimeModelDeletedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.TimeModelDeletedEventArgs.Name" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.TimeModelRenamedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.TimeModelRenamedEventArgs.NewName" />
    <member name="P:Scada.AddIn.Contracts.ProductionFacilityScheduler.TimeModelRenamedEventArgs.OldName" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.TimeType" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.UpdatedEventArgs" />
    <member name="T:Scada.AddIn.Contracts.ProductionFacilityScheduler.UpdatingEventArgs" />
    <member name="T:Scada.AddIn.Contracts.ReactionMatrix.ConditionFlags" />
    <member name="T:Scada.AddIn.Contracts.ReactionMatrix.ICondition" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.ClassIndex" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.ComparisonMethod" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.Count" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.DelayTime" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.Flags" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.FunctionId" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.GroupIndex" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.Hysteresis" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.Index" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.Item" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.Item" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.LimitColor" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.LimitValue" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.LimitValueText" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.LimitValueUpperValue" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.Parent" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.TreatAllValueChangesAsNewLimitViolation" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.Value" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.ValueEdge" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.ValueMask" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.VariableHigherState" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.VariableHigherStateEdge" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.VariableHigherStateMask" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.VariableLowerState" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.VariableLowerStateEdge" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.ICondition.VariableLowerStateMask" />
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.ICondition.Create" />
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.ICondition.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.ICondition.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.ICondition.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.ICondition.Move" />
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.ICondition.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrix" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrix.Count" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrix.Item" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrix.Item" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrix.Name" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrix.Parent" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrix.Type" />
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrix.CreateCondition">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrix.CreateDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrix.DeleteCondition">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrix.DeleteCondition">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrix.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrix.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrix.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrix.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrixCollection" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrixCollection.Count">
      <summary>Count of remas</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrixCollection.IsLocked">
      <summary>Returns true when the current module is Locked by another user (editor).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrixCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrixCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrixCollection.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrixCollection.AcceptChanges">
      <summary>Save module modifications to server (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrixCollection.Create">
      <summary>Creates a new rema (unique name)</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrixCollection.Delete">
      <summary>Delete the given rema</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrixCollection.Delete">
      <summary>Delete the given rema</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrixCollection.EnableChanges">
      <summary>Allow module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrixCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrixCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrixCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrixCollection.GetItemById" />
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrixCollection.ImportFromXml">
      <summary>Imports the selected XML file</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrixCollection.IsChangeEnabled">
      <summary>Returns true when the current module checked out by the current user (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrixCollection.IsDifferent">
      <summary>Returns true when the local and server version are different (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrixCollection.UndoChanges">
      <summary>Undo module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ReactionMatrix.IReactionMatrixCollection.UpdateLocalVersion">
      <summary>Get the latest version from the server (editor).</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ReactionMatrix.ReactionMatrixType" />
    <member name="T:Scada.AddIn.Contracts.Recipe.IStandardRecipe" />
    <member name="P:Scada.AddIn.Contracts.Recipe.IStandardRecipe.Count" />
    <member name="P:Scada.AddIn.Contracts.Recipe.IStandardRecipe.Item" />
    <member name="P:Scada.AddIn.Contracts.Recipe.IStandardRecipe.Name" />
    <member name="P:Scada.AddIn.Contracts.Recipe.IStandardRecipe.Parent" />
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipe.CreateValue">
      <summary>Creates and returns a new Object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipe.Delete">
      <summary>Deletes the objects from collection</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipe.DuplicateRecipe">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipe.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipe.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipe.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipe.ReadValues">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipe.SendValues">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipe.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Recipe.IStandardRecipeCollection" />
    <member name="P:Scada.AddIn.Contracts.Recipe.IStandardRecipeCollection.Count" />
    <member name="P:Scada.AddIn.Contracts.Recipe.IStandardRecipeCollection.IsLocked">
      <summary>Returns true when the current module is Locked by another user (editor).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Recipe.IStandardRecipeCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Recipe.IStandardRecipeCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Recipe.IStandardRecipeCollection.Parent" />
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipeCollection.AcceptChanges">
      <summary>Save module modifications to server (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipeCollection.Create">
      <summary>Creates and returns a new Object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipeCollection.Delete">
      <summary>Deletes the objects from collection</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipeCollection.EnableChanges">
      <summary>Allow module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipeCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipeCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipeCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipeCollection.ImportFromXml">
      <summary>Imports the selected XML file</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipeCollection.IsChangeEnabled">
      <summary>Returns true when the current module checked out by the current user (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipeCollection.IsDifferent">
      <summary>Returns true when the local and server version are different (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipeCollection.UndoChanges">
      <summary>Undo module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipeCollection.UpdateLocalVersion">
      <summary>Get the latest version from the server (editor).</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Recipe.IStandardRecipeValue" />
    <member name="P:Scada.AddIn.Contracts.Recipe.IStandardRecipeValue.Parent" />
    <member name="P:Scada.AddIn.Contracts.Recipe.IStandardRecipeValue.Type" />
    <member name="P:Scada.AddIn.Contracts.Recipe.IStandardRecipeValue.Value" />
    <member name="P:Scada.AddIn.Contracts.Recipe.IStandardRecipeValue.Variable" />
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipeValue.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipeValue.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipeValue.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Recipe.IStandardRecipeValue.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.RecipeGroupManager.IRecipe" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.IRecipe.Count" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.IRecipe.Name">
      <summary>The name of the recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.IRecipe.Number">
      <summary>The identification number of the recipe</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.IRecipe.Parent">
      <summary>Parent of object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.IRecipe.Version">
      <summary>The version of the recipe</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipe.Check">
      <summary>Get differences between recipe and actual values</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipe.CreateDuplicate">
      <summary>Duplicate this recipe</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipe.CreateDuplicateAsVersion">
      <summary>Duplicate this recipe into a new version</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipe.Execute" />
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipe.ExportToDocumentationXml">
      <summary>Export the data of this recipe to a xml file for documentation purpose</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipe.ExportToXml" />
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipe.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipe.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipe.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipe.GetRecipeValue">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipe.GetRecipeValue">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipe.ReadCurrentValues">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipe.SaveCurrentValuesAsRecipe">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipe.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.Count" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.CountVariable" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.Item" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.Item" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.Item" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.Item" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.Name" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.Parent">
      <summary>Parent of object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.AddVariable" />
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.AddVariables">
      <summary>Adds a bulk of variables to the RGM</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.CreateRecipe">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.CreateRecipeVersion">
      <summary>Creates a new recipe version for the given recipe name</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.DeleteRecipe">
      <summary>Delete a recipe object by name OR by nummeric index (for name all recipe versions are deleted)</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.DeleteRecipe">
      <summary>Delete a recipe object by name OR by nummeric index (for name all recipe versions are deleted)</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.DeleteRecipeVersion">
      <summary>Delete a recipe object by name and version OR by nummeric index (for indexes the version is ignored)</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.DeleteRecipeVersion">
      <summary>Delete a recipe object by name and version OR by nummeric index (for indexes the version is ignored)</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.Duplicate" />
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.ExportToXml" />
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.GetRecipeInfo">
      <summary>Returns a list containing the name, number, version and status of all recipes in the group.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.GetRecipeNames">
      <summary>Passes an array with all recipes name of this group</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.GetRecipeVersionNumbers">
      <summary>Passes an array with all versions of a specified recipe</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.GetVariable" />
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.GetVariable" />
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.GetVariableNames">
      <summary>List all variable names from this group</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.ImportFromXml">
      <summary>Imports the selected XML file</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.RemoveVariable" />
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.RemoveVariable" />
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.RenameRecipe">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.ReorderVariables">
      <summary>Reorders the variables in the group</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.Save">
      <summary>Save the Recipegroup and all Recipegroup Variables</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroup.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.Count" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.IsLocked">
      <summary>Returns true when the current module is Locked by another user (editor).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.Parent">
      <summary>Parent of object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.AcceptChanges">
      <summary>Save module modifications to server (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.Create" />
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.Delete" />
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.EnableChanges">
      <summary>Allow module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.ImportFromXml">
      <summary>Imports the selected XML file</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.IsChangeEnabled">
      <summary>Returns true when the current module checked out by the current user (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.IsDifferent">
      <summary>Returns true when the local and server version are different (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.Rename" />
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.UndoChanges">
      <summary>Undo module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.UpdateLocalVersion">
      <summary>Get the latest version from the server (editor).</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.RecipeCreated">
      <summary>A new recipe was created (from the RGM MDI screen).</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.RecipeCreating">
      <summary>A new recipe is going to be created</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.RecipeDeleting">
      <summary>A recipe is going to be deleted</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.RecipeDuplicated">
      <summary>A recipe was created (from the RGM MDI screen) as a duplicate.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.RecipeDuplicating">
      <summary>A recipe is going to be created as a duplicate</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.RecipeImportingByXml" />
    <member name="E:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.RecipeRenaming">
      <summary>A recipe is going to be renamed</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.StateChanging">
      <summary>A recipe status is going to be changed</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.VersionCreated">
      <summary>A new recipe version was created (from the RGM MDI screen).</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.VersionCreating">
      <summary>A new recipe version is going to be created</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.VersionDeleting">
      <summary>A recipe version is going to be deleted</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.VersionDuplicated">
      <summary>A recipe version was created (from the RGM MDI screen) as a duplicate</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.VersionDuplicatedAndValuesRead">
      <summary>A recipe version was created (from the RGM MDI screen) as a duplicate and read from the PLC</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.VersionDuplicating">
      <summary>A recipe version is going to be created as a duplicate</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeGroupCollection.VersionDuplicatingAndValuesReading">
      <summary>A recipe version is going to be created as a duplicate and read</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeValue" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeValue.Parent">
      <summary>Parent of object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeValue.VariableName" />
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeValue.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeValue.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeValue.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeValue.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeVariable" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeVariable.Name">
      <summary>Name of the Variable</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeVariable.Parent">
      <summary>Parent of object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeVariable.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeVariable.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeVariable.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RecipeGroupManager.IRecipeVariable.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.RecipeGroupManager.RecipeCreatedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.RecipeCreatedEventArgs.Recipe" />
    <member name="T:Scada.AddIn.Contracts.RecipeGroupManager.RecipeCreatingEventArgs" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.RecipeCreatingEventArgs.Cancel" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.RecipeCreatingEventArgs.RecipeGroup" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.RecipeCreatingEventArgs.RecipeName" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.RecipeCreatingEventArgs.RecipeNumber" />
    <member name="T:Scada.AddIn.Contracts.RecipeGroupManager.RecipeDeletingEventArgs" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.RecipeDeletingEventArgs.Cancel" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.RecipeDeletingEventArgs.Recipe" />
    <member name="T:Scada.AddIn.Contracts.RecipeGroupManager.RecipeDuplicatedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.RecipeDuplicatedEventArgs.Recipe" />
    <member name="T:Scada.AddIn.Contracts.RecipeGroupManager.RecipeDuplicatingEventArgs" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.RecipeDuplicatingEventArgs.Cancel" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.RecipeDuplicatingEventArgs.RecipeGroup" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.RecipeDuplicatingEventArgs.RecipeName" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.RecipeDuplicatingEventArgs.RecipeNumber" />
    <member name="T:Scada.AddIn.Contracts.RecipeGroupManager.RecipeImportCancelStyle" />
    <member name="T:Scada.AddIn.Contracts.RecipeGroupManager.RecipeImportingByXmlEventArgs" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.RecipeImportingByXmlEventArgs.CancelStyle" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.RecipeImportingByXmlEventArgs.EventTopic" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.RecipeImportingByXmlEventArgs.RecipeGroup" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.RecipeImportingByXmlEventArgs.RecipeName" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.RecipeImportingByXmlEventArgs.RecipeVersion" />
    <member name="T:Scada.AddIn.Contracts.RecipeGroupManager.RecipeImportType" />
    <member name="T:Scada.AddIn.Contracts.RecipeGroupManager.RecipeRenamingEventArgs" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.RecipeRenamingEventArgs.Cancel" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.RecipeRenamingEventArgs.NewRecipeName" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.RecipeRenamingEventArgs.Recipe" />
    <member name="T:Scada.AddIn.Contracts.RecipeGroupManager.StateChangingEventArgs" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.StateChangingEventArgs.Cancel" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.StateChangingEventArgs.NewState" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.StateChangingEventArgs.Recipe" />
    <member name="T:Scada.AddIn.Contracts.RecipeGroupManager.VersionCreatedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.VersionCreatedEventArgs.Recipe" />
    <member name="T:Scada.AddIn.Contracts.RecipeGroupManager.VersionCreatingEventArgs" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.VersionCreatingEventArgs.Cancel" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.VersionCreatingEventArgs.RecipeGroup" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.VersionCreatingEventArgs.RecipeName" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.VersionCreatingEventArgs.RecipeNumber" />
    <member name="T:Scada.AddIn.Contracts.RecipeGroupManager.VersionDeletingEventArgs" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.VersionDeletingEventArgs.Cancel" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.VersionDeletingEventArgs.Recipe" />
    <member name="T:Scada.AddIn.Contracts.RecipeGroupManager.VersionDuplicatedAndValuesReadEventArgs" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.VersionDuplicatedAndValuesReadEventArgs.Recipe" />
    <member name="T:Scada.AddIn.Contracts.RecipeGroupManager.VersionDuplicatedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.VersionDuplicatedEventArgs.Recipe" />
    <member name="T:Scada.AddIn.Contracts.RecipeGroupManager.VersionDuplicatingAndValuesReadingEventArgs" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.VersionDuplicatingAndValuesReadingEventArgs.Cancel" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.VersionDuplicatingAndValuesReadingEventArgs.RecipeGroup" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.VersionDuplicatingAndValuesReadingEventArgs.RecipeName" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.VersionDuplicatingAndValuesReadingEventArgs.RecipeNumber" />
    <member name="T:Scada.AddIn.Contracts.RecipeGroupManager.VersionDuplicatingEventArgs" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.VersionDuplicatingEventArgs.Cancel" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.VersionDuplicatingEventArgs.RecipeGroup" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.VersionDuplicatingEventArgs.RecipeName" />
    <member name="P:Scada.AddIn.Contracts.RecipeGroupManager.VersionDuplicatingEventArgs.RecipeNumber" />
    <member name="T:Scada.AddIn.Contracts.RemoteTransport.CustomTransportItemAction" />
    <member name="T:Scada.AddIn.Contracts.RemoteTransport.ICustomTransportItem" />
    <member name="P:Scada.AddIn.Contracts.RemoteTransport.ICustomTransportItem.ActionType">
      <summary>Get/Set the action type.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.RemoteTransport.ICustomTransportItem.Description" />
    <member name="P:Scada.AddIn.Contracts.RemoteTransport.ICustomTransportItem.IsActive" />
    <member name="P:Scada.AddIn.Contracts.RemoteTransport.ICustomTransportItem.SourcePath">
      <summary>Get/Set the source path.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.RemoteTransport.ICustomTransportItem.TargetPath">
      <summary>Get/Set the target path.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport" />
    <member name="P:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.CeTargetRuntimeFolder">
      <summary>Get/Set the CE folder.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.CustomTransportItemCount">
      <summary>Returns the amount of custom entries.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.IsAdditionalFolderIncluded">
      <summary>Get/Set whether the Additional folder is to be transported.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.IsDriversFolderIncluded">
      <summary>Get/Set whether the Drivers folder is to be transported.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.IsGraphicsFolderIncluded">
      <summary>Get/Set whether the Graphic folder is to be transported.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.IsHelpFolderIncluded">
      <summary>Get/Set whether the Help folder is to be transported.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.IsListFolderIncluded">
      <summary>Get/Set whether the Lists folder is to be transported.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.IsLocalCardReaderForCe">
      <summary>Get/Set whether the CE folder setting is to be used.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.IsLogicFolderIncluded">
      <summary>Get/Set whether the Straton folder is to be transported.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.IsMediaFolderIncluded">
      <summary>Get/Set whether the Media folder is to be transported.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.IsPasswordDialogHidden">
      <summary>Get/Set whether the password dialog is shown.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.IsReportsFolderIncluded">
      <summary>Get/Set whether the Reports folder is to be transported.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.Password">
      <summary>Get/Set the connection password.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.SerialPort">
      <summary>Get/Set the Serial connection address.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.TargetRuntimeFolder">
      <summary>Get/Set the project base.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.TcpIpNameOrAddress">
      <summary>Get/Set the TCP Name.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.TransportMedium">
      <summary>Get/Set the connection type.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.Connect">
      <summary>Start a remote transport connection.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.CreateCustomTransportItem">
      <summary>Adds a new custom entry.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.DeleteCustomTransportItem" />
    <member name="M:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.Disconnect">
      <summary>Stop the current remote transport connection.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.GetCustomTransportItem">
      <summary>Returns the custom entry at the given index.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.ImportRuntimeFiles" />
    <member name="M:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.RebootOs">
      <summary>Reboots the remote OS.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.ReloadRuntime">
      <summary>Reload the remote runtime.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.Save">
      <summary>Saves current remote transport setting.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.SetAsStartProject">
      <summary>Set start project.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.StartRuntime">
      <summary>Start the remote runtime.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.StopRuntime">
      <summary>Stop the remote runtime.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.TransferAllRuntimeFiles">
      <summary>Transfer all.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.RemoteTransport.IRemoteTransport.TransferChangedRuntimeFiles">
      <summary>Transfer changes.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.RemoteTransport.TransportMediumType" />
    <member name="T:Scada.AddIn.Contracts.SapInterface.ActivityState" />
    <member name="T:Scada.AddIn.Contracts.SapInterface.ActivityStateChangingEventArgs" />
    <member name="P:Scada.AddIn.Contracts.SapInterface.ActivityStateChangingEventArgs.ActivityState" />
    <member name="P:Scada.AddIn.Contracts.SapInterface.ActivityStateChangingEventArgs.Function" />
    <member name="T:Scada.AddIn.Contracts.SapInterface.CallFinishedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.SapInterface.CallFinishedEventArgs.Error" />
    <member name="P:Scada.AddIn.Contracts.SapInterface.CallFinishedEventArgs.Function" />
    <member name="T:Scada.AddIn.Contracts.SapInterface.IParameter" />
    <member name="P:Scada.AddIn.Contracts.SapInterface.IParameter.HasDefaultValue">
      <summary>SAP parameter has a default value (TRUE/FALSE)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.SapInterface.IParameter.IsOptional">
      <summary>SAP parameter is optional (TRUE/FALSE)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.SapInterface.IParameter.Name">
      <summary>Name of the SAP parameter</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.SapInterface.IParameter.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.SapInterface.IParameter.RawData">
      <summary>Returns the raw Data of the SAP parameter in a delimited string</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.SapInterface.IParameter.GetValue" />
    <member name="M:Scada.AddIn.Contracts.SapInterface.IParameter.SetValue">
      <summary>Sets  the values for the SAP parameter</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.SapInterface.IParameterCollection" />
    <member name="P:Scada.AddIn.Contracts.SapInterface.IParameterCollection.Count">
      <summary>Count of defined SAP parameters</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.SapInterface.IParameterCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.SapInterface.IParameterCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.SapInterface.IParameterCollection.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.SapInterface.IParameterCollection.Create" />
    <member name="M:Scada.AddIn.Contracts.SapInterface.IParameterCollection.Delete" />
    <member name="T:Scada.AddIn.Contracts.SapInterface.IRow" />
    <member name="P:Scada.AddIn.Contracts.SapInterface.IRow.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.SapInterface.IRow.RawData">
      <summary>Returns the raw Data of the SAP row in a delimited string</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.SapInterface.IRow.GetValue" />
    <member name="M:Scada.AddIn.Contracts.SapInterface.IRow.SetValue">
      <summary>Value of the SAP row / column</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.SapInterface.IRowCollection" />
    <member name="P:Scada.AddIn.Contracts.SapInterface.IRowCollection.Count">
      <summary>Count of defined SAP rows in the table</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.SapInterface.IRowCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.SapInterface.IRowCollection.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.SapInterface.IRowCollection.Add">
      <summary>Appends a new SAP row at the end of the table</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.SapInterface.IRowCollection.Delete" />
    <member name="M:Scada.AddIn.Contracts.SapInterface.IRowCollection.Insert">
      <summary>Inserts a new SAP row at the given index</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.SapInterface.ISapFunction" />
    <member name="P:Scada.AddIn.Contracts.SapInterface.ISapFunction.ActivityState">
      <summary>Activity state of the function call (0 = inactive, 1 = in queue, 2 = call in progress)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.SapInterface.ISapFunction.ErrorCode">
      <summary>Code for result of last call</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.SapInterface.ISapFunction.ErrorText">
      <summary>Short text for result of last call</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.SapInterface.ISapFunction.LastError">
      <summary>Last Error</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.SapInterface.ISapFunction.Name">
      <summary>Name of the SAP function</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.SapInterface.ISapFunction.ParameterCollection">
      <summary>Returns the SAP parameters collection</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.SapInterface.ISapFunction.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.SapInterface.ISapFunction.TableCollection">
      <summary>Returns the SAP tables collection</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.SapInterface.ISapFunction.Call">
      <summary>Calls the SAP function synchronously</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.SapInterface.ISapFunction.CallAsync">
      <summary>Calls the SAP function asynchronously</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.SapInterface.ISapFunction.StartServer">
      <summary>Starts the SAP function as server program to be called from SAP</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.SapInterface.ISapFunction.StopServer">
      <summary>Stops the server program</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.SapInterface.ISapFunction.ActivityStateChanging">
      <summary>Activity state of the function call has changed</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.SapInterface.ISapFunction.CallFinished">
      <summary>SAP function returns from asynchronous call</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.SapInterface.ISapFunction.ServerCalling">
      <summary>Server program called by SAP</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.SapInterface.ISapFunctionCollection" />
    <member name="P:Scada.AddIn.Contracts.SapInterface.ISapFunctionCollection.Count">
      <summary>Count of defined SAP functions</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.SapInterface.ISapFunctionCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.SapInterface.ISapFunctionCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.SapInterface.ISapFunctionCollection.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.SapInterface.ISapFunctionCollection.Create" />
    <member name="M:Scada.AddIn.Contracts.SapInterface.ISapFunctionCollection.Delete" />
    <member name="T:Scada.AddIn.Contracts.SapInterface.ITable" />
    <member name="P:Scada.AddIn.Contracts.SapInterface.ITable.IsOptional">
      <summary>SAP table is optional (TRUE/FALSE)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.SapInterface.ITable.Name">
      <summary>Name of the SAP table</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.SapInterface.ITable.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.SapInterface.ITable.RowCollection">
      <summary>Returns the collection of the rows in the table</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.SapInterface.ITable.Clear">
      <summary>Deletes all rows in the table</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.SapInterface.ITableCollection" />
    <member name="P:Scada.AddIn.Contracts.SapInterface.ITableCollection.Count">
      <summary>Count of defined SAP tables</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.SapInterface.ITableCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.SapInterface.ITableCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.SapInterface.ITableCollection.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.SapInterface.ITableCollection.Create" />
    <member name="M:Scada.AddIn.Contracts.SapInterface.ITableCollection.Delete" />
    <member name="T:Scada.AddIn.Contracts.SapInterface.SapError" />
    <member name="T:Scada.AddIn.Contracts.SapInterface.ServerCallingEventArgs" />
    <member name="P:Scada.AddIn.Contracts.SapInterface.ServerCallingEventArgs.Error" />
    <member name="P:Scada.AddIn.Contracts.SapInterface.ServerCallingEventArgs.Function" />
    <member name="T:Scada.AddIn.Contracts.Scheduler.DayType" />
    <member name="T:Scada.AddIn.Contracts.Scheduler.ICustomPeriodSchedule" />
    <member name="P:Scada.AddIn.Contracts.Scheduler.ICustomPeriodSchedule.EndDate">
      <summary>End Date of a Custom Period</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Scheduler.ICustomPeriodSchedule.StartDate">
      <summary>Start Date of a Custom Period</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Scheduler.ICustomPeriodSchedule.SwitchingPeriodCollection">
      <summary>Collection of Switching Periods in a Custom Period</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Scheduler.ICustomPeriodSchedule.SwitchingPointCollection">
      <summary>Collection of Switching Points in a Custom Period</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Scheduler.IDaySchedule" />
    <member name="P:Scada.AddIn.Contracts.Scheduler.IDaySchedule.DayType">
      <summary>Standard Day type</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Scheduler.IDaySchedule.SwitchingPeriodCollection">
      <summary>Collection of Switching Periods in a Standard Day</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Scheduler.IDaySchedule.SwitchingPointCollection">
      <summary>Collection of Switching Points in a Standard Day</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Scheduler.IScheduleCollection">
      <summary>The Schedules collection contains the existing schedules of an equipment or a parent schedule.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Scheduler.IScheduleCollection.Count">
      <summary>The method returns the number of available objects.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Scheduler.IScheduleCollection.Item" />
    <member name="M:Scada.AddIn.Contracts.Scheduler.IScheduleCollection.CreateCustomPeriodSchedule" />
    <member name="M:Scada.AddIn.Contracts.Scheduler.IScheduleCollection.DeleteCustomPeriodSchedule" />
    <member name="M:Scada.AddIn.Contracts.Scheduler.IScheduleCollection.GetDaySchedule" />
    <member name="T:Scada.AddIn.Contracts.Scheduler.IScheduleFunction" />
    <member name="P:Scada.AddIn.Contracts.Scheduler.IScheduleFunction.Function">
      <summary>Defines a Function in a Switching Point</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Scheduler.IScheduleFunction.IsActive" />
    <member name="T:Scada.AddIn.Contracts.Scheduler.IScheduleFunctionCollection" />
    <member name="P:Scada.AddIn.Contracts.Scheduler.IScheduleFunctionCollection.Count" />
    <member name="P:Scada.AddIn.Contracts.Scheduler.IScheduleFunctionCollection.Item" />
    <member name="M:Scada.AddIn.Contracts.Scheduler.IScheduleFunctionCollection.Create" />
    <member name="M:Scada.AddIn.Contracts.Scheduler.IScheduleFunctionCollection.Delete" />
    <member name="T:Scada.AddIn.Contracts.Scheduler.IScheduleGroup" />
    <member name="P:Scada.AddIn.Contracts.Scheduler.IScheduleGroup.Name">
      <summary>Schedule Group Name</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Scheduler.IScheduleGroup.ScheduleCollection" />
    <member name="T:Scada.AddIn.Contracts.Scheduler.IScheduleGroupCollection" />
    <member name="P:Scada.AddIn.Contracts.Scheduler.IScheduleGroupCollection.Count">
      <summary>Returns the Count of Schedule Groups</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Scheduler.IScheduleGroupCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Scheduler.IScheduleGroupCollection.Item" />
    <member name="M:Scada.AddIn.Contracts.Scheduler.IScheduleGroupCollection.Create">
      <summary>Creates a Schedule Group</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Scheduler.IScheduleGroupCollection.Delete" />
    <member name="M:Scada.AddIn.Contracts.Scheduler.IScheduleGroupCollection.Delete" />
    <member name="M:Scada.AddIn.Contracts.Scheduler.IScheduleGroupCollection.Duplicate" />
    <member name="M:Scada.AddIn.Contracts.Scheduler.IScheduleGroupCollection.Duplicate" />
    <member name="M:Scada.AddIn.Contracts.Scheduler.IScheduleGroupCollection.Rename" />
    <member name="M:Scada.AddIn.Contracts.Scheduler.IScheduleGroupCollection.Rename" />
    <member name="T:Scada.AddIn.Contracts.Scheduler.IScheduler" />
    <member name="P:Scada.AddIn.Contracts.Scheduler.IScheduler.IsLocked">
      <summary>Returns true when the current module is Locked by another user (editor).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Scheduler.IScheduler.ScheduleGroupCollection">
      <summary>Collection of Schedule Groups</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Scheduler.IScheduler.AcceptChanges">
      <summary>Save module modifications to server (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Scheduler.IScheduler.EnableChanges">
      <summary>Allow module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Scheduler.IScheduler.IsChangeEnabled">
      <summary>Returns true when the current module checked out by the current user (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Scheduler.IScheduler.IsDifferent">
      <summary>Returns true when the local and server version are different (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Scheduler.IScheduler.Save">
      <summary>Saves the changes made to the Scheduler</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Scheduler.IScheduler.Undo">
      <summary>Undo changes made to the Scheduler since the last Save</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Scheduler.IScheduler.UndoChanges">
      <summary>Undo module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Scheduler.IScheduler.UpdateLocalVersion">
      <summary>Get the latest version from the server (editor).</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Scheduler.IScheduleVariable" />
    <member name="P:Scada.AddIn.Contracts.Scheduler.IScheduleVariable.IsActive" />
    <member name="P:Scada.AddIn.Contracts.Scheduler.IScheduleVariable.ValueToSet">
      <summary>Defines the Value of a Variable</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Scheduler.IScheduleVariable.Variable" />
    <member name="T:Scada.AddIn.Contracts.Scheduler.IScheduleVariableCollection" />
    <member name="P:Scada.AddIn.Contracts.Scheduler.IScheduleVariableCollection.Count">
      <summary>Returns the Count of Variables in a Switching Point</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Scheduler.IScheduleVariableCollection.Item" />
    <member name="M:Scada.AddIn.Contracts.Scheduler.IScheduleVariableCollection.Create">
      <summary>Creates a Variable in a Switching Point</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Scheduler.IScheduleVariableCollection.Delete">
      <summary>Deletes a Variable in a Switching Point</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Scheduler.ISwitchingPeriod" />
    <member name="P:Scada.AddIn.Contracts.Scheduler.ISwitchingPeriod.EndPoint">
      <summary>Switching Point at the End of the Period</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Scheduler.ISwitchingPeriod.StartPoint">
      <summary>Switching Point at the Start of the Period</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Scheduler.ISwitchingPeriodCollection" />
    <member name="P:Scada.AddIn.Contracts.Scheduler.ISwitchingPeriodCollection.Count">
      <summary>Returns the Count of Switching Periods</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Scheduler.ISwitchingPeriodCollection.Item" />
    <member name="M:Scada.AddIn.Contracts.Scheduler.ISwitchingPeriodCollection.Create">
      <summary>Creates a new Switching Period</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Scheduler.ISwitchingPeriodCollection.Delete">
      <summary>Deletes a Switching Period</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Scheduler.ISwitchingPoint" />
    <member name="P:Scada.AddIn.Contracts.Scheduler.ISwitchingPoint.FunctionCollection" />
    <member name="P:Scada.AddIn.Contracts.Scheduler.ISwitchingPoint.Start" />
    <member name="P:Scada.AddIn.Contracts.Scheduler.ISwitchingPoint.VariableCollection" />
    <member name="T:Scada.AddIn.Contracts.Scheduler.ISwitchingPointCollection" />
    <member name="P:Scada.AddIn.Contracts.Scheduler.ISwitchingPointCollection.Count" />
    <member name="P:Scada.AddIn.Contracts.Scheduler.ISwitchingPointCollection.Item" />
    <member name="M:Scada.AddIn.Contracts.Scheduler.ISwitchingPointCollection.Create" />
    <member name="M:Scada.AddIn.Contracts.Scheduler.ISwitchingPointCollection.Delete" />
    <member name="T:Scada.AddIn.Contracts.Screen.ClosingEventArgs" />
    <member name="T:Scada.AddIn.Contracts.Screen.ElementGestureEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementGestureEventArgs.Element" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementGestureEventArgs.InteractionContextOutput" />
    <member name="T:Scada.AddIn.Contracts.Screen.ElementInitializedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementInitializedEventArgs.Element" />
    <member name="T:Scada.AddIn.Contracts.Screen.ElementLeftButtonDoubleClickEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementLeftButtonDoubleClickEventArgs.Element" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementLeftButtonDoubleClickEventArgs.Flags" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementLeftButtonDoubleClickEventArgs.PositionX" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementLeftButtonDoubleClickEventArgs.PositionY" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementLeftButtonDoubleClickEventArgs.Screen" />
    <member name="T:Scada.AddIn.Contracts.Screen.ElementLeftButtonDownEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementLeftButtonDownEventArgs.Element" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementLeftButtonDownEventArgs.Flags" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementLeftButtonDownEventArgs.PositionX" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementLeftButtonDownEventArgs.PositionY" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementLeftButtonDownEventArgs.Screen" />
    <member name="T:Scada.AddIn.Contracts.Screen.ElementLeftButtonUpEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementLeftButtonUpEventArgs.Element" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementLeftButtonUpEventArgs.Flags" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementLeftButtonUpEventArgs.PositionX" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementLeftButtonUpEventArgs.PositionY" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementLeftButtonUpEventArgs.Screen" />
    <member name="T:Scada.AddIn.Contracts.Screen.ElementMouseOverEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementMouseOverEventArgs.Element" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementMouseOverEventArgs.Flags" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementMouseOverEventArgs.PositionX" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementMouseOverEventArgs.PositionY" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementMouseOverEventArgs.Screen" />
    <member name="T:Scada.AddIn.Contracts.Screen.ElementRightButtonDoubleClickEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementRightButtonDoubleClickEventArgs.Element" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementRightButtonDoubleClickEventArgs.Flags" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementRightButtonDoubleClickEventArgs.PositionX" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementRightButtonDoubleClickEventArgs.PositionY" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementRightButtonDoubleClickEventArgs.Screen" />
    <member name="T:Scada.AddIn.Contracts.Screen.ElementRightButtonDownEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementRightButtonDownEventArgs.Element" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementRightButtonDownEventArgs.Flags" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementRightButtonDownEventArgs.PositionX" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementRightButtonDownEventArgs.PositionY" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementRightButtonDownEventArgs.Screen" />
    <member name="T:Scada.AddIn.Contracts.Screen.ElementRightButtonUpEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementRightButtonUpEventArgs.Element" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementRightButtonUpEventArgs.Flags" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementRightButtonUpEventArgs.PositionX" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementRightButtonUpEventArgs.PositionY" />
    <member name="P:Scada.AddIn.Contracts.Screen.ElementRightButtonUpEventArgs.Screen" />
    <member name="T:Scada.AddIn.Contracts.Screen.IScreen">
      <summary>A Collection of screens.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.BackgroundColor" />
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.BackgroundGraphicAlignment" />
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.BackgroundGraphicFile">
      <summary>Background image for the picture</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.Bottom">
      <summary>Bottom-coordinate of the picture</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.Description">
      <summary>Metadata tag which is in place to hold any description text.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.EndFunctionId">
      <summary>Rt-Function by closing the picture</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.FrameName" />
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.Height">
      <summary>Height of the picture</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.InstanceId">
      <summary>Returns the template instance ID of the DynPicture. (RT-Only)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.IsEnabled" />
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.IsHidden">
      <summary>Sets the visibility of the picture.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.IsLocked">
      <summary>Returns true when the current module is Locked by another user (editor).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.IsModal">
      <summary>Show picture as modal dialog</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.IsScreenActive">
      <summary>Checks, if the current picture is open.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.IsVisibleUnderCe">
      <summary>Use picture in CE-projects</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.Left">
      <summary>Left-coordinate of the picture</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.MonitorId">
      <summary>Returns the ID of the Monitor on which the picture is opened. (RT-Only)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.Name">
      <summary>The unique name of the current picture.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.Parent">
      <summary>Returns the parent object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.Right">
      <summary>Right-coordinate of the picture</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.ScreenContainer">
      <summary>Returns the container element in which the DynPicture is contained, or NULL when the DynPicture is not inside a container. (RT-Only)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.ScreenElementCollection">
      <summary>Returns the Elements-list</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.ScreenFilter">
      <summary>Returns the current picture filter. (RT-Only)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.ScreenInstanceCollection">
      <summary>Returns a collection containing all instances of the DynPicture. (RT-Only)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.ScreenType" />
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.SelectedScreenElementCollection">
      <summary>Returns a collection of the currently selected elements.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.StartFunctionId">
      <summary>Rt-Function by showing the picture</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.Top">
      <summary>Top-coordinate of the picture.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.UseAutoKeyboardLayout">
      <summary>Use regional settings for keyboard layout</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.UseSizeFromFrame">
      <summary>Use size-properties of the linked template.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.Width">
      <summary>Width of the picture.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreen.ZoomLevel">
      <summary>Zoom level of a world picture (RT-Only)</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.AcceptChanges">
      <summary>Save module modifications to server (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.BringToTop">
      <summary>Brings picture to top of Z-order</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.Close" />
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.CreateDefaultMdiElements">
      <summary>Create the MDI-Default elements (only with MDI-Windows)</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.CreateScreenshot">
      <summary>Creates a Bitmap of the picture, with the appearance as shown in the editor.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.CreateScreenTemplate" />
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.DeselectElements">
      <summary>Deselects all currently selected Elements</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.Duplicate">
      <summary>Copies the picture</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.EnableChanges">
      <summary>Allow module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.GetDynamicProperties" />
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.GetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.ImportMdiTemplateItems" />
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.InsertSymbol">
      <summary>Insert a symbol from the symbol-library</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.IsChangeEnabled">
      <summary>Returns true when the current module checked out by the current user (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.IsDifferent">
      <summary>Returns true when the local and server version are different (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.MdiElementCollection">
      <summary>Returns the list of the available MDI-controls</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.Move">
      <summary>Updates the position of a DynPicture object.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.RedrawAll">
      <summary>Update the picture</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.RedrawArea">
      <summary>Redraws a certain area of the picture.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.Save">
      <summary>Method to save the picture (changes in this collection)</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.SetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.SetZoomAndPosition">
      <summary>Sets zoom factors and position of a world picture (RT-Only)</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.Show">
      <summary>Activates the picture (only runtime)</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.UndoChanges">
      <summary>Undo module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreen.UpdateLocalVersion">
      <summary>Get the latest version from the server (editor).</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreen.Closing" />
    <member name="E:Scada.AddIn.Contracts.Screen.IScreen.Opened">
      <summary>Event is fired by opening the picture</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreen.TimerElapsed">
      <summary>This event is executed in a cyclic interval – depending on the flash frequency set in the project.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Screen.IScreenCollection">
      <summary>This collection contains the defined Screens.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreenCollection.Count">
      <summary>Returns number of the elements</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreenCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Screen.IScreenCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Screen.IScreenCollection.Parent">
      <summary>The parent object of the current object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreenCollection.AddMarker">
      <summary>Adds a marker into a screen</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreenCollection.Create">
      <summary>Creates and returns a new Object.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreenCollection.Delete">
      <summary>Deletes the objects from collection</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreenCollection.DeleteMarker">
      <summary>Deletes a marker from a screen</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreenCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreenCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreenCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreenCollection.GetCurrentEditorScreen">
      <summary>Returns the currently active screen in the editor</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreenCollection.GetPointerInfo">
      <summary>Gets the information for the specified pointer associated with the current message.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreenCollection.GetScreenOnMonitor">
      <summary>Returns a screen with given name on the given monitor.(RT-Only)</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreenCollection.ImportFromXml">
      <summary>Imports the selected XML file</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreenCollection.SetupTouchInertia">
      <summary>Setup inertia settings for multitouch manipulation</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreenCollection.ShowCreateDialog">
      <summary>Opens the zenon standard dialog "New screen".</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.ElementGesture">
      <summary>Defines the output of the Interaction Context object.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.ElementInitialized">
      <summary>Event is fired when an element is initialized.(RT-Only)</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.ElementLeftButtonDoubleClick">
      <summary>Event is fired when an element is double clicked with the left mouse button.(RT-Only)</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.ElementLeftButtonDown">
      <summary>Event is fired when the left mouse button is pushed down on an element.(RT-Only)</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.ElementLeftButtonUp">
      <summary>Event is fired when the right mouse button is released on an element.(RT-Only)</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.ElementMouseOver">
      <summary>Event is fired when the mouse is moved over an element.(RT-Only)</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.ElementRightButtonDoubleClick">
      <summary>Event is fired when an element is double clicked with the right mouse button.(RT-Only)</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.ElementRightButtonDown">
      <summary>Event is fired when the right mouse button is pushed down on an element.(RT-Only)</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.ElementRightButtonUp">
      <summary>Event is fired when the right mouse button is released on an element.(RT-Only)</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.NCPointerDown">
      <summary>Posted when a pointer makes contact over the non-client area of a window.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.NCPointerUp">
      <summary>Posted when a pointer that made contact over the non-client area of a window breaks contact.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.NCPointerUpdate">
      <summary>Posted to provide an update on a pointer that made contact over the non-client area of a window or when a hovering uncaptured contact moves over the non-client area of a window.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.PictureGesture">
      <summary>Defines the output of the Interaction Context object.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.PointerActivate" />
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.PointerCaptureChanged">
      <summary>Sent to a window that is losing capture of an input pointer.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.PointerDown">
      <summary>Posted when a pointer makes contact over the client area of a window.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.PointerEnter">
      <summary>Sent to a window when a new pointer enters detection range over the window (hover) or when an existing pointer moves within the boundaries of the window.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.PointerHWheel">
      <summary>Posted to the window with foreground keyboard focus when a horizontal scroll wheel is rotated.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.PointerLeave">
      <summary>Sent to a window when a pointer leaves detection range over the window (hover) or when a pointer moves outside the boundaries of the window.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.PointerUp" />
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.PointerUpdate" />
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.PointerWheel">
      <summary>Posted to the window with foreground keyboard focus when a horizontal scroll wheel is rotated.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.ScreenClosing">
      <summary>Event is fired when a screen is closed.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.ScreenOpened">
      <summary>Event is fired when a screen is opened.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.Touching">
      <summary>Event is fired for all touch events.(RT-Only)</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.TouchManipulationCompleted">
      <summary>Event is fired when a touch manipulation ends.(RT-Only)</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.TouchManipulationDelta">
      <summary>Event is fired when a touch manipulation is in progress.(RT-Only)</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.TouchManipulationStarted">
      <summary>Event is fired when a touch manipulation starts.(RT-Only)</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.Screen.IScreenCollection.WindowPositionChanged">
      <summary>Event is fired when a screen is moved or resized.(RT-Only)</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Screen.IScreenFilter" />
    <member name="M:Scada.AddIn.Contracts.Screen.IScreenFilter.CreateDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreenFilter.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreenFilter.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreenFilter.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Screen.IScreenFilter.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Screen.IScreenInstanceCollection">
      <summary>Used to check if a screen is displayed in the runtime.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreenInstanceCollection.Count">
      <summary>Returns the amount of instances of the given DynPicture object. (RT-Only)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreenInstanceCollection.Item" />
    <member name="T:Scada.AddIn.Contracts.Screen.IScreenTemplate" />
    <member name="M:Scada.AddIn.Contracts.Screen.IScreenTemplate.GetDynamicProperties" />
    <member name="M:Scada.AddIn.Contracts.Screen.IScreenTemplate.GetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.Screen.IScreenTemplate.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Screen.IScreenTemplateCollection" />
    <member name="P:Scada.AddIn.Contracts.Screen.IScreenTemplateCollection.Count">
      <summary>Number of MDI Templates in the Collection.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Screen.IScreenTemplateCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Screen.IScreenTemplateCollection.Item" />
    <member name="T:Scada.AddIn.Contracts.Screen.NCPointerDownEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.NCPointerDownEventArgs.HitTestResult" />
    <member name="P:Scada.AddIn.Contracts.Screen.NCPointerDownEventArgs.PointerId" />
    <member name="P:Scada.AddIn.Contracts.Screen.NCPointerDownEventArgs.PositionX" />
    <member name="P:Scada.AddIn.Contracts.Screen.NCPointerDownEventArgs.PositionY" />
    <member name="P:Scada.AddIn.Contracts.Screen.NCPointerDownEventArgs.Screen" />
    <member name="T:Scada.AddIn.Contracts.Screen.NCPointerUpdateEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.NCPointerUpdateEventArgs.HitTestResult" />
    <member name="P:Scada.AddIn.Contracts.Screen.NCPointerUpdateEventArgs.PointerId" />
    <member name="P:Scada.AddIn.Contracts.Screen.NCPointerUpdateEventArgs.PositionX" />
    <member name="P:Scada.AddIn.Contracts.Screen.NCPointerUpdateEventArgs.PositionY" />
    <member name="P:Scada.AddIn.Contracts.Screen.NCPointerUpdateEventArgs.Screen" />
    <member name="T:Scada.AddIn.Contracts.Screen.NCPointerUpEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.NCPointerUpEventArgs.PointerId" />
    <member name="P:Scada.AddIn.Contracts.Screen.NCPointerUpEventArgs.PositionX" />
    <member name="P:Scada.AddIn.Contracts.Screen.NCPointerUpEventArgs.PositionY" />
    <member name="P:Scada.AddIn.Contracts.Screen.NCPointerUpEventArgs.Screen" />
    <member name="T:Scada.AddIn.Contracts.Screen.OpenedEventArgs" />
    <member name="T:Scada.AddIn.Contracts.Screen.PictureGestureEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.PictureGestureEventArgs.InteractionContextOutput" />
    <member name="P:Scada.AddIn.Contracts.Screen.PictureGestureEventArgs.Screen" />
    <member name="T:Scada.AddIn.Contracts.Screen.PointerActivateEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerActivateEventArgs.HitTestResult" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerActivateEventArgs.HWnd" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerActivateEventArgs.PointerId" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerActivateEventArgs.Screen" />
    <member name="T:Scada.AddIn.Contracts.Screen.PointerCaptureChangedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerCaptureChangedEventArgs.HWnd" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerCaptureChangedEventArgs.PointerId" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerCaptureChangedEventArgs.Screen" />
    <member name="T:Scada.AddIn.Contracts.Screen.PointerDownEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerDownEventArgs.Element" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerDownEventArgs.IsFifthButton" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerDownEventArgs.IsFirstButton" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerDownEventArgs.IsFourthButton" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerDownEventArgs.IsInContact" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerDownEventArgs.IsInRange" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerDownEventArgs.IsNew" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerDownEventArgs.IsPrimary" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerDownEventArgs.IsSecondButton" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerDownEventArgs.IsThirdButton" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerDownEventArgs.PointerId" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerDownEventArgs.PositionX" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerDownEventArgs.PositionY" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerDownEventArgs.Screen" />
    <member name="T:Scada.AddIn.Contracts.Screen.PointerEnterEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerEnterEventArgs.Element" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerEnterEventArgs.IsInContact" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerEnterEventArgs.IsInRange" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerEnterEventArgs.IsNew" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerEnterEventArgs.PointerId" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerEnterEventArgs.Screen" />
    <member name="T:Scada.AddIn.Contracts.Screen.PointerHWheelEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerHWheelEventArgs.Element" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerHWheelEventArgs.PointerId" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerHWheelEventArgs.PositionX" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerHWheelEventArgs.PositionY" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerHWheelEventArgs.Screen" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerHWheelEventArgs.WheelDelta" />
    <member name="T:Scada.AddIn.Contracts.Screen.PointerLeaveEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerLeaveEventArgs.Element" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerLeaveEventArgs.IsInContact" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerLeaveEventArgs.IsInRange" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerLeaveEventArgs.PointerId" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerLeaveEventArgs.Screen" />
    <member name="T:Scada.AddIn.Contracts.Screen.PointerUpdateEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpdateEventArgs.Element" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpdateEventArgs.IsFifthButton" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpdateEventArgs.IsFirstButton" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpdateEventArgs.IsFourthButton" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpdateEventArgs.IsInContact" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpdateEventArgs.IsInRange" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpdateEventArgs.IsNew" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpdateEventArgs.IsPrimary" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpdateEventArgs.IsSecondButton" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpdateEventArgs.IsThirdButton" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpdateEventArgs.PointerId" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpdateEventArgs.PositionX" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpdateEventArgs.PositionY" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpdateEventArgs.Screen" />
    <member name="T:Scada.AddIn.Contracts.Screen.PointerUpEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpEventArgs.Element" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpEventArgs.IsCanceled" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpEventArgs.IsFifthButton" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpEventArgs.IsFirstButton" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpEventArgs.IsFourthButton" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpEventArgs.IsInContact" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpEventArgs.IsInRange" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpEventArgs.IsPrimary" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpEventArgs.IsSecondButton" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpEventArgs.IsThirdButton" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpEventArgs.PointerId" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpEventArgs.PositionX" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpEventArgs.PositionY" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerUpEventArgs.Screen" />
    <member name="T:Scada.AddIn.Contracts.Screen.PointerWheelEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerWheelEventArgs.Element" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerWheelEventArgs.PointerId" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerWheelEventArgs.PositionX" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerWheelEventArgs.PositionY" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerWheelEventArgs.Screen" />
    <member name="P:Scada.AddIn.Contracts.Screen.PointerWheelEventArgs.WheelDelta" />
    <member name="T:Scada.AddIn.Contracts.Screen.ScreenClosingEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.ScreenClosingEventArgs.Screen" />
    <member name="T:Scada.AddIn.Contracts.Screen.ScreenMultiTouchRawEventRouting" />
    <member name="T:Scada.AddIn.Contracts.Screen.ScreenOpenedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.ScreenOpenedEventArgs.Screen" />
    <member name="T:Scada.AddIn.Contracts.Screen.ScreenshotOutputType" />
    <member name="T:Scada.AddIn.Contracts.Screen.ScreenType" />
    <member name="T:Scada.AddIn.Contracts.Screen.ShowCreateScreenDialogReturnResult" />
    <member name="T:Scada.AddIn.Contracts.Screen.TimerElapsedEventArgs" />
    <member name="T:Scada.AddIn.Contracts.Screen.TouchingEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchingEventArgs.ExtraInfos" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchingEventArgs.Flags" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchingEventArgs.Ids" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchingEventArgs.Masks" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchingEventArgs.Sources" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchingEventArgs.Times" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchingEventArgs.XContacts" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchingEventArgs.XCoordinates" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchingEventArgs.YContacts" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchingEventArgs.YCoordinates" />
    <member name="T:Scada.AddIn.Contracts.Screen.TouchManipulationCompletedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchManipulationCompletedEventArgs.ContactCount" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchManipulationCompletedEventArgs.PositionX" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchManipulationCompletedEventArgs.PositionY" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchManipulationCompletedEventArgs.Rotation" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchManipulationCompletedEventArgs.ScaleFactor" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchManipulationCompletedEventArgs.TranslationX" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchManipulationCompletedEventArgs.TranslationY" />
    <member name="T:Scada.AddIn.Contracts.Screen.TouchManipulationDeltaEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchManipulationDeltaEventArgs.ContactCount" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchManipulationDeltaEventArgs.PositionX" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchManipulationDeltaEventArgs.PositionY" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchManipulationDeltaEventArgs.Rotation" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchManipulationDeltaEventArgs.ScaleFactor" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchManipulationDeltaEventArgs.TranslationX" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchManipulationDeltaEventArgs.TranslationY" />
    <member name="T:Scada.AddIn.Contracts.Screen.TouchManipulationStartedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchManipulationStartedEventArgs.PositionX" />
    <member name="P:Scada.AddIn.Contracts.Screen.TouchManipulationStartedEventArgs.PositionY" />
    <member name="T:Scada.AddIn.Contracts.Screen.WindowPositionChangedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Screen.WindowPositionChangedEventArgs.Screen" />
    <member name="T:Scada.AddIn.Contracts.ScreenElement.ElementType" />
    <member name="T:Scada.AddIn.Contracts.ScreenElement.IControlElement">
      <summary>This collection returns the default settings of the MDI elements.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IControlElement.FillColor" />
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IControlElement.Height">
      <summary>Height of the element (in pixels).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IControlElement.Id">
      <summary>Returns the unique ID of the "MdiElement" object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IControlElement.IsDefault">
      <summary>Returns TRUE, if the "MdiElement" object belongs to the default elements.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IControlElement.Left">
      <summary>Returns the position of the left window border of the element in pixel.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IControlElement.Parent">
      <summary>Returns the parent object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IControlElement.ScreenTypeSpecificAction">
      <summary>Name of the linked picture type specific function.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IControlElement.TextColor" />
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IControlElement.Top">
      <summary>Returns the position of the top window border of the element in pixel.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IControlElement.Type">
      <summary>Type of the "Element" object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IControlElement.Width">
      <summary>Width of the element (in pixel).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IControlElement.GetDynamicProperties" />
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IControlElement.GetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IControlElement.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IControlElement.SetDynamicProperty" />
    <member name="T:Scada.AddIn.Contracts.ScreenElement.IControlElementCollection">
      <summary>This object manages "MdiElement" objects.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IControlElementCollection.AreProfileElementsAvailable">
      <summary>Returns TRUE, if profile elements are available for this type of object.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IControlElementCollection.Count">
      <summary>Returns count of the elements</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IControlElementCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IControlElementCollection.Parent">
      <summary>The parent object of the current object</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ScreenElement.IScreenElement">
      <summary>Contains the most important information on a defined dynamic element, e.g. type, position, colour, ...</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.AuthorizationLevel">
      <summary>Password-Level for user-action</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.Bottom">
      <summary>Returns the position of the bottom window border of the dynamic element in pixel.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.ChangeHeightMaxHeight">
      <summary>Zoom factor of the height of the element for variable maximum (in %).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.ChangeHeightMaxVariableValue">
      <summary>Highest variable value for zooming the height of the element.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.ChangeHeightMinHeight">
      <summary>Zoom factor of the height of the element for variable minimum (in %).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.ChangeHeightMinVariableValue">
      <summary>Lowest variable value for zooming the height of the element.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.ChangeHeightVariable">
      <summary>Name of the variable for zooming the height of the element as string.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.ChangeWidthMaxVariableValue">
      <summary>Highest variable value for zooming the width of the element.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.ChangeWidthMaxWidth">
      <summary>Zoom factor of the width of the element for variable maximum (in %).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.ChangeWidthMinVariableValue">
      <summary>Lowest variable value for zooming the width of the element.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.ChangeWidthMinWidth">
      <summary>Zoom factor of the width of the element for variable minimum (in %).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.ChangeWidthVariable">
      <summary>Name of the variable for zooming the width of the element as string.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.ContextMenuName">
      <summary>Name of the linked Menu</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.FillColor">
      <summary>Background-Color.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.FillColorVariable">
      <summary>Name (as string) of the variable, whose limit colors should influence the background/filling color of the element.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.Function">
      <summary>Returns the linked Function.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.GetActiveX">
      <summary>Returns the linked Active-X control (Standard = Nothing)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.HasFocus">
      <summary>Sets the focus to the element</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.Height">
      <summary>Height of the element</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.HelpChapter">
      <summary>Help-Index in the helpfile for context-sensitive help</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.HelpFile">
      <summary>Name of the linked helpfile</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.HorizontalReferencePoint" />
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.Id">
      <summary>ID of the element (unique)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.Interlocking">
      <summary>Returns the linked Interlocking.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.InterlockingState">
      <summary>Returns whether the Element is currently interlocked.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.IsEnabled" />
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.IsHidden">
      <summary>Show/Hide the element (only runtime)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.IsInSymbolLibrary">
      <summary>Insert the given symbol into the symbol-library</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.IsVisibilityFromLimit">
      <summary>Returns true if visibility is adopted from the limit value of the variable</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.IsVisibleIfInterlocked">
      <summary>Returns true if visible when interlocked</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.KeyCombination">
      <summary>Hotkey for the element</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.Left">
      <summary>Left-coordinate of the element</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.LineColorVariable">
      <summary>Name (as string) of the variable, whose limit colors should influence the line/text color of the element.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.Name">
      <summary>Name of the element (optional)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.NameForObjectList">
      <summary>Element is entered into the object list of the world view with the text defined with this property as string.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.Parent">
      <summary>Parent-Object of the element</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.Right">
      <summary>Returns the position of the right window border of the dynamic element in pixel.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.RotationMaxValue">
      <summary>Rotation angle of the element for variable maximum.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.RotationMaxVariableValue">
      <summary>Highest variable value for rotating the element.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.RotationMinValue">
      <summary>Rotation angle of the element for variable minimum.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.RotationMinVariableValue">
      <summary>Lowest variable value for rotating the element.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.RotationVariable">
      <summary>Name of the variable for rotating the element as string.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.ScreenSymbolNumber">
      <summary>Number of symbol within the picture.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.SelectionActiveResponseVariable">
      <summary>Returns the variable for the Selection Feedback.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.SymbolElementCollection">
      <summary>Returns the list of linked symbols</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.TextColor" />
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.ToolTip">
      <summary>Info-Text for the element (is shown by mouseover in the runtime)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.Top">
      <summary>Top-coordinate of the element</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.Type">
      <summary>Type of the element ()</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.VariableCount">
      <summary>Number of linked variables</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.VerticalReferencePoint" />
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.VisibilityFrom">
      <summary>Minimum value of the variable for visibility of the element</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.VisibilityInterlocking">
      <summary>Returns the interlocking object for visibility</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.VisibilityTo">
      <summary>Maximum value of the variable for visibility of the element</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.VisibilityType">
      <summary>Returns the visibility type</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.VisibilityVariable">
      <summary>Returns the variable for visibility</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.Width">
      <summary>Width of the element</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.WindowHandle">
      <summary>Handle for picture</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.WorldviewVisibleFrom">
      <summary>Lowest zoom step in which the element should be visible in the worldview. Default: -1.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.WorldviewVisibleTo">
      <summary>Highest zoom step in which the element should be visible in the worldview. Default: -1.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.XPositionDynamicMaxMovement">
      <summary>Horizontal position of the element for variable maximum (in pixels).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.XPositionDynamicMaxVariableValue">
      <summary>Highest variable value for horizontal moving of the element.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.XPositionDynamicMinMovement">
      <summary>Horizontal position of the element for variable minimum (in pixels).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.XPositionDynamicMinVariableValue">
      <summary>Lowest variable value for horizontal moving of the element.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.XPositionDynamicVariable">
      <summary>Name of the variable for horizontal moving of the element as string.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.YPositionDynamicMaxMovement">
      <summary>Vertical position of the element for variable maximum (in pixels).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.YPositionDynamicMaxVariableValue">
      <summary>Highest variable value for vertical moving of the element.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.YPositionDynamicMinMovement">
      <summary>Vertical position of the element for variable minimum (in pixels).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.YPositionDynamicMinVariableValue">
      <summary>Lowest variable value for vertical moving of the element.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElement.YPositionDynamicVariable">
      <summary>Name of the variable for vertical moving of the element as string.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IScreenElement.AddVariable" />
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IScreenElement.CreateDynamicProperty">
      <summary>Creates SubItems of the actual object. The parameter has to be the name of the SubItem to be created.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IScreenElement.GetDynamicProperties" />
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IScreenElement.GetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IScreenElement.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IScreenElement.GetVariable" />
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IScreenElement.GetVariable" />
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IScreenElement.GetWpfProperty">
      <summary>Get/Set a property of a certain WPF-Element.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IScreenElement.LeftClickDown">
      <summary>Executes the action of the dynamic element for pressing the left mouse button.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IScreenElement.LeftClickUp">
      <summary>Executes the action of the dynamic element for releasing the left mouse button.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IScreenElement.LeftDoubleClick">
      <summary>Executes the action of the dynamic element for doubleclicking the left mouse button.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IScreenElement.Move">
      <summary>Moves the element to the given position</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IScreenElement.RemoveVariable" />
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IScreenElement.RightClickDown" />
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IScreenElement.RightClickUp" />
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IScreenElement.RightDoubleClick" />
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IScreenElement.SaveActiveXSettings">
      <summary>Saves the current ActiveX-settings into to picture (requires additional Save for the picture).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IScreenElement.SetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IScreenElement.SetWpfProperty">
      <summary>Get/Set a property of a certain WPF-Element.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IScreenElement.Update">
      <summary>Updates the element</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ScreenElement.IScreenElementCollection">
      <summary>This collection contains the defined dynamic elements of a Screen.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElementCollection.Count">
      <summary>Returns count of the elements</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElementCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElementCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ScreenElement.IScreenElementCollection.Parent">
      <summary>The parent object of the current object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IScreenElementCollection.Create">
      <summary>Creates and returns a new Object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IScreenElementCollection.Delete">
      <summary>Deletes the objects from collection</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ScreenElement.IScreenElementCollection.GetItemById" />
    <member name="T:Scada.AddIn.Contracts.ScreenElement.ISymbolElementCollection" />
    <member name="P:Scada.AddIn.Contracts.ScreenElement.ISymbolElementCollection.Count">
      <summary>Returns count of the elements</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ScreenElement.ISymbolElementCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ScreenElement.ISymbolElementCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.ScreenElement.ISymbolElementCollection.Parent">
      <summary>The parent object of the current object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ScreenElement.ISymbolElementCollection.Add" />
    <member name="M:Scada.AddIn.Contracts.ScreenElement.ISymbolElementCollection.Remove" />
    <member name="T:Scada.AddIn.Contracts.ScreenElement.VisibilityType" />
    <member name="T:Scada.AddIn.Contracts.ShiftManagement.BreakDeleteResult" />
    <member name="T:Scada.AddIn.Contracts.ShiftManagement.CalendarSelectionType" />
    <member name="T:Scada.AddIn.Contracts.ShiftManagement.CreatedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.CreatedEventArgs.NewShift" />
    <member name="T:Scada.AddIn.Contracts.ShiftManagement.DeletedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.DeletedEventArgs.DeletedShift" />
    <member name="T:Scada.AddIn.Contracts.ShiftManagement.IBreak" />
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IBreak.EndTime">
      <summary>The shift break end time</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IBreak.Name">
      <summary>The shift break name</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IBreak.StartTime">
      <summary>The shift break start time</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ShiftManagement.IBreak.Delete">
      <summary>Delete shift break</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ShiftManagement.IBreakCollection" />
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IBreakCollection.Count">
      <summary>The amount of shift breaks</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IBreakCollection.Item" />
    <member name="M:Scada.AddIn.Contracts.ShiftManagement.IBreakCollection.Create" />
    <member name="T:Scada.AddIn.Contracts.ShiftManagement.ICalendar" />
    <member name="M:Scada.AddIn.Contracts.ShiftManagement.ICalendar.CreateFilter" />
    <member name="M:Scada.AddIn.Contracts.ShiftManagement.ICalendar.CreateInsertSettings" />
    <member name="M:Scada.AddIn.Contracts.ShiftManagement.ICalendar.CreateShift" />
    <member name="M:Scada.AddIn.Contracts.ShiftManagement.ICalendar.GetSelectedRange" />
    <member name="M:Scada.AddIn.Contracts.ShiftManagement.ICalendar.GetSelectedShifts" />
    <member name="M:Scada.AddIn.Contracts.ShiftManagement.ICalendar.InsertModel" />
    <member name="E:Scada.AddIn.Contracts.ShiftManagement.ICalendar.Created" />
    <member name="E:Scada.AddIn.Contracts.ShiftManagement.ICalendar.Deleted" />
    <member name="E:Scada.AddIn.Contracts.ShiftManagement.ICalendar.Modified" />
    <member name="T:Scada.AddIn.Contracts.ShiftManagement.ICalendarSelectionRange" />
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.ICalendarSelectionRange.EndTime">
      <summary>The selection end time</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.ICalendarSelectionRange.StartTime">
      <summary>The selection start time</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ShiftManagement.IFilter" />
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IFilter.EndTime">
      <summary>The shift filter end time</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IFilter.EquipmentModelGroups">
      <summary>String containing a list of system model groups for which the shifts should be filtered</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IFilter.StartTime">
      <summary>The shift filter start time</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ShiftManagement.IFilter.GetShiftCollection">
      <summary>Returns the all shifts in the shift calendar that fit the filter configuration</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ShiftManagement.IInsertResult" />
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IInsertResult.Error">
      <summary>The error information for inserting a shift model</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ShiftManagement.IInsertSettings" />
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IInsertSettings.EndDate">
      <summary>The shift model insert end time</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IInsertSettings.EquipmentModelGroupString">
      <summary>The shift model insert equipment model groups</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IInsertSettings.ShiftModel">
      <summary>The shift model insert shift model template</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IInsertSettings.StartDate">
      <summary>The shift model insert start time</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IInsertSettings.UseHierarchicEquipmentGroups" />
    <member name="T:Scada.AddIn.Contracts.ShiftManagement.InsertResult" />
    <member name="T:Scada.AddIn.Contracts.ShiftManagement.IShift" />
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShift.BreakCollection" />
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShift.Description">
      <summary>The shift description</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShift.EndTime">
      <summary>The shift end time</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShift.EquipmentModelGroups">
      <summary>String containing a list of all linked system model groups</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShift.Name">
      <summary>The shift name</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShift.ShiftUserCollection" />
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShift.StartTime">
      <summary>The shift start time</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShift.UseHierarchicEquipmentGroups" />
    <member name="M:Scada.AddIn.Contracts.ShiftManagement.IShift.Delete">
      <summary>Delete shift</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ShiftManagement.IShift.Save">
      <summary>Save shift</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ShiftManagement.IShiftCollection" />
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShiftCollection.Count">
      <summary>The amount of shifts</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShiftCollection.Item" />
    <member name="T:Scada.AddIn.Contracts.ShiftManagement.IShiftManagement" />
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShiftManagement.Calendar" />
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShiftManagement.ShiftModelCollection">
      <summary>The shift models object</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ShiftManagement.IShiftModel" />
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShiftModel.Description">
      <summary>The shift model description</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShiftModel.IsFridayEnabled">
      <summary>Flag to make inserting on a Friday possible</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShiftModel.IsHolidayEnabled" />
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShiftModel.IsMondayEnabled">
      <summary>Flag to make inserting on a Monday possible</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShiftModel.IsSaturdayEnabled">
      <summary>Flag to make inserting on a Saturday possible</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShiftModel.IsSundayEnabled">
      <summary>Flag to make inserting on a Sunday possible</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShiftModel.IsThursdayEnabled">
      <summary>Flag to make inserting on a Thursday possible</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShiftModel.IsTuesdayEnabled">
      <summary>Flag to make inserting on a Tuesday possible</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShiftModel.IsWednesdayEnabled">
      <summary>Flag to make inserting on a Wednesday possible</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShiftModel.Name">
      <summary>The shift model name</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ShiftManagement.IShiftModelCollection" />
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShiftModelCollection.Count">
      <summary>The amount of shift models</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShiftModelCollection.Item" />
    <member name="T:Scada.AddIn.Contracts.ShiftManagement.IShiftUser" />
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShiftUser.Name" />
    <member name="T:Scada.AddIn.Contracts.ShiftManagement.IShiftUserCollection" />
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShiftUserCollection.Count" />
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.IShiftUserCollection.Item" />
    <member name="M:Scada.AddIn.Contracts.ShiftManagement.IShiftUserCollection.AddUser">
      <summary>Adds a shift user to the list of shift users</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.ShiftManagement.IShiftUserCollection.RemoveUser">
      <summary>Removes a shift user from the list of shift users</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.ShiftManagement.ModifiedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.ModifiedEventArgs.NewShift" />
    <member name="P:Scada.AddIn.Contracts.ShiftManagement.ModifiedEventArgs.OldShift" />
    <member name="T:Scada.AddIn.Contracts.ShiftManagement.SaveResult" />
    <member name="T:Scada.AddIn.Contracts.Style.IStyle" />
    <member name="P:Scada.AddIn.Contracts.Style.IStyle.Category">
      <summary>Returns the category of the item.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Style.IStyle.Count" />
    <member name="P:Scada.AddIn.Contracts.Style.IStyle.Description" />
    <member name="P:Scada.AddIn.Contracts.Style.IStyle.ExternalReference">
      <summary>Returns the external reference of the item.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Style.IStyle.Guid" />
    <member name="P:Scada.AddIn.Contracts.Style.IStyle.Item" />
    <member name="P:Scada.AddIn.Contracts.Style.IStyle.Item" />
    <member name="P:Scada.AddIn.Contracts.Style.IStyle.Name" />
    <member name="P:Scada.AddIn.Contracts.Style.IStyle.Parent" />
    <member name="P:Scada.AddIn.Contracts.Style.IStyle.Type" />
    <member name="M:Scada.AddIn.Contracts.Style.IStyle.GetDynamicProperties" />
    <member name="M:Scada.AddIn.Contracts.Style.IStyle.GetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.Style.IStyle.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Style.IStyle.SetDynamicProperty" />
    <member name="T:Scada.AddIn.Contracts.Style.IStyleCollection" />
    <member name="P:Scada.AddIn.Contracts.Style.IStyleCollection.Count" />
    <member name="P:Scada.AddIn.Contracts.Style.IStyleCollection.IsLocked" />
    <member name="P:Scada.AddIn.Contracts.Style.IStyleCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Style.IStyleCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Style.IStyleCollection.Parent" />
    <member name="M:Scada.AddIn.Contracts.Style.IStyleCollection.AcceptChanges" />
    <member name="M:Scada.AddIn.Contracts.Style.IStyleCollection.CreateGroup" />
    <member name="M:Scada.AddIn.Contracts.Style.IStyleCollection.CreateItem" />
    <member name="M:Scada.AddIn.Contracts.Style.IStyleCollection.CreateStyleGroupFromElement">
      <summary>Returns a new style group from the given element</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Style.IStyleCollection.Delete">
      <summary>Returns true, if the item was successfully deleted.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Style.IStyleCollection.EnableChanges" />
    <member name="M:Scada.AddIn.Contracts.Style.IStyleCollection.ExportToXml" />
    <member name="M:Scada.AddIn.Contracts.Style.IStyleCollection.ImportFromXml">
      <summary>Imports the selected XML file</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Style.IStyleCollection.IsChangeEnabled" />
    <member name="M:Scada.AddIn.Contracts.Style.IStyleCollection.IsDifferent" />
    <member name="M:Scada.AddIn.Contracts.Style.IStyleCollection.UndoChanges" />
    <member name="M:Scada.AddIn.Contracts.Style.IStyleCollection.UpdateLocalVersion" />
    <member name="T:Scada.AddIn.Contracts.Style.StyleType" />
    <member name="T:Scada.AddIn.Contracts.Symbol.ISymbolLibrary" />
    <member name="P:Scada.AddIn.Contracts.Symbol.ISymbolLibrary.SymbolNames">
      <summary>Returns a list of available symbols</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Symbol.ISymbolLibrary.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Symbol.ISymbolLibrary.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Symbol.ISymbolLibrary.ImportFromXml">
      <summary>Imports the selected XML file</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.TimeModel.ITimeFunction" />
    <member name="P:Scada.AddIn.Contracts.TimeModel.ITimeFunction.Function" />
    <member name="P:Scada.AddIn.Contracts.TimeModel.ITimeFunction.Id">
      <summary>Returns count of contained objects</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.TimeModel.ITimeFunction.Interval">
      <summary>Returns count of contained objects</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.TimeModel.ITimeFunction.IsActive" />
    <member name="P:Scada.AddIn.Contracts.TimeModel.ITimeFunction.IsCyclic" />
    <member name="P:Scada.AddIn.Contracts.TimeModel.ITimeFunction.IsLocked">
      <summary>Returns true when the current module is Locked by another user (editor).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.TimeModel.ITimeFunction.IsMonthly">
      <summary>Returns time-function by position or ID</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.TimeModel.ITimeFunction.IsYearly" />
    <member name="P:Scada.AddIn.Contracts.TimeModel.ITimeFunction.Name">
      <summary>Returns time-function by position or ID</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.TimeModel.ITimeFunction.Parent">
      <summary>Parent of object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.TimeModel.ITimeFunction.StartTime">
      <summary>Parent of object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.TimeModel.ITimeFunction.AcceptChanges">
      <summary>Save module modifications to server (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.TimeModel.ITimeFunction.EnableChanges">
      <summary>Allow module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.TimeModel.ITimeFunction.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.TimeModel.ITimeFunction.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.TimeModel.ITimeFunction.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.TimeModel.ITimeFunction.IsChangeEnabled">
      <summary>Returns true when the current module checked out by the current user (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.TimeModel.ITimeFunction.IsDayActive">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.TimeModel.ITimeFunction.IsDifferent">
      <summary>Returns true when the local and server version are different (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.TimeModel.ITimeFunction.ModifyExecutionDay">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.TimeModel.ITimeFunction.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.TimeModel.ITimeFunction.UndoChanges">
      <summary>Undo module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.TimeModel.ITimeFunction.UpdateLocalVersion">
      <summary>Get the latest version from the server (editor).</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.TimeModel.ITimeFunctionCollection" />
    <member name="P:Scada.AddIn.Contracts.TimeModel.ITimeFunctionCollection.Count">
      <summary>Returns count of contained objects</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.TimeModel.ITimeFunctionCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.TimeModel.ITimeFunctionCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.TimeModel.ITimeFunctionCollection.Parent">
      <summary>Parent of object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.TimeModel.ITimeFunctionCollection.Create">
      <summary>Creates and returns a new Object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.TimeModel.ITimeFunctionCollection.Delete">
      <summary>Deletes the objects from collection</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.TimeModel.ITimeFunctionCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.TimeModel.ITimeFunctionCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.TimeModel.ITimeFunctionCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.TimeModel.ITimeFunctionCollection.ImportFromXml">
      <summary>Imports the selected XML file</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.UnitConversion.IMeasuringUnitCollection" />
    <member name="M:Scada.AddIn.Contracts.UnitConversion.IMeasuringUnitCollection.CreateDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UnitConversion.IMeasuringUnitCollection.ExportToXml" />
    <member name="M:Scada.AddIn.Contracts.UnitConversion.IMeasuringUnitCollection.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UnitConversion.IMeasuringUnitCollection.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UnitConversion.IMeasuringUnitCollection.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UnitConversion.IMeasuringUnitCollection.ImportFromXml">
      <summary>Imports the selected XML file</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UnitConversion.IMeasuringUnitCollection.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.UserAdministration.IModifiedFunctionAuthorization" />
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IModifiedFunctionAuthorization.Function" />
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IModifiedFunctionAuthorization.Level" />
    <member name="T:Scada.AddIn.Contracts.UserAdministration.IModifiedUser" />
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IModifiedUser.Identification" />
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IModifiedUser.Status" />
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IModifiedUser.User" />
    <member name="T:Scada.AddIn.Contracts.UserAdministration.IModifiedUserGroup" />
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IModifiedUserGroup.Name" />
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IModifiedUserGroup.Status" />
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IModifiedUserGroup.UserGroup" />
    <member name="T:Scada.AddIn.Contracts.UserAdministration.IUser" />
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IUser.AuthorizationLevel" />
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IUser.AuthorizationLevel1">
      <summary>Rights/Password-Levels 1</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IUser.AuthorizationLevel2">
      <summary>Rights/Password-Levels 2</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IUser.AuthorizationLevel3">
      <summary>Rights/Password-Levels 3</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IUser.CanPowerUserModifyPowerUsers" />
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IUser.Identification" />
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IUser.IsActive" />
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IUser.IsAdministrator">
      <summary>User has admin rights</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IUser.IsLocked" />
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IUser.Name">
      <summary>Name</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IUser.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IUser.UserType" />
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUser.ChangePassword">
      <summary>Changes the password</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUser.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUser.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUser.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUser.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUser.SetIdentification">
      <summary>Changes the TagName</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.UserAdministration.IUserAdministration">
      <summary>This object represents the user administration of the current project.With this object new users can be created and existing users can be edited/deleted during online operation.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.IsLocked">
      <summary>Returns true when the current module is Locked by another user (editor).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.LoggedInUserIdentification">
      <summary>Current logged on user</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.LoggedInUserName">
      <summary>TagName of the logged on user</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.UserCount">
      <summary>Count of defined users</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.UserGroupCount">
      <summary>Count of defined usergroups</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.AcceptChanges">
      <summary>Save module modifications to server (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.CheckLogin">
      <summary>Checks the Login of a user with given ID and password</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.CheckLogin">
      <summary>Checks the Login of a user with given ID and password</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.CreateUser">
      <summary>Creates a new user</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.CreateUser">
      <summary>Creates a new user</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.CreateUserGroup">
      <summary>Creates a new usergroup.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.DeleteUser">
      <summary>Deletes the given user</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.DeleteUserGroup">
      <summary>Deletes the given usergroup.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.EnableChanges">
      <summary>Allow module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.ExportUserGroupsToXml">
      <summary>Exports the usergroup list.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.ExportUserGroupToXml">
      <summary>Exports the Item with given Name oder Index.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.ExportUserGroupToXml">
      <summary>Exports the Item with given Name oder Index.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.ExportUsersToXml">
      <summary>Exports the user list</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.ExportUserToXml">
      <summary>Exports the Item with given Name oder Index.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.ExportUserToXml">
      <summary>Exports the Item with given Name oder Index.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.GetUser">
      <summary>Returns user by position or by name</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.GetUser">
      <summary>Returns user by position or by name</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.GetUserGroup">
      <summary>Returns usergroup by position or by name.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.GetUserGroup">
      <summary>Returns usergroup by position or by name.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.ImportUserGroupsFromXml">
      <summary>Imports the usergroup list.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.ImportUsersFromXml">
      <summary>Imports the user list.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.IsChangeEnabled">
      <summary>Returns true when the current module checked out by the current user (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.IsDifferent">
      <summary>Returns true when the local and server version are different (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.Login">
      <summary>Logs in the user with the given ID</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.Login">
      <summary>Logs in the user with the given ID</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.Logout">
      <summary>Log out the current user</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.UndoChanges">
      <summary>Undo module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.UpdateLocalVersion">
      <summary>Get the latest version from the server (editor).</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.PasswordValidated" />
    <member name="E:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.Saved">
      <summary>Wird gefeuert beim Speicher der Benutzervewaltung.</summary>
    </member>
    <member name="E:Scada.AddIn.Contracts.UserAdministration.IUserAdministration.UserChanged">
      <summary>This event is executed, when a user is logged into the system.</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.UserAdministration.IUserGroup" />
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserGroup.CreateDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserGroup.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserGroup.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserGroup.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.UserAdministration.IUserGroup.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.UserAdministration.LoginResult" />
    <member name="T:Scada.AddIn.Contracts.UserAdministration.LoginType" />
    <member name="T:Scada.AddIn.Contracts.UserAdministration.PasswordValidatedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.UserAdministration.PasswordValidatedEventArgs.Identification" />
    <member name="P:Scada.AddIn.Contracts.UserAdministration.PasswordValidatedEventArgs.IsSuccessful" />
    <member name="P:Scada.AddIn.Contracts.UserAdministration.PasswordValidatedEventArgs.Password" />
    <member name="T:Scada.AddIn.Contracts.UserAdministration.SavedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.UserAdministration.SavedEventArgs.ModifiedFunctionAuthorization" />
    <member name="P:Scada.AddIn.Contracts.UserAdministration.SavedEventArgs.ModifiedUserGroups" />
    <member name="P:Scada.AddIn.Contracts.UserAdministration.SavedEventArgs.ModifiedUsers" />
    <member name="T:Scada.AddIn.Contracts.UserAdministration.UserAdministrationFunctionAuthorization" />
    <member name="T:Scada.AddIn.Contracts.UserAdministration.UserAdministrationModifiedStatus" />
    <member name="T:Scada.AddIn.Contracts.UserAdministration.UserChangedEventArgs" />
    <member name="T:Scada.AddIn.Contracts.UserAdministration.UserType" />
    <member name="T:Scada.AddIn.Contracts.Variable.AddressingOption" />
    <member name="T:Scada.AddIn.Contracts.Variable.BulkChangedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Variable.BulkChangedEventArgs.HigherStates" />
    <member name="P:Scada.AddIn.Contracts.Variable.BulkChangedEventArgs.LowerStates" />
    <member name="P:Scada.AddIn.Contracts.Variable.BulkChangedEventArgs.Times" />
    <member name="P:Scada.AddIn.Contracts.Variable.BulkChangedEventArgs.Values" />
    <member name="P:Scada.AddIn.Contracts.Variable.BulkChangedEventArgs.VariableIds" />
    <member name="P:Scada.AddIn.Contracts.Variable.BulkChangedEventArgs.Variables" />
    <member name="T:Scada.AddIn.Contracts.Variable.ChangedEventArgs" />
    <member name="P:Scada.AddIn.Contracts.Variable.ChangedEventArgs.Variable" />
    <member name="T:Scada.AddIn.Contracts.Variable.ChannelType" />
    <member name="T:Scada.AddIn.Contracts.Variable.DataType" />
    <member name="T:Scada.AddIn.Contracts.Variable.DriverMode" />
    <member name="T:Scada.AddIn.Contracts.Variable.DriverState" />
    <member name="T:Scada.AddIn.Contracts.Variable.IDataType" />
    <member name="P:Scada.AddIn.Contracts.Variable.IDataType.EditorLimitValueCount">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IDataType.Id" />
    <member name="P:Scada.AddIn.Contracts.Variable.IDataType.IecType">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IDataType.IsDeletable">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IDataType.IsLocked">
      <summary>Returns true when the current module is Locked by another user (editor).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IDataType.IsSimpleDataType" />
    <member name="P:Scada.AddIn.Contracts.Variable.IDataType.Name" />
    <member name="P:Scada.AddIn.Contracts.Variable.IDataType.Parent" />
    <member name="P:Scada.AddIn.Contracts.Variable.IDataType.StructureElementCount">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataType.AcceptChanges">
      <summary>Save module modifications to server (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataType.CreateEditorLimitValue">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataType.CreateStructureElement">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataType.DeleteEditorLimitValue">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataType.DeleteStructureElement">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataType.DeleteStructureElement">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataType.EnableChanges">
      <summary>Allow module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataType.GetDynamicProperties">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataType.GetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataType.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataType.GetEditorLimitValue">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataType.GetStructureElement">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataType.IsChangeEnabled">
      <summary>Returns true when the current module checked out by the current user (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataType.IsDifferent">
      <summary>Returns true when the local and server version are different (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataType.IsSupportedByDriver" />
    <member name="M:Scada.AddIn.Contracts.Variable.IDataType.SetDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataType.UndoChanges">
      <summary>Undo module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataType.UpdateLocalVersion">
      <summary>Get the latest version from the server (editor).</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Variable.IDataTypeCollection" />
    <member name="P:Scada.AddIn.Contracts.Variable.IDataTypeCollection.Count" />
    <member name="P:Scada.AddIn.Contracts.Variable.IDataTypeCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Variable.IDataTypeCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Variable.IDataTypeCollection.Parent" />
    <member name="M:Scada.AddIn.Contracts.Variable.IDataTypeCollection.CreateSimpleDataType">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataTypeCollection.CreateStructureDataType">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataTypeCollection.DeleteDataType">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataTypeCollection.DeleteDataType">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataTypeCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataTypeCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataTypeCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataTypeCollection.ImportFromXml">
      <summary>Imports the selected XML file</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataTypeCollection.ImportFromXml">
      <summary>Imports the selected XML file</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataTypeCollection.IsDeletable">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDataTypeCollection.IsDeletable">
      <summary>-</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Variable.IDriver">
      <summary>The object Driver includes important information on the defined drivers.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IDriver.Identification" />
    <member name="P:Scada.AddIn.Contracts.Variable.IDriver.IsLocked">
      <summary>Returns true when the current module is Locked by another user (editor).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IDriver.Name">
      <summary>Returns the name (EXE) of the driver.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IDriver.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDriver.AcceptChanges">
      <summary>Save module modifications to server (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDriver.CreateDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.Variable.IDriver.EnableChanges">
      <summary>Allow module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDriver.EndConfiguration">
      <summary>Closes driver config and stops driver.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDriver.ExportToXml" />
    <member name="M:Scada.AddIn.Contracts.Variable.IDriver.GetDynamicProperties" />
    <member name="M:Scada.AddIn.Contracts.Variable.IDriver.GetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.Variable.IDriver.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDriver.ImportFromXml" />
    <member name="M:Scada.AddIn.Contracts.Variable.IDriver.ImportVariables">
      <summary>Imports variables from PLC or file.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDriver.InitializeConfiguration">
      <summary>Starts driver and opens driver config for access via properties.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDriver.IsChangeEnabled">
      <summary>Returns true when the current module checked out by the current user (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDriver.IsChannelSupported">
      <summary>Returns True when the given channeltype is supported for the given datatype.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDriver.IsDifferent">
      <summary>Returns true when the local and server version are different (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDriver.SetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.Variable.IDriver.UndoChanges">
      <summary>Undo module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDriver.UpdateLocalVersion">
      <summary>Get the latest version from the server (editor).</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Variable.IDriverCollection">
      <summary>A collection which contains the defined drivers of the project.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IDriverCollection.Count">
      <summary>Count of defined drivers</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IDriverCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Variable.IDriverCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Variable.IDriverCollection.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IDriverCollection.Create" />
    <member name="M:Scada.AddIn.Contracts.Variable.IDriverCollection.Delete" />
    <member name="M:Scada.AddIn.Contracts.Variable.IDriverCollection.ShowCreateDialog">
      <summary>Opens the zenon standard dialog "Create driver".</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Variable.IecType" />
    <member name="T:Scada.AddIn.Contracts.Variable.IEditorLimitValue">
      <summary>Represents the limits from the variables as well as from the datatypes.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.ClassIndex" />
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.Color">
      <summary>Color of this Limit.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.DelayTime" />
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.GroupIndex" />
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.HelpChapter">
      <summary>Represents the HelpCapture if you use the embedded help features of zenOn.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.HelpFile">
      <summary>Represents the HelpFile if you use the embedded help features of zenOn.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.IsActive" />
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.IsAlarmCauseRequired" />
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.IsCommentRequired" />
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.IsFlashing">
      <summary>Blinking will be enabled if this flag is set to true.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.IsInAlarmMessageList">
      <summary>Should the Limit raise an Alarm.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.IsInChronologicalEventList">
      <summary>Write into CEL.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.IsInvisible">
      <summary>Invisible Flag can be used with the 'Status' element for example.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.IsMaximum">
      <summary>MIN or MAXLimit will be reached on underrun the limit or on overflow the setting.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.IsPrintingEnabled">
      <summary>Alarm or limit violation (with set option "in CEL") is printed online.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.IsSimpleDataType">
      <summary>This method returns -1 when the datatype is a simple datatype and 0 when it is a complex datatype.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.IsToAcknowledge">
      <summary>The Alarm has to be acknowledged by the user whe n this flag is set to true.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.IsTwoStageAcknowledgement">
      <summary>The Alarm has to be deleted by the user when this flag is set to true.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.IsVariableLinked">
      <summary>The limit value is not defined through a fixed technical assignment of value, but through the technical value of another variable.A 'Variable' has to be linked also with this limit.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.ParentId">
      <summary>ID of the variable</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.Text">
      <summary>Text of the limit as it is displayed in lists, in the status line, and in dynamic elements on a limit violation.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.ThresholdValue">
      <summary>Is used for the releasing of the limit violation.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.Value" />
    <member name="P:Scada.AddIn.Contracts.Variable.IEditorLimitValue.Variable">
      <summary>Variable as object, which should be used as dynamic limit value.Only available, if the dynamic limit is active!</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IEditorLimitValue.GetDynamicProperties" />
    <member name="M:Scada.AddIn.Contracts.Variable.IEditorLimitValue.GetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.Variable.IEditorLimitValue.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IEditorLimitValue.SetDynamicProperty" />
    <member name="T:Scada.AddIn.Contracts.Variable.ILimitValue">
      <summary>The collection Variables contains all defined limits of a variable.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.ILimitValue.ClassIndex">
      <summary>Alarmclass</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.ILimitValue.GroupIndex">
      <summary>Alarmgroup</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.ILimitValue.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.ILimitValue.Text">
      <summary>Alarmtext</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.ILimitValue.Value">
      <summary>Value</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.ILimitValue.GetDynamicProperties" />
    <member name="M:Scada.AddIn.Contracts.Variable.ILimitValue.GetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.Variable.ILimitValue.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.ILimitValue.IsMaximum">
      <summary>Returns 'True' if the type of the current limit is 'Max', violated as soon as the current value is higher.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.ILimitValue.IsMinimum">
      <summary>Returns 'True' if the type of the current limit is 'Min', violated as soon as the current value is lower.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.ILimitValue.SetDynamicProperty" />
    <member name="T:Scada.AddIn.Contracts.Variable.ILimitValueCollection">
      <summary>With this collection you can access the defined limits of a variable.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.ILimitValueCollection.Count">
      <summary>Count of defined limits</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.ILimitValueCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Variable.ILimitValueCollection.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Variable.IOnlineVariableContainer">
      <summary>OnlineVariable is a container for variables.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IOnlineVariableContainer.Count">
      <summary>Returns the number of available objects.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IOnlineVariableContainer.EventMode">
      <summary>Activated event mode.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IOnlineVariableContainer.IsActive">
      <summary>Returns the communication status of the online variable.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IOnlineVariableContainer.Item" />
    <member name="P:Scada.AddIn.Contracts.Variable.IOnlineVariableContainer.Item" />
    <member name="P:Scada.AddIn.Contracts.Variable.IOnlineVariableContainer.Name">
      <summary>Name of the online-variable (unique)</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IOnlineVariableContainer.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IOnlineVariableContainer.Activate" />
    <member name="M:Scada.AddIn.Contracts.Variable.IOnlineVariableContainer.ActivateBulkMode">
      <summary>Activate bulk event mode.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IOnlineVariableContainer.AddVariable" />
    <member name="M:Scada.AddIn.Contracts.Variable.IOnlineVariableContainer.AddVariable" />
    <member name="M:Scada.AddIn.Contracts.Variable.IOnlineVariableContainer.ApplySharedMemoryValues" />
    <member name="M:Scada.AddIn.Contracts.Variable.IOnlineVariableContainer.Deactivate" />
    <member name="M:Scada.AddIn.Contracts.Variable.IOnlineVariableContainer.GetDynamicProperties" />
    <member name="M:Scada.AddIn.Contracts.Variable.IOnlineVariableContainer.GetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.Variable.IOnlineVariableContainer.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IOnlineVariableContainer.Remove" />
    <member name="M:Scada.AddIn.Contracts.Variable.IOnlineVariableContainer.SetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.Variable.IOnlineVariableContainer.SetSharedMemoryConfiguration" />
    <member name="E:Scada.AddIn.Contracts.Variable.IOnlineVariableContainer.BulkChanged" />
    <member name="E:Scada.AddIn.Contracts.Variable.IOnlineVariableContainer.Changed" />
    <member name="T:Scada.AddIn.Contracts.Variable.IOnlineVariableContainerCollection">
      <summary>This collection contains the single objects OnlineVariable.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IOnlineVariableContainerCollection.Count">
      <summary>Count of defined online-variables</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IOnlineVariableContainerCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Variable.IOnlineVariableContainerCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Variable.IOnlineVariableContainerCollection.Parent">
      <summary>Parent-object</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IOnlineVariableContainerCollection.Create" />
    <member name="M:Scada.AddIn.Contracts.Variable.IOnlineVariableContainerCollection.Delete" />
    <member name="T:Scada.AddIn.Contracts.Variable.IStructureElement">
      <summary>Represents the items of a structure datatype.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IStructureElement.Parent">
      <summary>Returns the parent object.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IStructureElement.GetDynamicProperties" />
    <member name="M:Scada.AddIn.Contracts.Variable.IStructureElement.GetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.Variable.IStructureElement.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IStructureElement.MoveElementDown">
      <summary>Move the ComplexItem one down in the Tree.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IStructureElement.MoveElementUp">
      <summary>Move the ComplexItem one up in the Tree.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IStructureElement.SetDynamicProperty" />
    <member name="T:Scada.AddIn.Contracts.Variable.IVariable" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.Alignment" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.ArchiveFillerValue" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.ArraySize" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.BitNumber" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.CurrentViolatedCondition">
      <summary>Returns the current violated rema state.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.CurrentViolatedLimitValue">
      <summary>Returns the current violated limit, if there is one.</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.DataBlock" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.DataType" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.Digits" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.Driver" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.EditorLimitValueCount" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.HigherState" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.Id" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.Identification" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.IecType" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.IsArray" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.IsLimitActive">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.IsLocked">
      <summary>Returns true when the current module is Locked by another user (editor).</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.IsOnline">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.IsRdaActive">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.IsReactionMatrixActive">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.IsReadOnly" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.LastUpdateTime" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.LastUpdateTimeMilliSeconds" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.LimitValueCollection">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.LowerState" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.MeasuringMaximumRange" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.MeasuringMinimumRange" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.Name" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.NetAddress" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.Offset" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.Parent" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.ResourcesLabel" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.SecondaryUnitDigits" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.SecondaryUnitName" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.ServiceGridAccessPermission">
      <summary>Returns the enum ServiceGridAccessPermissionLevel with the options "None","Read" and "ReadAndWrite".</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.SignalMaximumRange" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.SignalMinimumRange" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.StateString" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.StringLength" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.SubItemCount">
      <summary>-</summary>
    </member>
    <member name="P:Scada.AddIn.Contracts.Variable.IVariable.Unit" />
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.AcceptChanges">
      <summary>Save module modifications to server (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.ActivateSubItem">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.ActivateSubItem">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.CalculatePrimaryUnitValue">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.CalculateSecondaryUnitValue">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.ChangeAlternateValue">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.CreateDynamicProperty">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.CreateEditorLimitValue">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.DeactivateSubItem">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.DeactivateSubItem">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.DeleteEditorLimitValue">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.EnableChanges">
      <summary>Allow module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.GetDynamicProperties" />
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.GetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.GetDynamicPropertyParameter">
      <summary>Returns the PropParam objekt of the given DynProperty</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.GetEditorLimitValue" />
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.GetSubItem">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.GetSubItemName">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.GetValue" />
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.IsChangeEnabled">
      <summary>Returns true when the current module checked out by the current user (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.IsDifferent">
      <summary>Returns true when the local and server version are different (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.SetDynamicProperty" />
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.SetValue">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.SetValue">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.SetValue">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.SetValue">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.SetValue">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.UndoChanges">
      <summary>Undo module modifications (editor).</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariable.UpdateLocalVersion">
      <summary>Get the latest version from the server (editor).</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Variable.IVariableCollection" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariableCollection.Count" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariableCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariableCollection.Item" />
    <member name="P:Scada.AddIn.Contracts.Variable.IVariableCollection.Parent" />
    <member name="M:Scada.AddIn.Contracts.Variable.IVariableCollection.AcceptChanges" />
    <member name="M:Scada.AddIn.Contracts.Variable.IVariableCollection.ChangeArrayVariable">
      <summary>Modify the given array variable to match the new configuration.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariableCollection.Create" />
    <member name="M:Scada.AddIn.Contracts.Variable.IVariableCollection.CreateArrayVariable">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariableCollection.Delete" />
    <member name="M:Scada.AddIn.Contracts.Variable.IVariableCollection.EnableAutoSave">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariableCollection.EnableChanges" />
    <member name="M:Scada.AddIn.Contracts.Variable.IVariableCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariableCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariableCollection.ExportToXml">
      <summary>Exports the Item with given Name oder Index</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariableCollection.GetItemById" />
    <member name="M:Scada.AddIn.Contracts.Variable.IVariableCollection.GetServiceGridVariables">
      <summary>This function can be used to retrieve a String-Array containing all variables for which the "ServiceGridAccessPermission" has been set to the given level.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariableCollection.ImportFromXml">
      <summary>-</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariableCollection.ImportXmlDirect">
      <summary>Imports the selected XML file</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariableCollection.ModifyVariable">
      <summary>Modify the given variable to match the new configuration.</summary>
    </member>
    <member name="M:Scada.AddIn.Contracts.Variable.IVariableCollection.ShowCreateDialog">
      <summary>Opens the zenon standard dialog "Create variable".</summary>
    </member>
    <member name="T:Scada.AddIn.Contracts.Variable.ServiceGridAccessPermissionLevel" />
    <member name="T:Scada.AddIn.Contracts.Variable.ShowCreateDriverDialogReturnResult" />
    <member name="T:Scada.AddIn.Contracts.Variable.ShowCreateVariableDialogReturnResult" />
    <member name="T:Scada.AddIn.Contracts.Variable.VariableEventMode" />
  </members>
</doc>